Ecconia#4929: I am having about 17 servers in my server list by now. <[newline]> And this is the point, where I would like to tag them / have a folder architecture. <[newline]> Also, where is the option to disable pinging some selected servers automatically? <[newline]> This literally exposes the IP to all of them - for some one might not want that. <[newline]> (+It lags my game significantly just to open the server list - which should not be the case btw).
GHXX#9078: modding or something
GHXX#9078: we can just explore new stuff without consequences
Chime#3134: Hahaha
GHXX#9078: i wouldnt say its rude, but pretty fitting
Nik#1011: 👀
Nik#1011: hey that's a rude thing to say about us
GHXX#9078: indeed, but i think the tcpbridge shows that an implementation is possible, even though it is not entirely straight forward 🙂
Chime#3134: mods are a good way for us to help explore the problem space and refine things.  If we make a disaster then Jimmy can avoid it entirely 😄
binaryclock03#5762: Thanks but I prefer to stay away from mods for now. I was suggesting it for the vanilla game
GHXX#9078: yeeeeessssssssss
Ecconia#4929: <@!109262887310065664> made a mod for that, look in "<#910673109164638239>" I think its called TCP-Bridge
binaryclock03#5762: LW, the internet dlc lol
binaryclock03#5762: Would be pretty cool to be able to send bits to other servers
GHXX#9078: so its not much additional load <@!195021798868254720>
GHXX#9078: the shifting wouldnt really incur much of a cost, as, compared to an inverter, instead of <[newline]> reading the input bool <[newline]> negating the bool <[newline]> writing the output bool <[newline]>  <[newline]> we do <[newline]> reading the input bool <[newline]> do a rightshift 1 on the buffer-int <[newline]> set the output to (buffer-int)&1>0 <[newline]> if the input bool is true, increment the buffer by a constant set before (probably 1<<30)
Chime#3134: large structures would have a cache locality problem, but it would amount to a load+store rather than a load+store+shift.  Either way, the big COST seems to be triggering on every single tick.  (Needed unless we get a "queue for logic update in N ticks" and we've stored lengths or something)
GHXX#9078: an array of bytes or bools will be much more inefficient
GHXX#9078: if we stay below 65/66 ticks total time, the most efficient thing will be bitwise long with shifting
Arc#5873: option to simulate this in LW 😂  https://youtu.be/AaZ_RSt0KP8
Chime#3134: right; normally a ring buffer would use two indexes to track in/out progress, but if we've already set it to the configured length we would only need one.
PseudoGoose#2841: better than that, a constant time approach would be to keep an index into the array and increment that (modulo the length of the array), or use a deque which is designed to (logically, not physically in memory) slide data around by pushing/popping from both ends.
GHXX#9078: like, thats 64 buffers in one already xD
GHXX#9078: and if you want more you just gotta chain
GHXX#9078: but the UI could just limit it to 64 ticks
GHXX#9078: beyond that a byte array could be used where you shift each byte to the right and set the highest bit to the bit you shifted out from the higher byte
GHXX#9078: as long as you stay below 64 or maybe 65 ticks you can easily use a long
GHXX#9078: the one and only 😛
GHXX#9078: yes
Chime#3134: side note are you the GHXX that had a rimworld research advancement mod?  Because I really liked that 😉
Chime#3134: you need to keep the input before it becomes output.  64 samples seems low, but it might be a reasonable start.  To do that you're already looking at LogicAPI.Data.ComponentData.CustomData and manual (de)serialize.  Well, maybe a single int would work with the existing defaults, but either way that's a byte[].
GHXX#9078: but there is no reason to keep the output
Chime#3134: Maybe.  Already working on a self-looped thing like that (LFSR) though they're easy enough to implement discretely right now it hasn't been a priority
GHXX#9078: <@!195021798868254720>
GHXX#9078: and just each tick you set the output to the smallest bit, and then shift the buffer downwards and set the bit you want to start at (simply increment by 0b1000000000) for the case of 10 tick delay
GHXX#9078: id suggest using a single number, e.g. 32 or 64 bit unsigned
Chime#3134: From the modding side of the house, I've been looking at appropriate delay-line memory implementation, for that early 1950s computing feel.  Similar mechanics, though maybe a larger internal buffer with ring-access.  E.g. a bit vector lasting N, where N can extend into the thousands or more.
Ecconia#4929: You are not alone with this issue: <[newline]> <https://logicworld.net/tracker/247> & <[newline]> <https://logicworld.net/tracker/248> <[newline]> Feel free to improve these.
DanielGJ44#4557: (I do agree with the suggestion)
DanielGJ44#4557: Saltypretzel: back button <[newline]> Me, an intellectual: Alt+F4
Saltypretzel#0321: cause i you click the wrong one
Saltypretzel#0321: or any loading screeens for that matter
Saltypretzel#0321: small but i think a kinda nice addition. A back button on the loading screen of joining a server.
DanielGJ44#4557: I think as it stands with the current LW site, that kinda thing is possible right now, so I'd start it there and then migrate it to the wiki when it's all set up
DanielGJ44#4557: I trust that Jimmy will not only develop such a system with Felipé, but will take all of our recommendations into account to make an extremely efficient system
binaryclock03#5762: Idk lol
binaryclock03#5762: Forki
binaryclock03#5762: Wikum
binaryclock03#5762: We need a wiki that's also a forum
binaryclock03#5762: I mean it's true in both cases
PseudoGoose#2841: at first I thought this was a remark about programming
DanielGJ44#4557: But I do think discussion is essential to the success of such a system
DanielGJ44#4557: I feel like if I posted a tutorial/starting point on discord I'd feel responsible for technical support/clarification/updates to that thread, whereas a wiki could be crowdsourced. I'd personally be a lot more likely to contribute to a wiki as I'd have no burden of maintenance
DanielGJ44#4557: I think if the Logic World Wiki has the same comment functionally as the current website it would be pretty much the optimal way to handle it
DanielGJ44#4557: See the issue is, people don't use threads unless they are literally forced to
binaryclock03#5762: Yeah I agree with circuitgamer
circuitgamer77#0377: I think the advantage of a channel in Discord is that people can directly start threads about topics and contribute their own resources, whereas a wiki is much less interactive and more limited in general.  Both would be good, though.  I just think the channel is better.
Erikbot#6368: wouldn't a LW wiki be better for that? information kinda gets lost in discord
binaryclock03#5762: For example:  <[newline]> Something that a lot of people would probably enjoy knowing about are karnaugh maps
binaryclock03#5762: Discord suggestion, make a logic world academy channel where people can teach people about digital logic and some of the fundamentals behind it
circuitgamer77#0377: I don't know if this is a bug or a feature, but it would be nice if screenshots showed the UI if the UI is open.  If you don't want it in the screenshot, just hide it before taking the screenshot.
ThaCuber#5611: Nice
Ecconia#4929: <@!595039976509538381>
ThaCuber#5611: I know this is superfluous and not really needed, but can there be day and night cycle? Some builds can look pretty cool in night time!
Erikbot#6368: the technical name for that would be a circular buffer. given how expensive loading stuff from ram is, pure bit shifts are probably more efficient, but more annoying to implement.
GHXX#9078: or even better, maybe it could just be a checkbox inside the current delayer gui which, when checked enforces this new behaviour, otherwise the original one is used. The color of the block should probably be different when the box is checked though, so that there is a visual difference
GHXX#9078: has been suggested before as a change, but id suggest adding a new block called a fuzzy delayer, which sets the output to the input how it was N ticks ago, where N is configurable [2-30]. <[newline]> Implementation can be done using a bytearray and a moving index, from which the output gets read and the new input gets written to, or something, or using a 32bit int using shift operations, so it should be very efficient
Riku#9814: Wow I never thought of that. Thanks \:)
Ecconia#4929: Interesting suggestion, btw for now you could place down a 1x1 square flat board, then you get height and fine placement. And it is 2 less components in your case.
Riku#9814: I think I have a suggestion, though it might be a dumb one. Currently, we have mounts and they can lift up anything. However, it can be useful to have pegs be on a different elevation to prevent signals from crossing. We can put pegs directly on boards with very fine control, but we lose that control if we need to elevate the pegs. (See screenshot) I think it might be helpful to allow pegs to be resized height-wise or to allow greater control over the mounts.
PseudoGoose#2841: am curious how fine rotation will interact with the fixed point conversion. I imagine you could place all nicely-aligned subgroups of components (groups of components where there are only right angles) with a perfectly precise system in relative coordinate spaces, before converting to a more appropriate number system to resolve the remaining fine rotations that link the subgroups.
Erikbot#6368: does it cost developers anything to use cloud saves?
Jimmy#8080: I believe I don't even need to write code for it, I just have to muck with the steam configuration
Jimmy#8080: Exactly
DanielGJ44#4557: If it has no cost to implement/steam provides the service for free, I don't see why not
DanielGJ44#4557: Yeah I think in this case it's more that steam is providing the service independently as opposed to workshop which would most likely have to actually be integrated
Ecconia#4929: (Syncing files with Steam probably does not even need the change of source-code - at least I do not see why). <[newline]> (Its literally syncing a folder... -> Needs setup for black/whitelists though. And maybe the game should start to compress files before it actually applies syncing.) <[newline]> (As long as the rest of Steam stays out of LW, I do not mind syncing - well I would turn it off anyway.)
DanielGJ44#4557: I suppose there could be a MHG-based cloud service
DanielGJ44#4557: Doesn't that conflict with your policy about not worsening the experience for people who chose to pirate or buy on another platform though
Jimmy#8080: well before then
Dragon Lord#6944: 1.0?
Jimmy#8080: Coming soonish probably maybe
NxthingbutV0id#1939: Steam cloud saves, I want to be able to world on 1 project over different devices
circuitgamer77#0377: Oops, misremembered that.  Sorry!
Jimmy#8080: The idea is that the fixed point units will be so small you can't even notice them.
Jimmy#8080: 30x30 cm. I'm planning on making units 1mm, so tiles will be 300x300 units.
circuitgamer77#0377: He's working on fixed-point for the next update, with each tile being 30x30 units
LOOPS#1372: Really quickly tho you'll see small spaces between components and drift and begin being unable to place components next to eachother; all sorts of annoying shit. Im saying just get rid of floating point precision and make positions rounded to the nearest 90 degrees and like 0.5 units or something
circuitgamer77#0377: Gridlands?
LOOPS#1372: There should be a world option to constrain all placements to a grid, I hardly ever want to place something not 90 degrees to another component and presumably all the floating point issues would disappear and you'd be able to build as tall as you want
Jimmy#8080: good ideas
CrispyPin#1149: so you have to click on the armrest or something to exit
CrispyPin#1149: a physical "leave" button on the chair so you can use the "leave chair" button on a key component
CrispyPin#1149: a peg on the back of chairs that outputs if the chair is occupied
Justin#2534: You could make control panels with screens linked to cameras facing the parts of the board you are controlling
Justin#2534: Especially if there were screens that displayed camera output like render target cameras from Garrys Mod
binaryclock03#5762: Now that would be cool
Saltypretzel#0321: Imagine cameras in LW
Erikbot#6368: https://en.wikipedia.org/wiki/Optoelectronics
binaryclock03#5762: Add opto electronics :)
Erikbot#6368: easy, just add raytracing that traces individual wavelengths
CrispyPin#1149: they gotta have physically accurate refraction too
Arc#5873: Transparent circuit boards?  Performance killer probably, but used sparingly could enhance certain visual aspects of a build
CrispyPin#1149: not that you should spend your time on it but <[newline]> aurora borealis in the night would be cool af
binaryclock03#5762: :)
Jimmy#8080: Very interesting idea, thanks for sharing. I enjoy the creative mockups 😄
Justin#2534: Made a tutorial for the diagram described above, posted in <#401255675264761868>
Flampt#3906: Hm
Dragon Lord#6944: if these are your pegs: <[newline]> ``` <[newline]> |||||||||| <[newline]> ``` <[newline]> start the multi wire placement using these pegs: <[newline]> ``` <[newline]> |||||||||| <[newline]> \_______/ <[newline]> ``` <[newline]> and then finish the placement using these pegs: <[newline]> ``` <[newline]> |||||||||| <[newline]>  \_______/ <[newline]> ```
Flampt#3906: Not sure what you mean
binaryclock03#5762: Huh thats clever
Dragon Lord#6944: you can if you select very carefully; select the first 1 to n-1 pegs, then connect to pegs 2 to n
binaryclock03#5762: a resizable socket that can connect from any face
binaryclock03#5762: Could probably use the socket honestly, and then make a long boi socket
binaryclock03#5762: yeah
binaryclock03#5762: Still, I would really prefer a vanilla solution
Flampt#3906: You still cant connect multiple pegs that are in line
binaryclock03#5762: ohh I see OWL
binaryclock03#5762: yeah that's the problem right? Its annoying to have to rewire all that stuff. Thank god for the multiwire connect lmao
Stefan#5422: Panel displays could make the visual aspect
binaryclock03#5762: and how would displays work??
Flampt#3906: https://discord.com/channels/401255675264761866/901199821212352573/953323497822760990 <[newline]> This is a similar thing
binaryclock03#5762: .
Stefan#5422: or get mods
Stefan#5422: just scale up displays
binaryclock03#5762: yeah maybe, I just prefer not to use mods
binaryclock03#5762: 
Flampt#3906: I mean it can probably be done by modifying a peg
Flampt#3906: Yeah it would be nice
binaryclock03#5762: 
binaryclock03#5762: 
binaryclock03#5762: Would be something like this
binaryclock03#5762: more like traces on a pcb
binaryclock03#5762: That way if you need to branch something off you dont need to rerun a bunch of wires, you just kinda put pegs on it and its done
binaryclock03#5762: ^^
circuitgamer77#0377: Like power rails?
binaryclock03#5762: essentially it would be a conductive block that will just conduct to any other blocks its touching and any pegs that touch it
binaryclock03#5762: A 1x1xX type of block would be REALLY nice for large busses
RyanT#1426: (it's a hidden map if u didn't know)
RyanT#1426: just go to the planets map then lol
Verlio_H#0201: you should be able to pick planet
circuitgamer77#0377: Because why not!
circuitgamer77#0377: I request binary star mode in addition to the normal day/night cycle :)
RyanT#1426: :)
Jimmy#8080: Undecided. Will most likely be configurable.
RyanT#1426: ooh, cool. do you plan for like an IRL 24 hour cycle or like a fast cycle like minecraft
Jimmy#8080: Planning to do day/night cycle in the future.
Arc#5873: Minecraft like daylight timing sounds more trouble than its worth, unless its easier than I imagine!
Arc#5873: not the focus of the games development though!
Arc#5873: maybe an option, but just a custom setting for day or night at any time would be enough
Stefan#5422: It's just always gonna be dark then
Erikbot#6368: I want the day night cycle perfectly synced to IRL sun movement.
Arc#5873: its only when the sunshine is on my screen that I have the problem it seems 😅 I should know this already!
Arc#5873: an option for night would be cool!
Ecconia#4929: I would rather have this game darker by having a night skybox. <[newline]> It is just too bright.
Ecconia#4929: (For now) maybe turning off shadows helps a bit already.
Arc#5873: I say 'playing' more like building in this epic simulator!!
Arc#5873: ye I was playing in a well sunlit room yesterday and trying to see dark corners with lots of dark circuits was difficult!
Erikbot#6368: if the light source is exactly at the same location as the camera, it can be completely faked, although that won't work in multiplayer.
Jimmy#8080: Oooh, I like this idea.
Arc#5873: Any thoughts on adding a personal light source to illuminate areas that can be hard to see like dark circuits.  Like a torch that can be turned on and off.  I haven't found one in the game yet.
circuitgamer77#0377: Axisx?
circuitgamer77#0377: I want to use the pluralization used in "plateau" (which is "plateaux"), but I can't figure out how to make that fit with "axis".
circuitgamer77#0377: Axae?
circuitgamer77#0377: Axen?
CrispyPin#1149: clearly it should be axii
circuitgamer77#0377: Would that work?
circuitgamer77#0377: Red, Green, Blue, Opacity, Depth, and Luminosity?
Stefan#5422: 6d color picker with multiverse timetravel
circuitgamer77#0377: Thanks :)  I should have remembered that...
Jimmy#8080: "axes"
circuitgamer77#0377: (is plural axis still axis?  I'm blanking on it at the moment...)
circuitgamer77#0377: Including an optional rotation in all 4 axis!
circuitgamer77#0377: Great idea, let's come up with as many variations as possible :)  I vote a 4d color picker projected to 3d space to include an alpha channel!
CrispyPin#1149: at some point the codebase will be more than 50% colour picker related
CrispyPin#1149: ohno
Jimmy#8080: I love that. It has been added to my color picker feature wishlist. Thank you!
PseudoGoose#2841: i didn't notice that
PseudoGoose#2841: the hexagon is actually an isometric projection of the rgb cube
PseudoGoose#2841: wooooah
Verlio_H#0201: jimmy should make a 3d color picker cube that you can move around and clip through to pick color
PseudoGoose#2841: https://en.wikipedia.org/wiki/HSL_and_HSV#/media/File:Hsl-hsv-colorpickers.svg
PseudoGoose#2841: <@!154964593397989376> new idea for color picker:
Erikbot#6368: The client could interpolate between different averages for the colors, so that everything can look smooth.
PseudoGoose#2841: er, specifically, the average color is more easily calculated server-side rather than client-side for multi-bit displays
Jimmy#8080: I would like to do something like this. It's also needed to allow people with epilepsy to play the game safely.
PseudoGoose#2841: Would also be nice for displays, but it's probably not easy to do beyond 1-bit
PseudoGoose#2841: I think it would be cool to have an option for "temporal antialiasing" for wire coloring. So when the server's tick rate is higher than the network tick rate, for each cluster, it can send the "average" over all of the simulation ticks since the last network tick, and then on the clientside the wire colors can be interpolated between the off/on colors based on that average.
DanielGJ44#4557: atlas
Jimmy#8080: alas
Broyojo#2667: since it seems like a lot of work to convert
Broyojo#2667: ah ok nvm then, I can just start new projects
Jimmy#8080: Sleep well my gaussian friend
PseudoGoose#2841: maybe tomorrow, i need to go to bed soon
PseudoGoose#2841: wait nvm
PseudoGoose#2841: probably not too bad
PseudoGoose#2841: oh yeah, circuit states will be interesting
PseudoGoose#2841: i was just thinking of the peg component
PseudoGoose#2841: oh right
Jimmy#8080: It would be crazy difficult to get the position of the peg as you'd have to look up the component prefab and account for any procedural prefabs (i.e. displays, AND gates). If you decide to do this, I recommend just using the position of the component. Let the user manually inspect to find which peg it is :)
PseudoGoose#2841: so i should just make a brightly colored board in the same position as the peg
PseudoGoose#2841: yeah, i guess it doesn't really matter if it collides with anything
PseudoGoose#2841: lol
Jimmy#8080: If you wanted to get real fancy you could create a big floating neon pink board to mark each location :)
Jimmy#8080: The easy way would just be to debug print a bunch of lines. "Input at C69-I1 with coordinates (0, 25, 10) was exclusive"
PseudoGoose#2841: yeah I suppose. I would like to mark it somehow, dunno how I'll do that
Jimmy#8080: One of the reasons I removed them is that they were rarely used. I imagine Broyojo didn't use them much in minesweeper, and any places they *were* used shouldn't be too much trouble to manually fix.
PseudoGoose#2841: yes, but they are exclusive for a reason in the original build, so the circuit won't work properly
Jimmy#8080: That data can just be thrown out in the conversion
PseudoGoose#2841: one problem is exclusive inputs
PseudoGoose#2841: oh yea, that's also pretty similar
Jimmy#8080: Main difference is how circuit states are stored
Jimmy#8080: I believe the Minesweeper world was made on v4. Here's the spec
PseudoGoose#2841: was beta https://gist.github.com/JimmyCushnie/7dae698c92a900f2e530668740c20ca2 or an earlier format that we don't have docs for?
Jimmy#8080: If you're interested in doing the conversion manually, I could send you documentation for the save file format from the beta and for 0.90.
Jimmy#8080: Unfortunately there isn't presently a way. Writing a save converter would be a significant amount of work and I have to prioritize other things.
Broyojo#2667: oh yeah also is there a way to load my minesweeper world into the newest logic world version? I would like to make some edits and then publish a world download to finalize it
Broyojo#2667: I miss multiwire placing :(
Broyojo#2667: when is 0.91 planning on being released?
MrFrump#6949: output to gerber file ? 😛
PseudoGoose#2841: oh, I see what you mean, yea if Jimmy switches positions to fixed point then it would be a bit tricky
DanielGJ44#4557: I remember having an extensive discussion on stream about it too
DanielGJ44#4557: It's certainly interesting
PseudoGoose#2841: i've thought about this before (and shared some of those thoughts in this channel)
PseudoGoose#2841: so floating point should be able to adapt to the smaller scale just fine
PseudoGoose#2841: i think components positions are stored relative to their parent right?
Ecconia#4929: Would need a new coordinate system since the comming fixed point on mm resolution won't do.
PseudoGoose#2841: the thing you have to alter is how the client renders the components (at what scale) when their parent is an "IC" component
PseudoGoose#2841: actually it isn't that complex
PseudoGoose#2841: ^
Stefan#5422: Interesting spin on the ic idea: Make the ic shrink space so from the outside its small but when you fly into it its actually big. Also this is the most complex way of doing it
PseudoGoose#2841: People have asked before about mini circuits, but Jimmy has said probably not in vanilla.
Cero#0516: maybe mentioned, idk
Cero#0516: integrated circuit builder
Nik#1011: I mean... the server icon tho..
Cero#0516: and group locking, toggling deletability
Limón#7879: that would be nice
Cero#0516: lol maybe…
Erikbot#6368: do you mean transparent boards?
Limón#7879: as that one is like 2 pixels
Limón#7879: maybe send a bigger image
Cero#0516: Add glass.
Darkhog#8724: Add this as a server emote to show solidarity.
Erikbot#6368: Wouldn't that just act the same as a wire bundle?
Cero#0516: I was thinking about that, but it feels like a hack tbh. (maybe a mod tho?)
InCrIpTiOn#8028: although i feel like it breaks the spirit of the game in some sense
InCrIpTiOn#8028: So we have small sockets, and we can make serial buses, but the problem is that they take n ticks to transfer information, so I suggest a way to "bundle" wires together like a one tick serial
Jimmy#8080: More accurately: it was removed because I rewrote the building mechanics from scratch and I didn't have time to re-implement it before launch. I am hopeful that this feature will return in 0.91, but if not, then definitely in 0.92.
Justin#2534: Makes sense
Erikbot#6368: some form of multi place was present at some point in development but was removed because it was not polished enough.
Justin#2534: Like placing a grid of pegs and changing the density with scroll wheel
Justin#2534: Wait this was demonstrated in the Logic World Beta: Big Multiplayer Playsession. Was this feature removed? How do you place a grid of items?
DanielGJ44#4557: Jimmy is bringing us the good
Jimmy#8080: Definitely, this is coming
Cero#0516: Ah well, I'm suggesting it. I hate doing the counting for w/h in my head for measurements
Dragon Lord#6944: not to my knowledge
Cero#0516: is an attribute hud on the list as well (show xyz + w/h for boards)
Cero#0516: also, nice name
Cero#0516: Ah ok
Dragon Lord#6944: i think that this one is on the suggestions page of the website, but i don't know for sure
Cero#0516: Weld boards together lol
cheese3660#8641: I really really want this
GHXX#9078: modern ram refreshes itself because it uses capacitors to store bits, and if a bit is set, it gets recharged
circuitgamer77#0377: My understanding is that modern RAM is constantly refreshing itself, which corrects errors based on the other cells for the same bit, but I know very little about that, so I'm most likely completely wrong.
Cloudy#0226: the ram manufacturer should tell you. usually u have to specificlly order "ECC" memory
Limón#7879: does my 32gb of ram come with ECC
Cloudy#0226: most customer PCs actually dont come with error-correcting memory (ECC RAM). so they are actually still vulnerable to cosmic bit flips <[newline]> It's so rare that it doesn't rly matter for most people though
cheese3660#8641: I'd so use that feature in my mods
cheese3660#8641: Honestly that'd be hella useful being able to have pin and component descriptions in game
NGeorge#5042: Please Add Description on module pressed in Inventory <[newline]> Also text near crosshair when crosshair on any module placed it shows what it is or input or output and other things such as clock <[newline]> data , index , etc.
BitorBit#6268: rays
Justin#2534: That's what finding "true randomness" is as far as my understanding. Uncalculatable
Justin#2534: This is more of a semantic thing. This couldn't possibly be determined by humans because of how impossible ionizing radiation is to check, but an omnipotent individual knowing the state of cosmic rays as they collide, as well as knowing the strength of them, could still calculate the randomness no? I saw that Geiger counter random box vid too
Saltypretzel#0321: It’s also a problem in extreme precision metrology
Saltypretzel#0321: Can be measured in resistor
Saltypretzel#0321: That’s thermal noise
Saltypretzel#0321: Ionizing radiation generation is a random process
Saltypretzel#0321: Geiger muller tube
Justin#2534: Truly truest random, under current science, would require you to somehow generate a random numbers directly from the movement of atoms, which is still determined by the random (as far as we know) movement of the atom (Off topic for channel so I'll stop geeking out 🤓 )
Justin#2534: Computers do well to make sure every bit is either super high or ground so that rays can't disrupt the process
Justin#2534: Though them flipping a bit is like, extremely rare, with modern digital computers
Justin#2534: Cosmic rays are a natural phenomena of our actual universe in real life
BitorBit#6268: cosmic ray
Justin#2534: An option to disable what?
BitorBit#6268: and maybe also add option to disable/enable it
BitorBit#6268: correct, i would like/dont like that
CrispyPin#1149: by this logic, no computer is deterministic and all pseudo random code is true random (assuming such a thing exists)
CrispyPin#1149: they are not deterministic if you also consider the fact that a cosmic ray could flip a bit somewhere in the process
Limón#7879: I mean like add it back
PseudoGoose#2841: https://logicworld.net/view/pst-c032a587/logic-world-faq#cmt-50066cdc
Saltypretzel#0321: Lol
Saltypretzel#0321: So are most analog synthesizers. True random
Nik#1011: surprised you seem to not have known about this! raspberry pi computers are equipped with hardware random number generators :D
PseudoGoose#2841: but that's a big task
PseudoGoose#2841: someday
BitorBit#6268: MULTITHREADED_SIMULATION
Limón#7879: Ukraine flag in game?
jackson535#1361: wo
Saltypretzel#0321: You can make a pretty good white noise gen with a single transistor. In this case, external RF radiation has little influence on your randomness (preventing side channel attacks). The physics of this mechanism uses the noise generated from electrons flying through a diode. It’s quite good and you can get 1GHz + versions of this.
Reese4221#8317: if you are in X then you might have bigger problems if you somehow do it
Reese4221#8317: you can just clear the screen and it goes away
Reese4221#8317: also not really
Reese4221#8317: both `/dev/random` and `/dev/urandom` are much faster
Erikbot#6368: that seems like a bad idea
Reese4221#8317: but its very very slow
Reese4221#8317: it pretty much fills the screen with random RGB noise
Reese4221#8317: cats the hardware rng source (unless i am not remembering the thing its called in /dev) into the framebuffer
Erikbot#6368: uhh, what does that thing do?
Reese4221#8317: as someone who has done `cat /dev/hwrng > /dev/fb0` in the linux framebuffer terminal it is very slow
Jimmy#8080: Fascinating!
Erikbot#6368: Some computers do have hardware randomization, for example reading the voltage from a wire connected to nothing produces a mostly random value. However it is absurdly slow.
Justin#2534: The above is in reference to oracles having a probability setting
Justin#2534: That way you get as many random numbers as you want and they can be as large as you want
Justin#2534: One move is to have a clock shuffling n amount of bits using an oracle and using snapshots of those bits to seed randomness
PseudoGoose#2841: _Technically_, yes. But hashing the internal state (current seed) of an oracle is practically worthless because you're likely never going to encounter that same seed again
Jimmy#8080: I think it is much more interesting to build circuits out of multiple oracles to achieve a custom probability
GHXX#9078: fair!
Jimmy#8080: Yes. Suppose you are running the simulation at one billion ticks per second. (Theoretically doable with a hashlife-esque optimization). If you're displaying updated circuit states to the user 60 times per second, then you need to step forward the simulation at 1B/60 = 16M ticks each time new circuit states are displayed.
Jimmy#8080: It is theoretically possible to do a hashlife-esque optimization for Logic World circuit simulation, including Oracles. However, this would be a monumental task. We will likely look into it in the far future, but as discussed there is much lower hanging fruit to pick first.
Jimmy#8080: Technically Oracles actually are deterministic. True random isn't possible on modern computers, so they use a seeded pseudorandom algorithm (xoshiro256**, to be precise - https://prng.di.unimi.it/)
DanielGJ44#4557: only occasionally
Limón#7879: I didn't know you were a moderator <:aCatScream:947951770305462322>
Justin#2534: ``` <[newline]> widthIteration = floor(selectedWidth/componentWidth) <[newline]> heightIteration = floor(selectedHeight/componentHeight) <[newline]> ```
Justin#2534: If a board is irregular size, like 7x7; it only pastes as many times as it can, so if you shift click a 16x16 space, it would paste this board four times in a 2x2 fashion
Justin#2534: I think there is a mod for this
Justin#2534: Ability to place multiple compontents/boards in area as they fit. This is easiest with 1x1 compontents like displays. Example (Select display, shift left click 2x3 area -> places 1 display in all 6 squares)
DanielGJ44#4557: Don't ping Moderator for that please, we all check the server regularly enough that we would have answered you either way
ICantFindFoxy#8455: Thank you
Stenodyon#8192: We have a thread for servers https://discord.com/channels/401255675264761866/905378240338726942
ICantFindFoxy#8455: <@&579246303901384704>
ICantFindFoxy#8455: DO you think it's possible to get another channel dedicated for servers in-game?
BitorBit#6268: ?
circuitgamer77#0377: And it also gets a bit laggy.  That can be optimized, but I feel like welding boards would help with copy lag.
Justin#2534: I remembered after posting that you can copy sub boards onto a parent board to associate them, but if you repeat this process, your board can get super stacked, idk not 100% necessary but could be nice
circuitgamer77#0377: I think I also suggested it.  Would be amazing, although I don't know how it would be implemented behind the scenes...
Justin#2534: Your integrated circuits that you design can be as complex as you want, and taken anywhere
Justin#2534: I mentioned it in a previous question post, but the ability to associate or "weld" boards. That combined with the saving boards feature would be insaaaaane
Infini#5724: I think that's coming 0.91
TheGrandMinority#1499: A personal booklet of blueprints you can take over worlds/a user-friendly way to share blueprints &/or builds
Reese4221#8317: the smaller and slower buffer has a one tick delay but works the same
Reese4221#8317: fast buffer acts as a one way wire and is a little bit big
Reese4221#8317: assuming what you want is a one way gate a buffer is what you are looking for
NGeorge#5042: I found a way but its harder this way.
NGeorge#5042: i im kinda in some small problems.
NGeorge#5042: Because its so frustrating when i want to do some One way things <[newline]> Like this
NGeorge#5042: Also `One Way` Logistic
Dragon Lord#6944: he could do a colab B)
Dragon Lord#6944: <@!284602593597194250> has hand and feet models for bobby iirc
Reese4221#8317: oh no
RyanT#1426: oh no
EmergencyTemporalShift#0001: Hey <@154964593397989376> when are we getting Fortnite dances in Logic World?
NGeorge#5042: This is my ideas idk. <[newline]> ``` <[newline]> - Motors [Small , Medium , Large , also Configurable , Speed and Size] <[newline]> - 2x2 Display [Configurable to be much larger , max 6x6 outputs to be 6/10 depends now] <[newline]> - Invertor Motor [Inverts the rotation for the motor has 2 inputs one input and 1 output the output goes into motor and the input into power source or smth like that] <[newline]> - More Blocks maybe? idk <[newline]>  <[newline]> Everything can be changed by the dev if he wants to add those ideas <[newline]> ```
Ecconia#4929: Easy, lore will be: "Solve logic riddles for eternity or ASMR Bobby comes along. ||Don't send ASMR Bobby now||
NGeorge#5042: if lore then add also Survival :))))
NGeorge#5042: xD brugh
pilonpl#4015: :0
pilonpl#4015: Add lore to the game
pilonpl#4015: Time travel would be cool
pilonpl#4015: And time travel
pilonpl#4015: Also 2D time
pilonpl#4015: That's a great idea
GHXX#9078: vertical rotation corresponds to a movement along w, so you change your w pos by looking further up or down while holding ctrl maybe
circuitgamer77#0377: Agreed. 4d mod anyone?
GHXX#9078: we should have a 4th dim in lw
Erikbot#6368: I believe this is preferable.
pilonpl#4015: Second dimension where you could place huge parts like RAM :0
BitorBit#6268: editing oracle to change randomness percentage
PseudoGoose#2841: Or just don't randomly abort the operation on error.
Ecconia#4929: Whoops now I also ran into this issue with multi-selection and then pressing the wrong operation key, now I have to select everything again. <[newline]> Ticket: <https://logicworld.net/tracker/323> <[newline]> Maybe add your ideas for how to "restore previous selection" on either aborted or successful build-operation - or even aborted multi-select operation.
Flampt#3906: But it cant be used in this game
Flampt#3906: It is possible to build a "battery" using relays or d latches where you have a bunch of them and every n ticks one by one is being reset and it there will be no output when all of them are off
Justin#2534: You should build a battery with relays and delayers
DanielGJ44#4557: What would be your intention with bunny hopping if you don't mind me asking?
Justin#2534: It is a "Logic simulator" 😁
DanielGJ44#4557: The express purpose of logic world is to not simulate actual circuits so I believe the concept of a power source is confirmed to not be happening
NGeorge#5042: Also have a battery that allows to be charged and discharged with solar or generator <[newline]> and on buttons should have been powered through battery not from the emptyness
NGeorge#5042: Option in Settings to Allow Bunnyhopping. <[newline]>  <[newline]> Rework approx everything? i think idk <[newline]> The Logistics should have more inputs and outputs idk.
GHXX#9078: besides that, does it even make sense to advance simulation by N ticks? like, visually it wont be very appealing since it is just a jump from one world state to another world state essentially
GHXX#9078: there is also the issue of user input, since effectively in any tick, user input may occur, via a button or something else
JoshuaSpeedy#3545: I think it would be cool if someone made a mod to implement it
PseudoGoose#2841: though i agree there are probably better ways to optimize a circuit sim
PseudoGoose#2841: no, the concept behind hashlife would still work for any deterministic part of the circuit. The only problem with oracles is that signals flowing through oracles aren't deterministic and so they can't be hashed.
GHXX#9078: especially since this could break horribly with mods that change wire states directly
GHXX#9078: circuits that are somehow connected to any non deterministic components? <[newline]> This would mean that, if you build a cpu, and you also have a rng that uses oracles, built in, then the entire cpu cannot be optimized. <[newline]>  <[newline]> multithreading is likely a much better option imo
JoshuaSpeedy#3545: Just disable it for circuits with non deterministic components
GHXX#9078: in lw not all components are deterministic, e.g. oracle, modded components, so that could be problematic
Cloudy#0226: (especially since large circuits tend to be made from many repeated smaller components with identical layout/logic)
Cloudy#0226: I thought this may help the game with scaling to millions/billions of components, but yeah, might be better to wait with this
Cloudy#0226: definitely
CrispyPin#1149: i feel like there are a lot of easier optimisations that can be done first
Cloudy#0226: <a:TT_wave:843030837427175464>
Cloudy#0226: I wonder if the game could benefit from some similar system, although I also heard it's quite complex to implement
Cloudy#0226: regarding optimizing Logic World, have you considered using Hashlife? it's an algorithm for Conway's Game of Life that uses caching and steps large blocks all at once, to speed up the logic calculations tremendously. with these techniques (and another quadtree trick) it manages to "step forward" the world at amazing speeds. <[newline]> although it's for Life I think the ideas could apply in for other logic calculations too
CrispyPin#1149: 
Limón#7879: and dynamically created components might have been made, not sure though
Limón#7879: this would only be possible if we can create new objects and floating point was fixed (so we can use really high up for it or really far away)
Limón#7879: ~~factorissimo~~ logissimo
Stefan#5422: pog emote here
Dragon Lord#6944: can we get the frog pog emote here? (as seen here: https://cdn.discordapp.com/emojis/944479966203117579.webp?size=44&quality=lossless)
Jimmy#8080: 100%, will do this
Ecconia#4929: Suggestion: Let Multi-Wire-Placement add wires as a single history action. (See Video). <[newline]> Instead of having each wire be its own edit. <[newline]> Reason: If you mess up (I do often), you quickly placed 50 to 300 wires, and it is a pain to undo them all. Cause most of the time, you cannot even see the other side where the wires end. <[newline]> Video: I edited the DLL which does multi-wire placement to get this (replace 4 lines of code) effect. Did a bunch of undo/redo actions there. <[newline]> Ticket: <https://logicworld.net/tracker/318>
PseudoGoose#2841: or yeah, make BIG BOBBY
Verlio_H#0201: or alternatively you could use what vanilla has already just make the player scale much bigger by default and mod in super large components and then boom, micro scale
PseudoGoose#2841: then the client just has to have a way to scale down the component sizes when rendering them, and place them inside the "micro" component
PseudoGoose#2841: that mechanic could be re-used to make implementing it easier
PseudoGoose#2841: but actually
DanielGJ44#4557: mostly JK though
DanielGJ44#4557: you're welcome
DanielGJ44#4557: Change the crouchscale setting
DanielGJ44#4557: You can already do this
PseudoGoose#2841: could also be balanced, so there's a fixed number of levels you can nest /shrink to, and a fixed scale factor ^ (or allowed range of scale factors)
Verlio_H#0201: turn 1 grid block thingy idk what called into 1 chunk
PseudoGoose#2841: Probably doesn't change your answer, but that would be a hella cool way to implement literal "shrinking" as a mod
PseudoGoose#2841: so you could inspect the internals of a custom component up close but at a large scale it's actually component-size
PseudoGoose#2841: what if canonically, bobbys could shrink themselves to go into a component and build at a smaller scale
PseudoGoose#2841: ok but hear me out
Jimmy#8080: Correct, I don't want to do this in vanilla. Part of what makes Logic World so special is that there's very minimal abstraction. You can walk up and inspect every tiny individual piece of the circuit and watch it function. "Meta-circuits" would ruin that.
Limón#7879: or at least that is what I have heard
Limón#7879: jimmy said no
FreakyWaves#1400: I see
Erikbot#6368: special extra gates can be modded, and making every little part of a circuit visible is core to the game, so shrinking will probably not be implemented.
FreakyWaves#1400: maybe
FreakyWaves#1400: like meta-circuits
FreakyWaves#1400: OR gates <[newline]> NAND gates <[newline]> FLIP - FLOP  <[newline]>  <[newline]> maybe a way to shrink like microprocessors
FreakyWaves#1400: also more types of gates
Erikbot#6368: (it is possible with mods so it probably does not need to be in the base game)
FreakyWaves#1400: CHALLENGE : code the logic for the logic world servers 🕶️
Erikbot#6368: *connects wire between logic world servers*
Jimmy#8080: Not planning to do this in vanilla. I think that physical connections are way cooler.
Ecconia#4929: For now this mod might help you: https://discord.com/channels/401255675264761866/910673109164638239/911995541125222400 by <@!859806257774723102>
LOOPS#1372: A transmitter / receiver block would be cool to see. Peoples computers could talk to one another via serial without physically being connected and other cool stuff
Limón#7879: it would be nice if you could select all of music player things <[newline]> and then open the menu <[newline]> and select all the notes you want <[newline]> and it would be a gradient
InCrIpTiOn#8028: change organ soundfont to include 1st scale like the piano ones
Jimmy#8080: hmmm
Limón#7879: `server "no u"` should crash the game
Jimmy#8080: Settings menu will definitely be searchable at some point
Jimmy#8080: That makes sense
PseudoGoose#2841: also, would like to have a sprint mode where toggle sprint is automatically turned off when not moving. I prefer toggle sprint over hold sprint, but because I use sprint (Ctrl) as the same key as Mod, I hit it a lot while building, if I had toggle on it would be in a random state the next time I move. Canceling sprint when you stop moving is pretty standard in other games (e.g. Minecraft)
PseudoGoose#2841: but controls needs it the most
PseudoGoose#2841: Make the controls menu (or heck, all settings menus) searchable
Jimmy#8080: <@!154942570642800640> I plan to experiment with this kind of gameplay after 1.0. No promises though, it might not work out. Until 1.0 the focus is 100% on digital logic.
BitorBit#6268: in 1.0 update
BitorBit#6268: yes
InCrIpTiOn#8028: Are moving blocks planned? Like pistons or rotating blocks
Vinyl Boot Maven of Shade#1858: I was thinking the enqueueing would be done sequentially and then the queued items would be sent to worker threads for parallel  processing.
GHXX#9078: strings attached to where?
Ecconia#4929: I am aware of how they work. I am just concerned if there are strings attached on some systems.
GHXX#9078: and as you likely know, its atomic implying it is threadsafe
GHXX#9078: so you do a compare exchange, to set the flag to 1, and if the returned value is 0, you trigger the update
GHXX#9078: "Sets a 32-bit signed integer to a specified value and returns the original value, as an atomic operation."
GHXX#9078: int32 overload seems most efficient
GHXX#9078: https://docs.microsoft.com/en-us/dotnet/api/system.threading.interlocked.exchange?view=net-6.0#system-threading-interlocked-exchange(system-int32@-system-int32)
GHXX#9078: yess
Ecconia#4929: If there are no strings attached to that, would definitely solve a lot of problems with simulation multiple threads. To be investigated.
GHXX#9078: using a lock() block seems overkill, and wasteful
GHXX#9078: assembly has a compareexchange instruction, im pretty sure something derived from that should be able to be used to set the flag if it hasnt been set yet, in a threadsafe way, and if it was set just now, update (or enqueue the update of) the component
Ecconia#4929: (And <@!358990534619955200> <@!377717131556552708> ) <[newline]> > because all duplicates will be in the same collection <[newline]> Why? <[newline]> > position based <[newline]> So for components the ID sounds good. And clusters have a circuit state ID. <[newline]> Positions are an absolute no go (obvious reason). <[newline]> > the problem is adding the components to the update list <[newline]> What GHXX said, its actually the "filtering" or more specific, the preventing of processing a component from two different threads at the same time - and in some/many circumstances also to prevent processing it more than once. <[newline]> -> Imagine a Delayer being processed twice in a single tick, whoops 10 ticks become 9 ticks delay. And this might be much worse for some modded components. <[newline]>  <[newline]> > Couldn't you use an enqueued flag to prevent queuing duplicates in the first place? <[newline]> That is what is literally currently being done with a single thread. <[newline]> However if two threads at the very same time want to add a component. Both would read the flag and see that its free, both would set the flag. BOOM, you have it added twice. <[newline]> Sounds unlikely, but this is the problem with multi-core systems. Must always be consider and prevented by all means. <[newline]> -> It could work, if all of these flags would allow atomic operations. But I am not sure, if these are free or expensive.... Cause few thousand atomic registers sound uncommon.
Vinyl Boot Maven of Shade#1858: Couldn't you use an enqueued flag to prevent queuing duplicates in the first place?
Erikbot#6368: I don't think I can explain this.
GHXX#9078: also, ecconia said the largest problem is filtering duplicates, not adding it to the update collections
GHXX#9078: splitting up also reduces the average synchronization time
GHXX#9078: simply use concurrent bags
GHXX#9078: when its distributed its much easier to filter out duplicates. O n² as you said
Erikbot#6368: the problem is adding the components to the update list
Erikbot#6368: dividing components into different piles is not an issue. Ecconia already stated the problems.
GHXX#9078: assuming it is distinct
GHXX#9078: but choosing a collection based on the component id is much better
GHXX#9078: well, we do map hash parts to values, being collections, but the approach is different i suppose
Erikbot#6368: additionally, a hash map solves literally nothing here.
Erikbot#6368: A spatial **hash** stores objects in a **hash** map which uses more memory than just directly storing the values
GHXX#9078: what does it look like? is it just a 64bit number?
GHXX#9078: we should use that then
Erikbot#6368: the component ID is a better hash since it is free to compute
GHXX#9078: splitting the components up into 16 collections would then decrease n to one 16th in the ideal case, and add 256 bytes of memory use
GHXX#9078: so essentially we pay 16bytes extra per collection
GHXX#9078: each concurrent collection should have an overhead of 8bytes (lock object instance) + 4bytes (collection size) +4 bytes (collection capacity) the item count doesnt matter as this doesnt increase overall
GHXX#9078: we dont need a perfect grid, we just need a value thats always the same, which is the case, as accessing the same instance yields the same position. Naively speaking. we can just round the 3d pos to the nearest whole, number (component wise), and then just assign a certain collection for <[newline]> x even y even z even <[newline]> x even y even z odd <[newline]> x even y odd z even <[newline]> etc.  <[newline]> (yielding 8 different collections, but there should be smarter approaches in regards to assignment, as we ideally want a number we can control easily, as the number of threads acts as a lower bound to the collection count)
Erikbot#6368: I don't see how spatial hashing solves anything (it has memory problems and assumes a perfect grid). It would be more efficient to use the ID of the component as the hash, but then nothing is really solved since you would just have a sparse list of components that would need to be collected into a big list, meaning it would have to iterate over every component in the world.
GHXX#9078: (we just take their origin point and do not care about size)
GHXX#9078: duplicates will have the exact same position
GHXX#9078: we just take the position, and assign a collection based on that
GHXX#9078: they are put into a collection based on their position, like spatial hashing i think
GHXX#9078: could have like 16+ collections
Erikbot#6368: how will you make sure that there are no shared components between threads?
GHXX#9078: yeah but n is greatly reduced due to splitting it up
Erikbot#6368: removing duplicates is a O(n^2) operation
GHXX#9078: could also just process those resulting collections on multiple threads, and have each thread remove duplicates in the collection it is processing, and then set each component input <[newline]> because all duplicates will be in the same collection
Ecconia#4929: - Components can trigger multiple clusters. <[newline]> - Clusters can trigger multiple components. <[newline]> The problem with multiple threads is, that one has to prevent components and clusters from being processed twice. <[newline]> So if there is a thread safe data structure, which collects the components, it would need to filter components. Which is always slower than not having to filter at all. <[newline]> On top of it, the thread-safing mechanisms themself are not the fastest, but not really a concern compared to the filtering of duplicates. <[newline]> | One might have a critical section and let the threads busy wait access it, in which the flag inside a component gets unset. This prevents multiple processing. Not sure how big the impact of such a critical section is though. |
GHXX#9078: will drop the amount of components to check against when removing duplicates
GHXX#9078: or we just split up the components between collections based on their position
GHXX#9078: might have to do that after the adding-phase
GHXX#9078: i suppose we'd measure it in absolute time, as having it take more threadtime is not too bad. <[newline]> Actually, i think the real problem here would be getting rid if duplicates on the fly
Erikbot#6368: how are we measuring expensive?
Erikbot#6368: single threading has no need for synchronization.
Erikbot#6368: that question does not make sense
GHXX#9078: but is it more expensive than single threading?
Erikbot#6368: thread synchronization is expensive
Erikbot#6368: The link layer is super complicated.
GHXX#9078: hm?
Erikbot#6368: Atomics are not free
GHXX#9078: 2) should be easy to do using a concurrent bag/queue from System.Collections.Concurrent <[newline]> cant really take a guess about 4), but i'd reckon the link layer could be split up, and each zero-tick-line could be ticked independently
Erikbot#6368: implementing multithreading is non trivial, the main issue is step 2 and 4
Erikbot#6368: The game currently works (sort of, oversimplified) like this: ```1. have list of changed wire clusters from previous iteration <[newline]> 2. add all normal components that are affected by the changed clusters to a list <[newline]> 3. update normal components (and, d-latch, buffer etc..) <[newline]> 4. using the changed components, update the link layer (relay, fast buffer) using code so complicated jimmy can't explain it easily. <[newline]> 5. now the game has a list of updated wire clusters for the next iteration.``` Implementing such an algorithm that you are suggesting would improve things, however, the problem is that players constantly modify the circuit so the caching would have to be very fast when the circuit is modified..
jackson535#1361: are you a multithread
Flampt#3906: This guy loves multithreading
GHXX#9078: ||or multithreading 😛 ||
InCrIpTiOn#8028: each node has a minimal state space, usually just a single bit, so performing caching on logic blocks should make a noticeable speed up
InCrIpTiOn#8028: I don't know what logic optimisations are being done so far, but consider adding a type of memoised hashtree to speed up repeated processes
Flampt#3906: Ik but it's larger lol
Jimmy#8080: Put inverters in front of some of the inputs lol
Flampt#3906: A programable AND gate, like if I make it take 4 inputs and configure it to produce an active output only if the input matches the configuration
CrispyBacon7#9048: awesome
Jimmy#8080: yep, coming in 0.91
CrispyBacon7#9048: is board saving going to be a thing?
GHXX#9078: i think windowed mode works too though, so could just switch to that via alt+enter
Jimmy#8080: You can manually set a custom resolution by editing the settings files.
Jimmy#8080: This works, but the game might be displayed at a wonky resolution. Currently the "resolution" setting can only get a list of valid resolutions for the primary display.
GHXX#9078: for now consider using [win]+shift+[arrowkeys] (as a workaround)
Jimmy#8080: This is coming in 0.92 :)
cheese3660#8641: add an option to the graphics settings to change display the game is being rendered on, at least while in bordless or exclusive full screen mode
Erikbot#6368: a looping video of a circuit in the loading screen would be really cool
circuitgamer77#0377: An interesting example (which I like now that I know it exists) - the "continuum of consciousness" theory.  It's not possible to say something is or is not conscious, but you can define a spectrum determined by the interaction complexity of the thing you're trying to define.
Limón#7879: that is pretty true
circuitgamer77#0377: I feel like any categorization system breaks down when you think about it too much...  It always becomes a spectrum, not a nice black and white division.
Limón#7879: not that common but I feel as if that would just be a pc
Limón#7879: but that's kinda blurry because if all in one monitor computers
circuitgamer77#0377: I would agree :)
Limón#7879: I say desktop = big bois, laptop = 💻, pc = any computer
GHXX#9078: shouldnt steam remote play work?
Limón#7879: yeah true
circuitgamer77#0377: I know the name, just not accepted usage :)
Limón#7879: so maybe
Limón#7879: personal computer
GHXX#9078: fair :P
circuitgamer77#0377: I still don't know whether PC includes laptops
circuitgamer77#0377: or laptop
circuitgamer77#0377: They have, but nowhere near the power of a PC
Limón#7879: my phone that's pretty old can run genshin alright
Limón#7879: I feel as if phones have gotten pretty good
Limón#7879: sad I started laughing when I first created a world, I never expected the loading screen to be that
circuitgamer77#0377: I feel like mobile would be best played if it's running on an external server, just because the processing power is so much lower on mobile.
Jimmy#8080: there are *many* higher priorities to get to first haha
Jimmy#8080: sometime after
GHXX#9078: in the next version or sometime after that?
Jimmy#8080: yes, after 1.0 I want to do a mobile version
Jimmy#8080: yep, significant improvements to the loading screen are coming
GHXX#9078: i appreciate the fact that the loading screen when loading a map is kept simple as it doesn't add anything gameplay wise, but it could be interesting to show what it's doing right now, eg "instantiating components (264256/523589)" to give some indication of how much loading time is left
64548#0351: <@!154964593397989376> do you ever intend to create logic world for android or apple mobile?
Erikbot#6368: what you are describing is also implemented in portal coop.
Ecconia#4929: No like in Satisfactory. I never played Portal coop
CrispyBacon7#9048: You mean like in portal 2?
EmergencyTemporalShift#0001: I read that as 100 seconds a player and was like <:WaitWhat:302103412097548288>
Ecconia#4929: Yes. 100 a second per player should definitely be enough.
CrispyPin#1149: please remember to rate limit it server side
Jimmy#8080: Yep, this is planned!
Ecconia#4929: So actually I saw a few times people complaining about how to exactly highlight something to other players in multiplayer. <[newline]> Like what exactly they look at, or what they mean if they are explaining something. <[newline]> And actually Satisfactory has kind of the solution: <https://youtu.be/ZW0OOikcWN0?t=93> (This video is a super old alpha showcase, but now in the EA, its very similar). <[newline]> (More pinging later in the video: <https://youtu.be/ZW0OOikcWN0?t=1188>) <[newline]>  <[newline]> Basically use some modifier key, and mouse click combination. To have a graphical punctual indicator which also plays a sound. <[newline]> I also thought about maybe lighting up the whole component as alternative. Like you click a peg and then it lights up for a short moment with maybe some particle effect exploding in all directions.
TheWildJarvi《THE SEMI SEER》#1337: okay cool, but I was talking about pegs not being or gates
CrispyBacon7#9048: I just use buffers
circuitgamer77#0377: I would like the ability to stack pegs - having to build another board between them can be frustrating.
CrispyBacon7#9048: Like a byte maker and splitter
CrispyBacon7#9048: Bit and byte wires and wire converters
Jimmy#8080: Agreed. Multi-selection in general is pretty awkward and unpolished. Major improvements are planned.
LOOPS#1372: When multi selecting components with "Z" or the MOD key it should tell you how many are selected
Dragon Lord#6944: awesome!
Dragon Lord#6944: oh, that's actually planned? :0
Jimmy#8080: Selling. Minecraft Realms model.
Jimmy#8080: I don't want to do this in vanilla because I want circuits to always behave identically at different tick speeds.
cheese3660#8641: Component that cycles independent of tick rate at a set frequency, or as close an approximation to said depending on the tick rate, where it cycles on and off every tick if its too fast
GHXX#9078: having actual wires ON the boards, like a pcb could be cool
GHXX#9078: imagine designing circuit boards in LW <:thinkaboutit:686994189950517259>
GHXX#9078: bitcoin world
JPM-Baroque Spaceship#6542: yes
Limón#7879: mine btc with logic world circuits
GHXX#9078: free is a very bad idea. people would just get it to mine btc or some crap xD
CrispyPin#1149: free sounds like a terrible idea
Limón#7879: selling a server or making it so you can host your own for free
Jimmy#8080: We are planning to do this in the future, but only after we have much better server management features
JoshuaSpeedy#3545: Selling a vps service for logic world similar to Minecraft realms
TheWildJarvi《THE SEMI SEER》#1337: survival mode wen? <:Troll:830028645510021140>
mitolegy#5916: mystery logic
gnog#2259: and you just make a bucket out of boards and build some circuit above it, then remove the boards so that they fall into this bucket and you just have a pile of components that represents some logic
mitolegy#5916: that'd be funny, just a cobweb of wires and compoents that suddenly gained physics
gnog#2259: i imagined literally logic components fall on ground or the board below it
gnog#2259: i just understood you message in a wrong way
mitolegy#5916: wym?
gnog#2259: `have the circuit on the board simply "fall" onto the circuit board` <[newline]> so that you have a bucket of lying around components that represent control unit, alu?
mitolegy#5916: ive been thinking for a bit now. you know what would be Really nice. especially with the new ability to import and export individual boards coming up. the ability to delete a board, and have the circuit on the board simply "fall" onto the circuit board below. so you don't have to deal with a billion tiny interconnected boards or circuits on weird levels to each other. you can just have everything related to one thing. on one board. have a control unit? its now one board instead of a bunch of boards on top of one board. an ALU? again, one board. that way, you can build relatively complex modules, in discrete steps, and have the finished product still be a single board. rather then a collection of many smaller boars glued together. which looks ugly, and is slow full of sockets.
CrispyPin#1149: f3 and f4 iirc, just shows position and fps
Erikbot#6368: there is a debug overlay?
CrispyPin#1149: yeah add as another row in the debug overlay
GHXX#9078: could be something like <[newline]> "TIME TAKEN PER STEP ms (FRACTION OF AVAILABLE TIME USED)" <[newline]> E.g. <[newline]> "16.6 ms (0.5)" in case of 30 ticks per sec
Erikbot#6368: But a time per tick indicator might be more useful since you wouldn't have to run the circuit at max speed to test it's performance impact.
Erikbot#6368: I'm pretty sure that it will be overengineered like all other UI
GHXX#9078: for 0.91 add an indicator somewhere what the current actual tickspeed is (maybe some small text in a corner, but please make it so it can be turned off), this way it's easy to see if the world sim is at its limit
Dragon Lord#6944: 'global parity gate'
EmergencyTemporalShift#0001: Have a component wirelessly connects to all pegs in a world and ors them together
Dragon Lord#6944: so yeah, that checks out
Dragon Lord#6944: in factorio, trains have a higher throughput than any other transport type
GHXX#9078: with motors we could make a drivable bus. And then we literally can make a databus 😂
TheWildJarvi《THE SEMI SEER》#1337: "wireless" lmao
Limón#7879: that would be an easy mod to make
TheWildJarvi《THE SEMI SEER》#1337: https://media.discordapp.net/attachments/592441902981447710/939926248824635402/amogus.gif
TheWildJarvi《THE SEMI SEER》#1337: when pegs fly
Limón#7879: fat peg when
TheWildJarvi《THE SEMI SEER》#1337: peg doesnt really do that
TheWildJarvi《THE SEMI SEER》#1337: a gate has a diode action where the output doesnt backfeed the input
Limón#7879: a single peg is an or gate
IDoget#3748: Plus if it's only 1 wide it would save even more space length wise
IDoget#3748: They should honestly add a or gate the same size as the and gate. <[newline]>  <[newline]> Buffers are tall and having to use them for every peg that works as a or gate gets quite large in a tight  circuit.
DanielGJ44#4557: I don't have a lot of modding experience though so I was waiting for official support/docs
DanielGJ44#4557: jk I would do it for free lol
DanielGJ44#4557: 🤔
DanielGJ44#4557: my consulting rate pays better
CrispyPin#1149: convince jimmy to employ you
Limón#7879: maintaining/making lw mods are annoying for me
DanielGJ44#4557: sad
Limón#7879: not that I know of
DanielGJ44#4557: I did see that, has that had any progress?
Limón#7879: but I don't know what happened to that
Limón#7879: there is a moving parts mod
DanielGJ44#4557: Maybe I could mod 🤔
DanielGJ44#4557: I hope I am consulted when/if stuff like motors and wheels and gears are included, I'd love the shit out of programming that
CrispyPin#1149: at that point just play scrap mechanic instead
BitorBit#6268: done
BitorBit#6268: ok
drawcoco#9558: please just do one big text that explain all of them 😅
BitorBit#6268: or to transport logic
BitorBit#6268: oh sec
BitorBit#6268: example, motor with propeler is to make drones that could hold something in the air
drawcoco#9558: cool ideas in here, but can you explain me what they do/ value they return?
BitorBit#6268: suggestion for 1.0+: ze stuff ;) <[newline]>  <[newline]> blocks:  <[newline]> motor - spins(2 pins{foward, backward},speed of the motor can be set) <[newline]> servo motor - similar to motor but lot slower with classified rotation(CANOT go 360°+)(2-16 pins deafult{rotation can be edited by combination of the pins}) <[newline]> propeller - in correct rotation & speed will start pushing or pulling(needs motor) <[newline]> gravity sensor - detects gravity on X-Y-Z(rotation of the sensor is "UP", 3-9 pins, pins can be edited, default: X{-45=45}, Y{-90=90}, Z{-45=45}) <[newline]> distance sensor - detects something in set range (1 pin[pin is active if something is detected]) <[newline]> color sensor - detects color of "ANYTHING" and outputs to pins(default 3 pins{RGB}, color can be set: 10-20, 30-50,...) <[newline]> wire avoidance - useful option if you have litle problem with wire connecting around wall(activated on SHIFT+CRTL) <[newline]> wheels - wheels(2^N pins{foward abd backward with diferent speed[every pin can be edited with diferent speed and rotation]},NEEDS motor) <[newline]> tank threads - can be used for the tank or for conveyor belts(2^N pins{foward abd backward with diferent speed[every pin can be edited with diferent speed and rotation]}) <[newline]> map builder - map building ;) <[newline]> sircut compiler block - create small logic from 2d gui to 3d custom block, similar to mini processor (depends how many pins are built in gui{depends the fuction of the pins}) <[newline]> detachible block - attaches and detaches with another detachible block (1 pin{enable/disable})
IDoget#3748: Unity makes this easy! URP (Universal render pipeline) can be easily used to make a toggleable 3d bloom on selected objects. I have worked with it for my unity project before, and it shouldn't be that bad to integrate. When I get home from class I will attempt to make a mod, although the URP package needs to be installed and I'm not sure if I can do that. Shouldn't even take a hour for Jimmy
Erikbot#6368: global illumination is typically very expensive especially when the lighting is indirect from emission, however it can be baked given that the world is static and the wires themselves do not move. However it would require a lot of memory to store the light contribution from every wire cluster. There are a bunch of tricks to make it easier, but it is very hard to make it both performant and hide the imperfections.
IDoget#3748: vc
BitorBit#6268: suggestion: VOICE CHAT
GHXX#9078: 😂
Jimmy#8080: https://www.youtube.com/watch?v=wXe-5mUeLC8
GHXX#9078: will we ever get super cool looking, rtx-like shaders <a:CS_eyesshaking:717429589810610287> ?  <[newline]> https://media.discordapp.net/attachments/401255675264761868/911709042659950622/lw-16b-02g.png?width=1202&height=676 <[newline]> src: <https://discord.com/channels/401255675264761866/401255675264761868/911709047311454218>
Jimmy#8080: everybody stay frosty, thank you daniel for being a voice of reason
Jimmy#8080: coming in 0.91
Limón#7879: I thought there was that
Dragon Lord#6944: i think he means LW servers (not discord LW server)
Limón#7879: there is 1252 members in this server is that what you mean
EmergencyTemporalShift#0001: Also, can we get population counts for public ( Logic World ) servers on the discord?
EmergencyTemporalShift#0001: To be fair, all these Bobbies look the same
DanielGJ44#4557: If someone asks you a question you don't like, either ignore it or ask for clarification, and don't respond to toxicity with more toxicity lol
DanielGJ44#4557: imo that exchange above was unnecessarily aggressive, please be respectful
circuitgamer77#0377: I vote 1100100b2% (100%) yes
Dragon Lord#6944: ^^
MichaelBot#9291: QoL suggestion, allow rerooting of part trees (eg if two boards are connected at a right angle, i can't currently swap it so that the vertical board is the one touching the ground, it's always rooted at the original root board)
IDoget#3748: i think its over
Dragon Lord#6944: Maybe it's a good idea to take this elsewhere if you're going to continue
IDoget#3748: i cant speak for him but there was no need to be a dick to him about it
IDoget#3748: its not mine or your job to say a question is bad. would you rather him ping jimmy over the same question.
CrispyPin#1149: it was a bed question, why what? also ratio
IDoget#3748: bro actually cry about it. he was asking a question and you seemed knowledgable?
Dragon Lord#6944: No, you don't look like Jimmy to me lol
CrispyPin#1149: do i look like jimmy to you? read my name
BitorBit#6268: (suggestion: noclip wires) <[newline]>  <[newline]> UPDATED: we want to connect wire true a sircut board, it will automaticly put the pin that goes true sircut board <[newline]> if we have logic in the way, the wire will go around it
ThaCuber#5611: whi
ThaCuber#5611: why not just non-static things in general, like physical blocks or something else
Dragon Lord#6944: I say ❌ because I like the challenge
circuitgamer77#0377: I'm saying both check and x because I think it's a good idea but I don't know how to make it fair/balanced/fun.
BitorBit#6268: suggestion: noclip wires
Limón#7879: I made a mod of that already
IDoget#3748: a logic world api at that?
IDoget#3748: i also think we should have a official way of getting external data. kinda like the TPS mod but faster and not modded
BitorBit#6268: yes
IDoget#3748: the wireless transmitter is a good idea
IDoget#3748: lol
BitorBit#6268: it drives balls with smiles and makes them bigital xd
BitorBit#6268: we need wire bus
BitorBit#6268: yes
IDoget#3748: lol
IDoget#3748: a actual bus
BitorBit#6268: BUS
BitorBit#6268: wireless block(transmitter/recover) takes 2 ticks to transmit one bit
BitorBit#6268: not piston
IDoget#3748: sooo... CARS
Erikbot#6368: moving parts is possible with mods, I think someone made a piston mod.
Erikbot#6368: jimmy should release 1.1 before 0.91
BitorBit#6268: ***``gud``***
CrispyPin#1149: moving parts are coming post 1.0
BitorBit#6268: servo motor/motor <[newline]>  <[newline]> servo motor: can set angle in binary number, we can set how many pins are on servo motor (8 max) <[newline]> motor: 2 pins, one is foward and another one is backwards(we can set speed of it in motor settings)
Ecconia#4929: At least not the boards within the world. <[newline]> However with version 0.91 you can save and load boards (again). And these might have tags (maybe). You can name them, so with good names you might find them as well.
TheWildJarvi《THE SEMI SEER》#1337: would be cool to have an inventory of saved boards that you could spawn into the world that could be sorted by that tagging feature
EmergencyTemporalShift#0001: I mean worlds have tags, I see no reason for boards not to
Saint Bepis#9299: Is there any thought of "tagging" boards with hashtags, so you can more easily clone grab and edit things?
GHXX#9078: oracle machine <https://en.wikipedia.org/wiki/Oracle_machine> when
MichaelBot#9291: Just build 1000 oracles, it will work some of the time at least
GHXX#9078: and hacky shenanigans 😄
GHXX#9078: elevators 😮
GHXX#9078: pistons alone would be verry cool
GHXX#9078: xD
GHXX#9078: make a ram car, and when you want to access a different part of the ram you just drive it one over
GHXX#9078: e.g. compute the sha256 hash of the following 10 bytes
Verlio_H#0201: jimmy should just add engines and moving boards as well as proper like friction and stuff to the physics so we can make vehicles using logic
GHXX#9078: the input would change between attempts though
GHXX#9078: a task, 12 hours building time, and everyone can submit solutions during that time also
GHXX#9078: LW drag race - who build something that can compute a solution quicker
Verlio_H#0201: its related to logic I swear
DanielGJ44#4557: Could we get a racecar in Logic world
EmergencyTemporalShift#0001: It would only be one tick so it wouldn't be that overpowered :)
Dragon Lord#6944: (technically the if you look at the one tick buffer as if it's forwarding a low signal in the opposite direction, you have a -1 tick delay)
Dragon Lord#6944: yeah, you could get a computer that gives solutions before programmed
EmergencyTemporalShift#0001: It would be very useful in some situations
Jimmy#8080: hmm
EmergencyTemporalShift#0001: <@154964593397989376> can we have a 10x10x10 buffer with a minus one tick delay?
circuitgamer77#0377: I think that was mentioned as an idea, but not yet because it's really hard to implement.
MichaelBot#9291: Not sure if it's already coming, but resizing posts that have stuff on them would be a nice quality of life thing, likewise resizing circuit boards with things stuck on their edges
DanielGJ44#4557: Run it on an actual raspberry pie
Ecconia#4929: Just port it... little bit of rewriting, not even Unity involved, easy.
BitorBit#6268: it would be cool if we were able to do that
BitorBit#6268: dont take it seriously
BitorBit#6268: its a joke
Jimmy#8080: Yeah, this is intended behavior
EmergencyTemporalShift#0001: But this makes sense?
Erikbot#6368: (fixing this is practically impossible in the current implementation and would just make the game slower)
Erikbot#6368: literally unplayable
DanielGJ44#4557: /s(uggestions)
Erikbot#6368: \:(
Limón#7879: I prefer the 1 + 2i + 3j + 4k
Limón#7879: that looks ugly
Erikbot#6368: Wikipedia seems pretty clear, /s*{6,2,9,8,4,6,1,3}
Limón#7879: I would do a octonion but I don't know how to represent them as a number
GHXX#9078: </sarcasm> ez xml exploit <sarcasm>
Limón#7879: ```css <[newline]> p { <[newline]>     tone: "sarcasm" <[newline]> }``````html <[newline]> <p>hi</p>```
Erikbot#6368: (quaternion)
DanielGJ44#4557: text.append "/s"
Erikbot#6368: it makes sense (/s)*(1 - 3i + 4j - k)
CrispyPin#1149: `<sarcasm>` <[newline]> please continue, I havent closed the tag
GHXX#9078: <s>hi</s>
CrispyPin#1149: I agree (/s)^3 /j
Limón#7879: ok (/s)^(3 + 41i)
DanielGJ44#4557: That having been said, also only make good jokes that are obviously jokes because some are just not it
Erikbot#6368: ok (/s)^3
DanielGJ44#4557: There has never been an occasion for me where the /s HASN'T completely ruined the joke. Please don't use /s or /j. If people have a stick up their ass and don't get the joke, that makes it all the more funny imo
Erikbot#6368: (/s)^3
CrispyPin#1149: joke(s)
Erikbot#6368: sarcasm is when I don't understand the joke /s/s/s
Limón#7879: maybe they are doing sarcasm aswell
Ecconia#4929: Isn't that rather, sarcasm?
RyanT#1426: btw, if you end a joke message with /s, everyone will know that it's a joke
BitorBit#6268: it would be cool to be able to run it
BitorBit#6268: dont take it seriusly
BitorBit#6268: it was a joke
RyanT#1426: I don't think that'll work. just get a raspberry pi cuz that runs linux
BitorBit#6268: logic world server on arduino?
Ecconia#4929: Everything wrong with key bindings. <@!154964593397989376> I hope you like these suggestions 😉 <[newline]> My quality of life suggestions:
ThePiGuy24#0369: HMM has a display that works pretty much exactly like the latter
sybergoosejr#8256: i suggest this so you can have a in game display without 30k+ components and d-latches dedicated to a screen when your cpu setup is only 1/10th the size.
sybergoosejr#8256: suggestion: pixel mapped display components. i can imagine 2 types. one that acts more like a CRT and scans across the bitmap/field 1 pixel per tick lighting updating the active pixel with the value input on the pegs. (optional vertical and horizontal sync input/output pegs) and XY display. 2 sets of pegs for x and y of the pixel you want to change and a 3rd set for color to write. (optional enable/write peg) setting the options for both displays to adjust screen height/width in pixels and color pallet/pegs.
Erikbot#6368: <@!154964593397989376>
Erikbot#6368: my ram design has a component update complexity of O(sqrt(sqrt(n))), however it requires **4 spatial dimensions**, jimmy plz fix.
JoshuaSpeedy#3545: the ability to edit the terrain height map
IDoget#3748: oh wow ty
GHXX#9078: you can do that in one go with multiconnect
GHXX#9078: simply connect all pegs from index 1 to N-1 to the peg at the next position, so 1 connects to 2, 2 to 3 etc.
GHXX#9078: use multiconnect
IDoget#3748: i have like 18 in a row that all need to be connected and i dont want to have to click like 50 times
IDoget#3748: PLEASE the ability to connect all pegs in a row together
GHXX#9078: oooh like adding a peg in-between an existing connection, such that a connection from A to B becomes A C B
EmergencyTemporalShift#0001: peg rather
GHXX#9078: place a peg onto a post
EmergencyTemporalShift#0001: Even better if you can move it to a new peg in one step without having to place one separately
EmergencyTemporalShift#0001: The ability to select a wire and then drag it onto a peg could be useful for routing. This would move the midpoint of the wire to the selected peg
TheWildJarvi《THE SEMI SEER》#1337: <:Troll:830028645510021140>
TheWildJarvi《THE SEMI SEER》#1337: C compiliation time
Saltypretzel#0321: There'd have to be lots of tests. The architectures are probably vastly different.
EmergencyTemporalShift#0001: Wait, chairs should have an output to test if someone is sitting in them
EmergencyTemporalShift#0001: More of a suggestion for the discord then than the game, I'd like to see people taking their cpu's and competing/benchmarking them against one another
circuitgamer77#0377: Same here
EmergencyTemporalShift#0001: What I dislike about java is you can't overload operators
CrispyPin#1149: smh
CrispyPin#1149: read my name
RyanT#1426: what about FML and whatever MC APIs it uses?
GHXX#9078: difference being that c# isnt full of bad design decisions
binaryclock03#5762: thank you
CrispyPin#1149: you can change the profile on several displays at once if you multi select them with z
binaryclock03#5762: reason for wanting this: if I have a monitor and I want to change between 2 configs really quickly I'd have to modify the current config... Unless I went to each display and manually switched it to another config
binaryclock03#5762: Suggestion: Make displays use profiles which you can easily choose different configs for
binaryclock03#5762: https://tenor.com/view/why-would-you-say-something-so-controversial-yet-so-brave-gif-11096319
CrispyPin#1149: should be easy enough to port, c# is just microsoft java
EmergencyTemporalShift#0001: Let's just add the create mod from Minecraft, I'm sure that would be easy enough /s
BitorBit#6268: ez global server create <[newline]> as aditional button
TheWildJarvi《THE SEMI SEER》#1337: Lmao good catch thank you
TheWildJarvi《THE SEMI SEER》#1337: Yes I did
Saltypretzel#0321: Didn’t you flip it around. I always remembered it as discrete time, and quantized voltages.
BitorBit#6268: if we hold tab longer than 4 sec we get player list <[newline]> if we hold tab less than 4 sec we get inventory
binaryclock03#5762: actually, it would be cool if we could choose how many bits are in a cable
binaryclock03#5762: if we got bundled wires I'd love to see byte (8 bit cables) and 64 byte cables (512 bit)
binaryclock03#5762: bundled wires would be nice too, but I mean something that can be used for audio n stuff
TheWildJarvi《THE SEMI SEER》#1337: ayy thats fair, but im on the bundled wire team >:D
binaryclock03#5762: I guess to rephrase my original suggestion. I'd love to see some sort of analog signal, even if its discretized
TheWildJarvi《THE SEMI SEER》#1337: like you get the nyquist minimuim sampling frequency from it
TheWildJarvi《THE SEMI SEER》#1337: this concept was hammered into me during my signals and systems and communication courses
binaryclock03#5762: thanks for bringing it up 🙂 I looked into it and it makes a lot of sense
TheWildJarvi《THE SEMI SEER》#1337: you are 100000% correct :)
Limón#7879: but sure
Limón#7879: idea sounds weird
binaryclock03#5762: also we should probably continue this in <#401255675264761868>
Limón#7879: do you know the idea of integral
binaryclock03#5762: both
Limón#7879: which one, or both?
binaryclock03#5762: I dont see it
binaryclock03#5762: ??
Limón#7879: left looks like integral and right looks like derivative
binaryclock03#5762: while on the right the amplitude is broken up but the time can be anything
binaryclock03#5762: notice how the time is broken up and the amplitude can be anything on the left
binaryclock03#5762: the left is discretization the right is quantization
binaryclock03#5762: 
Limón#7879: looks like integral
binaryclock03#5762: 
Limón#7879: what does "does breaking up time make it into discrete parts" mean? because I am trying to think of that and it's a bit weird to me
TheWildJarvi《THE SEMI SEER》#1337: thats all i meant :)
TheWildJarvi《THE SEMI SEER》#1337: breaking up the amplitude into discrete parts is quantization <[newline]>  <[newline]> breaking the time into discrete parts is called discretization
binaryclock03#5762: nothing to do with time
binaryclock03#5762: so I know in physics and chem quantization is simply breaking something up into discrete parts. Such as the quantization of photon energies
TheWildJarvi《THE SEMI SEER》#1337: okay, my only point was to provide a distinction between time and amplitude
Limón#7879: and it seems to be more about the math stuff
Limón#7879: there is an mit paper that comes up but I don't feel like reading it (as it's 24 pages long)
Limón#7879: > The digitization of analog signals involves the rounding off of the values which are approximately equal to the analog values. The method of sampling chooses a few points on the analog signal and then these points are joined to round off the value to a near stabilized value. Such a process is called as Quantization. <[newline]> https://www.tutorialspoint.com/digital_communication/digital_communication_quantization.htm
Limón#7879: when I look up "what is quantization electrical engineering" I find basically the same definition google gave me
TheWildJarvi《THE SEMI SEER》#1337: im pretty sure they have well defined meanings throughout all fields of science
binaryclock03#5762: you know, I think it would be great to have a channel that is essentially a dictionary. It would have some common good to know words and their definitions as they relate to digital logic and signal processing
binaryclock03#5762: because in different fields they mean different things
binaryclock03#5762: no but he is right to make sure I know what the terms mean in the context of this server
Limón#7879: so it doesn't really matter what term they used
TheWildJarvi《THE SEMI SEER》#1337: i never said they used it wrong, just to be careful with the terms as they mean vastly different things
Limón#7879: as you understood what they meant
Limón#7879: I feel like they used the term correctly
binaryclock03#5762: I see, sorry I don't have a background in this stuff. I study materials and stuff irl
Limón#7879: ***and digital signal processing***
Limón#7879: 
TheWildJarvi《THE SEMI SEER》#1337: it is how its defined in signals and systems
binaryclock03#5762: hmm maybe in electronics/logic, but I dont think thats true for the rest of science
TheWildJarvi《THE SEMI SEER》#1337: discretization has to do with amplitude
TheWildJarvi《THE SEMI SEER》#1337: quantizing has to do with time
binaryclock03#5762: "Quantization is the process of constraining an input from a continuous or otherwise large set of values to a discrete set"
binaryclock03#5762: ?
TheWildJarvi《THE SEMI SEER》#1337: also dont get confused between quantization and discretization
TheWildJarvi《THE SEMI SEER》#1337: ehh its really a percentage from 0 to 100% so yeah there would be stepping involved
binaryclock03#5762: I guess analog isnt the right word here
binaryclock03#5762: if time is discrete, then anything based on time also has to be discrete, therefore analog signals would have to be discrete as well
binaryclock03#5762: I get that, but in a video game its impossible to simulate real analog signals
TheWildJarvi《THE SEMI SEER》#1337: that really isnt analog
binaryclock03#5762: I'd honestly love to see some sort of analog signal, even if it is quantized analog
TheWildJarvi《THE SEMI SEER》#1337: floating?
binaryclock03#5762: tri state as in on/ off and onf?
circuitgamer77#0377: I don't know how well it would fit, but could we get tri-state as an option?  It allows for a few more things than we have right now :)
EmergencyTemporalShift#0001: I like wadbo
binaryclock03#5762: any plans to get touchscreens? (displays with a button output)
Dragon Lord#6944: you had it set to m for mini, when it should have ben tied to w for wadbo!
Saltypretzel#0321: now the interesthing thing is that PMOS logic is sometimes drawn in a way that makes it look like nmos. Like this intel 4004 schematic looks like NMOS, but Vcc is actually negative.
PseudoGoose#2841: NMOS is just PMOS but flipped logic levels
Saltypretzel#0321: Cause no resistance
Saltypretzel#0321: Yeah but ideal CMOS gates can’t
Dragon Lord#6944: as long as your main drain has a good resistance and you choose your components well, you should be able to do it
Saltypretzel#0321: Yeah CMOS, for push pull. But you can’t have any wired logic without blowing something up
EmergencyTemporalShift#0001: Plus, I believe that a combination of regular delay and second delay could make lag compensation possible
EmergencyTemporalShift#0001: The one that fires every second would be helpful for if the server lags, it could still try to keep up
EmergencyTemporalShift#0001: A tps independent way to measure seconds would be nice. I'm thinking either a delay unit that fires after the number of seconds passes or a clock that fires every second
Reese4221#8317: :)
TheWildJarvi《THE SEMI SEER》#1337: wow brilliant, i never thought of that /s
TheWildJarvi《THE SEMI SEER》#1337: for instance, when I make a adder/subtractor, and I want it fixed into subtract mode, having a constant on peg would be convenient for size.
Reese4221#8317: then dont connect a input
TheWildJarvi《THE SEMI SEER》#1337: i dont want it to be able to be inverted
Dragon Lord#6944: that's an inverter
binaryclock03#5762: if you use 2 inverters and pull the line before the second inverter high you can pull the line low
TheWildJarvi《THE SEMI SEER》#1337: having a constant true peg would be nice also
Dragon Lord#6944: they're often used in conjuction
Saltypretzel#0321: high has priority over low
Saltypretzel#0321: because logic world is very PMOS like
Saltypretzel#0321: yes i think that would easily allow NMOS like systems.
Dragon Lord#6944: it would allow you to force a line low instead of only being able to force it high
EmergencyTemporalShift#0001: What would grounding do in this context?
AMA#6937: i have two little ideas : <[newline]> first one isnt that important but adding  grounding would be nice  <[newline]> second one is the ability to make circuit of any kind in an area  and then be able to simplify it to single block with only inputs and outputs (like and gate) and be able to save them and use them in new circuits and now simplify that and so on and so forth (something like copy pasting  + layer of abstraction)
EmergencyTemporalShift#0001: I have a matrix bot actully, I haven't touched it in months
Dragon Lord#6944: *drops discord rooms for each server and integrates a matrix client into LW*
EmergencyTemporalShift#0001: _drops chat support and gives every server a discord room_
Jimmy#8080: Indeed. It would also be nice to have whispers/private chats. Lots of enhancements are coming to multiplayer.
Dragon Lord#6944: <@!282927907947544588>
PseudoGoose#2841: but yes
PseudoGoose#2841: <:pingsock:736606147238428773>
EmergencyTemporalShift#0001: A way to say someones name and have it autocomplete and ding them would be nice
KyleRokuKyu#6975: Like, maybe hitting page down would sink it 1 and only allow if the circuit board is an exact size match and no components collide
KyleRokuKyu#6975: Example
KyleRokuKyu#6975: It would be WONDERFUL if there was a way to paste a board in place of another board. <[newline]>  <[newline]> Like, when making vertically stacked logic wherein the ceiling/overhang of where the circuit board will stack above is used.
EmergencyTemporalShift#0001: Also, transparent glass computer cases
EmergencyTemporalShift#0001: I think there should be better trap support. When I think of logic, I honestly think of some good old fasion Indiana Jones
circuitgamer77#0377: I think that might have been added then removed for improvements, but I could easily be wrong on that.
BlockOfGaming#7101: Suggestion: <[newline]> A way to search settings
circuitgamer77#0377: This has been suggested, but it doesn't sound like it's planned for the vanilla game unfortunately
BitorBit#6268: suggestion <[newline]>  <[newline]> name: circuit packing <[newline]>  <[newline]> function: put circuits to smaller size(boxes) <[newline]> example: SSD(~512 bits) to save into 5x3x5 cube with input/output pins on the sides(depends where we put them) <[newline]>                 : clock in a 1x2x3 block with method
Ecconia#4929: Website time
circuitgamer77#0377: just display the number of milliseconds since the start of the universe instead of this horrid unix timestamp
DADp#7461: use unix timestamp instead of this horid iso 8601
circuitgamer77#0377: (I don't remember which channel's threads have it, but I would check the <#401255675264761868> channel)
circuitgamer77#0377: See threads
ThePiGuy24#0369: [website suggestion] add the option to use ISO 8601 date format rather than the current horrific american date format
BitorBit#6268: anyone knows active servers?
PillburyDohBoy2#0651: I do not know if this has been suggested, but these are nice. These, but flush with the surface would be even nicer.
EmergencyTemporalShift#0001: Hey Jimmy, what if you had dynamic lighting?
EmergencyTemporalShift#0001: <@!583032682091380753>
Ecconia#4929: (And that was planned at some point, the auto download of mods from LW website. Not sure if plans have change or will.)
GHXX#9078: would would also be cool: if the client could download the required mods automatically, either from the server or (more securely) from the logicworld website, like factorio does it <[newline]> (but thats for when modding is actually officially supported)
JoshuaSpeedy#3545: Modpack support, where you can have different profiles with a different set of mods enabled.
GHXX#9078: snag the data thats in someone else's ram!
GHXX#9078: (not a real) suggestion: <[newline]> broken oracle: <[newline]> returns the state of a random wire and if this state is zero, that wire is set to 1 for a tick
ThePiGuy24#0369: it predicts every future simultaneously, which exact future the prediction is from is something unknowable however
OkamiShadowX5#3319: A right angle socket that lets us connect a board vertically on a horizontal board would be cool. <[newline]> we could make tight stack boards with PCIe like sockets.  <[newline]>  <[newline]> i enabled through hole sockets and couldn't get anything to connect to it.  i can see why its disabled.
Reese4221#8317: praise be the lord RNGesus
Reese4221#8317: you just need to bew lucky
Reese4221#8317: it can technically
EmergencyTemporalShift#0001: Jimmy, can you make it so the Oracle can actually predict the future?
Dragon Lord#6944: He has a point... If nothing else, you could put a bit of a wire frame style coloration similar to a 1x1 circuit board on the mounts if it's really that hard to tell apart
RyanT#1426: How? Boards are colourable, and they dont hurt readability of builds
Jimmy#8080: I don't want to have colorable mounts in vanilla. It would hurt readability of builds
Reese4221#8317: <@!154964593397989376>
RyanT#1426: guess jimmy never thought of that lol, and neither did I
EmergencyTemporalShift#0001: Wait, mounts can't have their color changed??
Reese4221#8317: enjoy!
EmergencyTemporalShift#0001: Ah, that's handy
Reese4221#8317: you could multi select a bunch of boards (press z on them) and then configure them to change the colors all at once (x)
EmergencyTemporalShift#0001: Any plans for a spray gun to quickly color things?
Limón#7879: that would be a simple mod to make
Limón#7879: MINECRAFT 😭
EmergencyTemporalShift#0001: Or spawning red stone bugs if you toggle an inverter too fast
Dragon Lord#6944: torch burnout mod
TheDevBird#3364: or a mod where inverters can burn out if used too much
Jimmy#8080: It's difficult and kind of awkward to align two boards with Through Sockets. It's not so bad on simple boards, but there's a lot of difficulty on more complicated ones.
Wessel#9460: just wonderng why are u dissatisfied with the trough sockets it works great!
Dragon Lord#6944: you could call it bitmash XD
EmergencyTemporalShift#0001: I just got a dumb mod idea, logic gates have a chance of being trampled like minecraft farmland
Jimmy#8080: That's correct, I'm not satisfied with their implementation yet. If you want to play with the WIP, open `GameData/MHG/Components/components_miscellaneous.succ` and give the Through Sockets a column/category so they appear in the selection menu.
circuitgamer77#0377: I think those are implemented, but not complete so they're hidden.
Wessel#9460: Sockets that go trough a board would be awesome!
Vinyl Boot Maven of Shade#1858: A tile is 0.3x0.3 boards are .15 thick. Pegs on surface fine placed at 0.1. Things can have specified placement points too.
circuitgamer77#0377: Could just be integers - a tile could be 12 units.
circuitgamer77#0377: So maybe a tile is 1.2, with board fine placement being 0.3, peg fine placement being 0.4, and board height being 0.6?
circuitgamer77#0377: It's 1/4 the board height
circuitgamer77#0377: Board width.  I'm mispeaking a lot
circuitgamer77#0377: I'm going to do some quick testing
circuitgamer77#0377: I mean 1/6 of the board height
circuitgamer77#0377: I don't know what the fine placement interval for boards is though - I think it's smaller than 1/6
circuitgamer77#0377: Could it be 0.2 for the peg and 0.3 for the board, with the width being 0.6?
GHXX#9078: hmm must be 0.15 then indeed
circuitgamer77#0377: Yes
GHXX#9078: are you sure?
circuitgamer77#0377: The height of a board is half the width
GHXX#9078: yeah
GHXX#9078: right?
GHXX#9078: prob 0.1
circuitgamer77#0377: That would be 0.15?
circuitgamer77#0377: What's the height?
GHXX#9078: and a third of that is 0.1
circuitgamer77#0377: that would make sense
GHXX#9078: i think a board cell is 0.3 across
circuitgamer77#0377: I would expect it to be a multiple of 3 because the fine placement allows thirds
GHXX#9078: also would need some sort of scanner i guess
GHXX#9078: pretty sure it's 0.1
GHXX#9078: whatever the smallest placing distance is
GHXX#9078: could move it a fixed 0.1 every tick or something
GHXX#9078: a piston, a wireplacer and a block placer
circuitgamer77#0377: Might start causing floating point errors again if it has to do fine motion...
GHXX#9078: that could be so cool
circuitgamer77#0377: Pistons for motion?
GHXX#9078: and a way to place wires
GHXX#9078: jokes aside though, what about a way to move circuit boards, or simply: a way to automatically place a component
GHXX#9078: a 3d printer where little ants build your circuit
circuitgamer77#0377: Ants?  Their collective intelligence is very logical...
GHXX#9078: ooooooof
Dragon Lord#6944: my cat growing up ate a sewing needle and had to have surgery to get it out
Dragon Lord#6944: spagetty guts
GHXX#9078: imagine a cat eating wires
CrispyPin#1149: they are not but yes we need them
Limón#7879: they are also *super* logical
Limón#7879: what about cats
EmergencyTemporalShift#0001: Due to them being highly logical creatures.
EmergencyTemporalShift#0001: Hear me out, DUCKS
MichaelBot#9291: That's exactly what I was doing when I made the post 🙂, wanted to swap my decoder to negative logic
Ecconia#4929: (Component replacement with keeping wires attached, is planned afaik) <[newline]> Use case building decoders, your example.
MichaelBot#9291: It would be convenient if there was a way to change a component and keep the wiring on it (not sure exactly how this looks when there are different arities, but eg it would be cool to be able to turn a buffer into an inverter or vice versa without redoing connections), or perhaps drag all the connections from one input/output to another
Jimmy#8080: Maybe I could add a secret setting for it though
Jimmy#8080: Yeah, this is the way. It isn't allowed directly because otherwise it's *way* too easy to accidentally delete a ton of work. Even with undo/redo, that's still an unpleasant experience I want to prevent.
circuitgamer77#0377: Pick the board up first, then hit delete.
Funky Egg#5652: Can you make it so we can delete a board while there are components on it
Dragon Lord#6944: Rekurshun go brrrrr
Jimmy#8080: I agree. Same deal with resizing boards while there's stuff attached to their sides. I plan to support both someday, but it's tricky.
NitramiuZ#4145: It would be amazing if you could resize mounts while there were circuts on them
GHXX#9078: simply store all wire states at the start of the tick, <[newline]> then split all dirty gates among a list of threads and have them come up with the gate outputs, and then those outputs form the new inputs effectively
GHXX#9078: without any issues 🤔 (~~except for 0tick gates potentially~~)
GHXX#9078: in fact, it should be possible to concurrently tick ALL logicgates
GHXX#9078: imo multithreading is a better approach since the performance gain is much higher, and the only pre-requisite is getting a list of circuits that are not affecting eachother. <[newline]> And during the start of each simtick, a queue of those circuits is formed, and then a threadpool of N threads processes those circuits, and when the queue is emptied, this restarts. <[newline]> The end result should not change at all, since all circuits are seperate
binaryclock03#5762: idk man I gotta get back to irl stuff, I imagine its not impossible to do
GHXX#9078: that already excludes most if not all counters for example
GHXX#9078: no recursion?
binaryclock03#5762: which we can just say, no modded gates, no recursion. Problem solved
GHXX#9078: while blackboxing may be doable for some circuits, as i mentioned, it will become problematic with delays, modded gates, and especailly with recursions
GHXX#9078: which is fundamentally different
GHXX#9078: on fpgas i can physically run multiple things at the same time
binaryclock03#5762: remember a lot of these problems of "black boxing" components has already been solved for real life since digital logic is literally what runs our cpus
binaryclock03#5762: its how digital electronic sims are done, and I also believe fpgas
binaryclock03#5762: Im not qualified to explain that, look up ABEL or HDL
GHXX#9078: and it will get incredibly difficult when recursions happen
GHXX#9078: how would you blackbox this?
binaryclock03#5762: neither are particularly easy
binaryclock03#5762: Both are solutions to the same problems, both could be implemented
GHXX#9078: wouldnt multithreading be much more beneficial?
binaryclock03#5762: its just to help remove some of the logic in the world from components that could be simplified down in the code but cant because it still needs to be simulated in game
GHXX#9078: what is the idea then?
binaryclock03#5762: the idea isnt to make the game easier or to compact eveything down into a single "cpu" chip
binaryclock03#5762: I imagine you wouldn't be able to black box blackboxed components
GHXX#9078: then you will likely disregard the variable runtime
GHXX#9078: none currently, but what if you make a multiply-circuit that has a variable runtime, then blackbox that, and then use it again and blackblox the circuit again
binaryclock03#5762: what vanilla gate has that
GHXX#9078: what about logic gates that have a variable execution time based on the input?
binaryclock03#5762: I mean in terms of the game it might be considered a gate, but in terms of digital logic its not
binaryclock03#5762: thats not exactly a gate, and not exactly something that should be black boxed anyways since its receiving external input. Thats also a special case because its nothing like anything else we have in game
GHXX#9078: but faster simspeed could also be accomplished using multithreading
GHXX#9078: no, e.g. the tcp bridge is not possible to be made using ingame stuff
GHXX#9078: sim quality should never differ
binaryclock03#5762: You should be able to make any modded gate in game anyways
binaryclock03#5762: the thing about black boxing would be there would have to be some rules to how its done. If you want better sim quality things like memory would be harder to do I think. Modded gates could also not be allowed if it turns out to be such a problem
GHXX#9078: so those gates have to be excluded or still simulated
GHXX#9078: you do not know how the game behaves though
binaryclock03#5762: just add the delays
GHXX#9078: what about gates that are added by mods
binaryclock03#5762: what do you mean
GHXX#9078: what about modded gates
binaryclock03#5762: fast buffer isnt really a gate, and alright instead of counting how many gate, you just add the delays... Problem solved
GHXX#9078: modded gates may be even longer
GHXX#9078: fastbuffer is 0 rest is 1
GHXX#9078: components have different gate times
binaryclock03#5762: you just add how many components are in series from the input to the output
binaryclock03#5762: I mean thats easy though
GHXX#9078: so its not as easy as making it a logical expression
GHXX#9078: you also need to simulate tick times though
binaryclock03#5762: it can always be simplified, to make a nand gate you need 2 components, to make a 16 pin and gate you need 5 and gates... and so on
GHXX#9078: blackboxing shouldn't help at all from a loading standpoint nor from a simulation standpoint (unless if the server literally simplifies the gate, but that would be odd since that would imply that you could have simplified it) <[newline]> From what i saw, while modding, only changed components are updated, so the game does not re-update all wires every tick. <[newline]> Loading a map on the server side may be slow for the same reason as on the client, but thats speculation. <[newline]> Whats no speculation is that simulation could be multithreaded relatively easily for additional speed by splitting up disjoint circuit nets into different work-items.
circuitgamer77#0377: I would be interested as well :)
binaryclock03#5762: perhaps this should move out of <#906825697190895646>. If anyone knows how the sim is done on a really high level I'd love to hear it in <#401255675264761868>... @ me
circuitgamer77#0377: I don't know, maybe someone else does?
binaryclock03#5762: how is the sim even done? Is it just broken down into Boolean algebra in some really efficient manor??
circuitgamer77#0377: 't think the sim is the slow part.
circuitgamer77#0377: I'm guessing, but I really don
circuitgamer77#0377: Maybe the server slows down because it's trying to send tons of packets to the client?
circuitgamer77#0377: no, maybe I'm wrong there if that's the case
binaryclock03#5762: I understand frame drops (cuz of rendering)
binaryclock03#5762: so it shouldnt be slowing down
binaryclock03#5762: well the server doesnt handle rendering does it?
circuitgamer77#0377: My guess is the slow part is just rendering
binaryclock03#5762: It is, I agree
circuitgamer77#0377: The simulation is super optimized already.
circuitgamer77#0377: I think it would still simulate it as if it were the original components, but just not render it?
binaryclock03#5762: 😦
TheWildJarvi《THE SEMI SEER》#1337: jimmy hasnt used any formal digital logic languages so most simulation tools(think spice but for digital logic) are off the table
binaryclock03#5762: well it seems that there is already a soft cap to how complex you can make your stuff before sim speed starts to suffer
binaryclock03#5762: hmm
TheWildJarvi《THE SEMI SEER》#1337: at that point the game would be rewritten to support it
circuitgamer77#0377: I've also asked if something could be added to disable rendering of everything but displays and inputs, but I don't know what the decision is there either.
binaryclock03#5762: it could have a simulator built into it
TheWildJarvi《THE SEMI SEER》#1337: i dont see how the game would be able to simulate those components as it doesnt have a ghdl or iverilog backend
binaryclock03#5762: its just that sometimes I want that mb of program storage but the game just cant handle it (It can but it doesnt like it)
binaryclock03#5762: hmm
circuitgamer77#0377: Has been suggested before, but I don't know what the decision is.
binaryclock03#5762: The ability to "black box" components would be really nice.. Seems the server can start to chug once you get a lot of stuff down so being able to turn that 90k component storage block into a single "black box" (of the same size and same delay) would be really nice for building large scale things
Voodoo8648#2429: SUGGESTION: Add ability to import photos. I am starting to learn Digital Logic Electronics and using Logic World for my experimentation and simulation. I am putting together a type of menu that will visually and explain HOW circuits work as I learn them so they can be referenced later by me or someone else. This would be a great virtual educational environment but it would be soooo much easier if I could import photos to better explain diagrams and stuff 🙂
GHXX#9078: so it needs to be done manually each time you start the game
GHXX#9078: doesnt work in the autoexec file tho :P
Jimmy#8080: `commandbindings.add [keybind] [command]`
Luckybuilder#6131: Scalable pegs
binaryclock03#5762: also half sized pegs (make em shorter)
binaryclock03#5762: such as being able to bind no clip to numpad 6 or bind playerscale 0.1 to numpad 8, etc.
binaryclock03#5762: Another thing I'd really like to see is being able to bind console commands to keybinds
binaryclock03#5762: yeah exactly
Luckybuilder#6131: Can only push buttons and pull levers
binaryclock03#5762: So not exactly a demo, but more of a tourist copy or something
binaryclock03#5762: I would love to see a version of the game that's free. But, players with the free version cant build anything, only fly around the world and interact. Sometimes I wanna show my friends the stuff I built but they wouldn't really buy the game to play it.
Jimmy#8080: I would definitely like to do this at some point, but there are a lot of technical challenges with doing so. Due to the complexity of implementation and the low-priority nature of the feature, it will be a while.
autistic.sack.of.friends#0001: 
autistic.sack.of.friends#0001: like for example cutting+welding could make this 1 shape
autistic.sack.of.friends#0001: you can represent any shape with circuit boards, so maybe the weld could be for arbitrary shapes somehow?
circuitgamer77#0377: I agree with both a weld and cut option - there are quite a few places I could have used that in the past.
autistic.sack.of.friends#0001: then weld it back
autistic.sack.of.friends#0001: so if you've built a ton of parts and theres one bit you wanna make into a circuit, you could just cut it out and copy it
autistic.sack.of.friends#0001: maybe even a cutter tool
TheDevBird#3364: Would simplify building houses
autistic.sack.of.friends#0001: it could be neat to have some way to "weld" boards that are exactly aligned, like this
Luckybuilder#6131: Maybe an option to toggle that because I would definitely like that as default but not sure if others would
Dragon Lord#6944: I kind of wonder if maybe find placement should be the default placement mode since so few people seem to know where it's usable...
Dragon Lord#6944: :)
autistic.sack.of.friends#0001: k
Jimmy#8080: Hold ctrl while placing
autistic.sack.of.friends#0001: what is fine place mode?
autistic.sack.of.friends#0001: oh cool
Jimmy#8080: That is correct :)
Dragon Lord#6944: Can't they sit center tile if you fine place then?
autistic.sack.of.friends#0001: *mounts
autistic.sack.of.friends#0001: kinda makes me wish they sat center-tile
autistic.sack.of.friends#0001: also those side-peg things are kind of annoying in that they offset by a half-tile
autistic.sack.of.friends#0001: 
autistic.sack.of.friends#0001: that could work
autistic.sack.of.friends#0001: make it so they either cant fit into that space or shorten the nubs when they're that close?
Jimmy#8080: The reason for the minimum wire distance is that I don't want there to be any wires that are so small they are invisible. I agree it can be overzealous in some situations.
TheWildJarvi《THE SEMI SEER》#1337: yeah it hurts i wish they could
autistic.sack.of.friends#0001: just feels wierd they cant connect?
autistic.sack.of.friends#0001: allow wires to exist in this amount of space, because the two gates can fit
⛄gravitowl⛄#0001: i forgot this existed
GHXX#9078: add a sound using a mod 😛
HuntaBadday#3556: No, but really, the cowbell sound in lw should change
HuntaBadday#3556: 🖊️
GHXX#9078: 🍍
HuntaBadday#3556: Yep, that sound is from the Roland 808 drum machine
GHXX#9078: literally the exact same sound as in https://youtu.be/Ct6BUPvE2sM?t=16
HuntaBadday#3556: Change cowbell sound to this
TheWildJarvi《THE SEMI SEER》#1337: https://tenor.com/view/core-i7-fire-intel-gif-9945213
TheWildJarvi《THE SEMI SEER》#1337: other than my intel pc?
GHXX#9078: imagine components that can catch on fire
CrispyPin#1149: wildfires in logic world when
Limón#7879: Savage response from Jimmy
TheWildJarvi《THE SEMI SEER》#1337: i want purple phychedilc world
Jimmy#8080: tough
pilonpl#4015: Also i don't like rounded corners
Jimmy#8080: Stuff like this is coming :)
Jimmy#8080: Ah gotcha
pilonpl#4015: Dark sky
pilonpl#4015: Dark grass
pilonpl#4015: xd
pilonpl#4015: I mean like the world
Jimmy#8080: The in-game UI is dark by default 🤔
pilonpl#4015: I mean in game dark mode lol
Jimmy#8080: 
Jimmy#8080: https://logicworld.net/settings
pilonpl#4015: Dark mode
Limón#7879: inverted phasic link, a phasic link that's the opposite of the input
GHXX#9078: almost definitely, jimmy said before that simulation is singlethreaded
GHXX#9078: yeah but that's only because you are unlucky likely. <[newline]> E.g. client and server share the cpu cores
circuitgamer77#0377: They are different processes - I've been watching Task Manager closely.  16 cores, and in a test world I could get a sim running faster at lower graphics settings, so it looks to me like the client affects the server sim speed.  I'll experiment more at some point though.
Ecconia#4929: However client as well as server do not make best use of multi-threadding. <[newline]> Feel free to max out your LW and simulation. And see how many cores are actually being used. <[newline]> Client and server might even be different processes, not sure. But at least different threads. And the server is not using the GPU at all. <[newline]> So investigation demanded. But my hypothesis is, that it literally does not matter, given you have 4 cores or more.
circuitgamer77#0377: They are related in singleplayer because the CPU has to process both parts, which is the case I'm worried about.  Also, graphics stuttering on the client would mean you can't necessarily see every frame that you should, which means fast display output would be unreliable.
GHXX#9078: for super high speed performance, multithreading could be viable, so networks that are not connected in any way could be computed concurrently
GHXX#9078: simulation and rendering shouldnt be related (performance wise) fyi, especially when server and client isnt the same machine
circuitgamer77#0377: If it's running at high speeds seeing wires and gates is not helpful anyway in a lot of cases.
circuitgamer77#0377: Option to disable rendering everything but displays and inputs - would be nice for driving the simulation to even higher speeds.
TheWildJarvi《THE SEMI SEER》#1337: heres a video: https://discord.com/channels/401255675264761866/401255675264761868/925836424207544320
TheWildJarvi《THE SEMI SEER》#1337: super haha
Spider EveryOS#8098: I can imagine <[newline]> The default display panels that come with the game are disappointing xD
TheWildJarvi《THE SEMI SEER》#1337: it enables so much cool stuff to be done
TheWildJarvi《THE SEMI SEER》#1337: the 24bit RGB is actually probably the most OP
Spider EveryOS#8098: Thank you!
Vinyl Boot Maven of Shade#1858: HMM has some other ram and rom components as well. Not as OP or specific as the wjm mod. It's in the mod sharing thread in the modding chanel. It also has a resizable 24bit color display
Vinyl Boot Maven of Shade#1858: The wjm I made for you is too specific. I don't considerate an official mod, so i don't plan on sharing it. Of course you can do what ever you want with it.
Spider EveryOS#8098: xD
TheWildJarvi《THE SEMI SEER》#1337: make sure to read the readme or you wont know what pins do what lol
Spider EveryOS#8098: Thank you!
TheWildJarvi《THE SEMI SEER》#1337: its got a lot of featurefull components including a full mips32 register set
Spider EveryOS#8098: Sure! Thank you!
TheWildJarvi《THE SEMI SEER》#1337: i can send zip file if you want
TheWildJarvi《THE SEMI SEER》#1337: oh just noticed he didnt share it there
TheWildJarvi《THE SEMI SEER》#1337: <#910673109164638239>
TheWildJarvi《THE SEMI SEER》#1337: its in the WJM mod
Spider EveryOS#8098: Ok, sweet!
TheWildJarvi《THE SEMI SEER》#1337: there are mods for this, for instance  vinyl made a byte addressable ram component with 65kB
circuitgamer77#0377: Are there any plans for tickrate and noclip to be persistent when you leave and rejoin a world?
Spider EveryOS#8098: My fear is that manually building RAM will make it giant, and also the performance penalties of using so many components.
Spider EveryOS#8098: Oh, ok <[newline]> I had been thinking along the lines of a disk or something xD
Biggycheese69420#4947: the ROM would not be rewritable you would have to input I think hexadecimal into a textbox
circuitgamer77#0377: EEPROM?
Spider EveryOS#8098: Oh <[newline]> A RAM could kind of be created from a ROM of you just make some logic to manually clear each byte stored in ROM <[newline]>  <[newline]> That could be done with a simple counter (spanning the entire address space of the ROM) connected to the address line, and then setting the set bit to on and the value to 0. So I guess it's not too bad if we get ROM but not RAM
Biggycheese69420#4947: only roms have been talked about Jimmy doesn't like the idea of ram as a stock component
Spider EveryOS#8098: RAM would also be cool <[newline]> Like ROM, but requires a constant on single <[newline]> ROM might as well just be made using RAM at that point xD <[newline]> Also, a built-in binary (or hex) editor would be nice in that case
Spider EveryOS#8098: That would be awesome
Vinyl Boot Maven of Shade#1858: I heard it was a possibility, but haven't heard any confirmation.
Limón#7879: I didn't know this
TheWildJarvi《THE SEMI SEER》#1337: there is? :o
Biggycheese69420#4947: Jimmy
Jezza#1264: Awesome sauce.
Biggycheese69420#4947: yes
Jezza#1264: Is there any plans for a ROM component?
Ecconia#4929: ^major update, version 0.91
CrispyPin#1149: coming in the next update
almafa64#1396: prefabs, save circuit boards to a file, so you can load it in in a different save
Limón#7879: me making the 1000 variable kmap
circuitgamer77#0377: I kind of want to write a qm solver now...  Looks like a fun algorithm.
TheWildJarvi《THE SEMI SEER》#1337: i just use qm solver. most kmap softwares stop at 5 or 6 variables
TheWildJarvi《THE SEMI SEER》#1337: i would assume it would be in the esc menu. i think that would be best. or maybe a new hotkey to overlay it on the screen and resize the bubble using jimmys resizing interfaces thing
GHXX#9078: c# is quite performant, so i don't see a reason why mods couldn't add it in Client-Side, only annoying thing would be the ui
Vinyl Boot Maven of Shade#1858: I have k mapped an 8 bit function. Actually multiple. But I can see how it would be more of an external tool thing.
TheWildJarvi《THE SEMI SEER》#1337: paint in lw wen? lol
TheWildJarvi《THE SEMI SEER》#1337: i bet when modding framework comes out, a client side combinational logic reduction calculator mod should be easy to implement.
Sekoia#3968: I was thinking like... a whiteboard block or smth
Sekoia#3968: yeah there are online tools, but this way it'd be very easy to discuss it with someone on a server. On top of that, alt tabbing to look at a brower tab is annoying
TheWildJarvi《THE SEMI SEER》#1337: imagine kmapping an 8bit function lol
TheWildJarvi《THE SEMI SEER》#1337: also for more than 4 variables, no one uses K-mapping, its all done thru Quine McCluskey Reductions: https://www.mathematik.uni-marburg.de/~thormae/lectures/ti1/code/qmc/index.html
TheWildJarvi《THE SEMI SEER》#1337: idk there are a lot of online tools for this, if the game was more of a simulator it would feel appropriate, but as a game it feels like it would be overwhelming for new people.
Vinyl Boot Maven of Shade#1858: That would be cool. Maby a tools menu option or something with help with truth tables and k-maps as well.
Sekoia#3968: like you can make a graph for the state system of a CPU or so
Sekoia#3968: something I randomly thought of; it would be cool if there was some kind of way to build logic graphs to be able to draw up plans without leaving the game
DeadlyRAPTR#1916: there could be an ingame punchcard library or something made of the .txts found
DeadlyRAPTR#1916: thanks
Limón#7879: <#910673109164638239>
DeadlyRAPTR#1916: where is it!
Limón#7879: but good suggestion and it would be cool
DeadlyRAPTR#1916: already???
Limón#7879: already a mod I think
DeadlyRAPTR#1916: I had an idea... maybe instead of dedicated ROM which could be used to skip logic you could add punchcards which must be manually inserted into a custom reader and then allows for a .txt with ones and zeros to act as the punchcard so computers are easier to program
jackson535#1361: which makes it useful for filtering small signals
jackson535#1361: which are 1 tick delay but require at least 2 ticks to pass a signal
jackson535#1361: this is a lot more like the behavior of redstone torches
Ecconia#4929: <@!154964593397989376> I made a suggestion for the BlotterV5 file format, if you ever update it to a higher version. <[newline]> <https://gist.github.com/JimmyCushnie/bebea37a21acbb6e669589967f9512a2#gistcomment-3976204> <[newline]> The gist of it is: The references to the circuit states appear before the circuit states in the file format. <[newline]> This makes parsing the file incredible tedious, if you do not plan on storing references in the way that LogicWorld does it. <[newline]> And any of my tools (for editing and such) would only store the values and discard the references, and generate them on export again. (Doing it like TUNG does, is sufficient for me).
Saphire#0773: I am guessing they are more of a delay line rather than a hold?
TheWildJarvi《THE SEMI SEER》#1337: which i def dont like
TheWildJarvi《THE SEMI SEER》#1337: yea so in Mc the repeaters extend the signal
drawcoco#9558: oh mb (but it changes nothing, the problem can still be asked with 2ticks input to a 4 ticks repeater :p )
commander of the pandas#1576: Both inputs on the comparator are 1 tick
TheWildJarvi《THE SEMI SEER》#1337: its 3 - 1
drawcoco#9558: mhhh 2 ticks repeater but comparator takes one out, isn't it 1 tick?
commander of the pandas#1576: Besides there’s already a reason short pulses can’t go through long delayers. It’s because while the pulse is in the long delayer the pulse will become “invisible” my suggestion is that delayers with double the pulse length should be able to still send them because that way it’s the longest possible while too can still see the pulse
commander of the pandas#1576: Draw coco that’s a 2 tick generator
HuntaBadday#3556: I know, but it would just be convenient if there was a timer
drawcoco#9558: 1 tick gives the signal to a 4 ticks repeater (but I agree it do strange things when working with clocks)
drawcoco#9558: they don't xD
GHXX#9078: try a chain of buffers
Deleted User#0000: We using the ripple effect to delay.
HuntaBadday#3556: Yes, and somebody who needs logic to work correctly
BlueSquare#0307: based sm enjoyer
Limón#7879: and has been suggested
Limón#7879: but that's what would be better
Limón#7879: should isn't the right word
Limón#7879: it should produce a 1 tick pulse that takes 4 ticks to come out
TheWildJarvi《THE SEMI SEER》#1337: only 2rt or 1 rt
TheWildJarvi《THE SEMI SEER》#1337: you cant send 5hz signals thru 3rt repeaters
TheWildJarvi《THE SEMI SEER》#1337: they do
HuntaBadday#3556: Easy to implement
HuntaBadday#3556: It's just a FIFO buffer
HuntaBadday#3556: Yeah
⛄gravitowl⛄#0001: i get the delayer is used to delay signals, i want something that sends a signal after so much time when it receives a signal no matter the length of it
⛄gravitowl⛄#0001: i just want a timer yeah
Biggycheese69420#4947: yes
HuntaBadday#3556: More like timers from scrap mechanic
drawcoco#9558: should act like minecraft repeaters for you?
circuitgamer77#0377: I wouldn't be against two kinds of delayers existing, though.
circuitgamer77#0377: It makes sense though...  Hidden states are aweful for debugging.
CrispyPin#1149: it is intended but inconvenient in some situations
CrispyPin#1149: > suggestions
circuitgamer77#0377: Why is that bad?  Looks like intended behavior...
HuntaBadday#3556: This is why delayers are ass
jaalte#8572: a diffuser part that can be placed on the fronts of multiple panel displays to average out the colors of all the panels it covers <[newline]> this could be used to create pixels with a wider range of colors, without needing to add more pins to existing display panels <[newline]>  <[newline]> it could have different blending modes, such as an additive one to composite 3 RGB display panels into one color with 9 bits of variety instead of 3 separate colors with 3 bits of variety <[newline]>  <[newline]> would pair well with <@!258769251547086849>'s suggestion to give displays an emissive texture
Vinyl Boot Maven of Shade#1858: A word D-latch, and word relay, configurable between 8, 16, 32, and 64 bits(like the and gate). Reasoning: While they would be very large compared to the other components, I feel the component count savings would be worth it. And they would still be rather elementary and versatile. Just 16 addressable 32 bit words would jump from 1024 components to 32. It would take up about the same space(only the clock/enable pins would take up less space) so it fits with the gameplay paradigm. 1, 2, 4, and 8 byte sizes are the most commonly seen, and they can be combined with the normal latches and relays to make any bit length word. A savings of up to 64 times fewer parts would allow for significantly greater size memory blocks and register files.
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: ALSO, when circuits can be saved, ROMs (resizable truth tables) and logic states should be saved too, so you can make programs for computers and share them
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Also, when circuits can be saved, they could have an option to optimise (and maybe hide circuitry by doing it), so it basically test the circuit to see what behaviour has so it doesn't have to calculate it every time you use it
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: I think that truth tables (resizeble) could be useful, even more for ROMs. With and interface where you can type 1s or 0s or a hex value for each 4 bits. Maybe an option for matrix selection, instead of a list
jackson535#1361: no game should require the console for something like that
jackson535#1361: how about a tps number entry box in the pause menu ffs
jackson535#1361: lighting will be improved a few updates from now
ThePiGuy24#0369: make indicator lights have an emissive texture such that they actually glow when in shadow
jackson535#1361: oh the problem I had a while back was registering left click to open the screenshots folder
jackson535#1361: uh maybe
jackson535#1361: would also help when you accidentally make the binding of something [esc]
jackson535#1361: that would be a good call yeah
jackson535#1361: so the game only accepts bindings as being pressed when the keys or in this case drum controller actually change from off to on
jackson535#1361: oh I see
ieee 802.11ac#6337: probably idk how it works internally
ieee 802.11ac#6337: the "filter noise" button would take any non-zero/changing inputs and add them to a blacklist during the bind process when you press the button, thus having things not be overwritten/be combo presses
ieee 802.11ac#6337: long story short i stole this from rpcs3 BUT basically some input devices just randomly have a button that's constantly on/in a weird position, therefore it makes the game think it's a combination press when you just want a normal press
jackson535#1361: not sure what you mean
ieee 802.11ac#6337: a "filter noise" button for any menu that requires a button to be pressed, because i want my rb1 drumkit to work but it thinks i'm holding down the north button (which i'm not)
HomelikeBrick42#1173: ~~that sounds like circuit board compression~~
HomelikeBrick42#1173: hmm
GHXX#9078: i think it could be cool to unlock components after building them. e.g. unlock a rom after building, unlock an xor after making one from just not and and
Limón#7879: to make a 1 bit full adder and to fit as many wires as you can through a hole
Limón#7879: there is a challenge thing in <@!247449046615064577>'s server
DVN Cataclysm#9277: Has anybody suggested adding challenges/levels?  <[newline]> For example: <[newline]> "Using x amount of items / Using these items / Given <some input>, <[newline]>  produce <some result/output>" <[newline]> Please react if you would also like to see these 🙂
Radiant#3222: Colored pegs
circuitgamer77#0377: Agreed :)
Ryan#9918: I think I've noted this before but being able to color wires would be rad
circuitgamer77#0377: That avoids the potential problems with missed ticks offsetting the apparent time.
circuitgamer77#0377: I would say make it output a number that is a time relative to the component's placement, or maybe the computer's time - it would act similar to a RTC, maybe with a selectable bitwidth.  That can still work as a timer because the lowest bit would always switch states every second.
GHXX#9078: but you might run out of digits. thats why it might be better to just output a rising edge every second, because then you could just build a counter to get the tickrate
Ecconia#4929: my preferred thing would be a component that outputs the tick rate as a binary number (so that one can use counters internally).  <[newline]> But I think any of these are for mods.
GHXX#9078: could probs make an ingame clock using simply a 1second delay block
GHXX#9078: ~~simplfy send a tcp request to get the current time from a real-world server 😂~~
ThePiGuy24#0369: a time reference, either a clock or delay that runs at real world time, rather than tick time, so we can make tickrate agnostic creations
GHXX#9078: see https://discord.com/channels/401255675264761866/401255675264761868/924032376932278302
Verlio_H#0201: I mean if you name a creation "free ..." and post link then it would be deleted in that case
GHXX#9078: yeah let me know, i could probably make one in c#
DanielGJ44#4557: I do not have the necessary permissions to do so but I will bring it up with a developer
GHXX#9078: could probs make a bot that checks the site and if it mentions nitro and free on the page, delete the link
DanielGJ44#4557: It was only a matter of time before that started happening unfortunately
DanielGJ44#4557: Another mod did the one in the other channel lol
DanielGJ44#4557: Taken care of, thanks
GHXX#9078: and to everyone else: obviously do not click this link
GHXX#9078: <@&579246303901384704> please delete this message, and all similar messages in other channels
⛄gravitowl⛄#0001: def would buy
Javan590#8265: Could you maybe eventually add circuit compacting? Ik some people are fine with it but its a pain to build a 1 trillion feet long circuit, sorry if thats part of the point
CrispyPin#1149: petition to make the rainbow version the official logo for the game
ThePiGuy24#0369: rainbow version would be more fitting
ThePiGuy24#0369: yes
CrispyPin#1149: even better if theres a rainbow version
CrispyPin#1149: i want them too
CrispyPin#1149: but i assume thats after 1.0
CrispyPin#1149: i think thats on the list for whenever merch becomes a thing
rat#7130: i would buy
rat#7130: you should make thigh-highs black with the white logo on it
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: but I wanted to make it as small as possible and two fast buffers were too big. Now it doesn't matter because I realised I had no depth and height limitations
ThePiGuy24#0369: diodes does seem like a more intuitive name to me though, but that is probably just because i have knowledge in electronics
ThePiGuy24#0369: i watched the video on the diodes a while ago and wondered where they are in the game now
ThePiGuy24#0369: oh thats what they are called now
Macrohard Onfire#0662: data will not flow back from output or from A to B/B to A
Macrohard Onfire#0662: A-----[fast_buffer]\ <[newline]> ......................................[peg]-----output <[newline]> B-----[fast_buffer]/
Macrohard Onfire#0662: just use a fast buffer, it's not that hard
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Yes but the problem is the feedback. I shared a pic on <#901199821212352573> I think. Let me tag it
Limón#7879: I am pretty sure I made a 0 tick or gate component
Limón#7879: or gate is just the peg but bigger
Limón#7879: so maybe an extended mode could be added
Limón#7879: so Jimmy said something about hard-core mode with only inverters
Limón#7879: it makes less problem solving
Limón#7879: BUT
Limón#7879: I think it would be nice to have them in base game
Limón#7879: I don't agree with this
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: I think all logic gates should be 1x1x1 size (excluding I/O, like the AND gate) and also add the OR, NAND, NOR and XNOR gates. Also SR and JK Flip-Flops and T latch. Bigger parts like mux or demux could be made by hand, no need for a dedicated block, but could be a good addition too
jackson535#1361: and have midi keyboard input in LW disabled by default for that matter
jackson535#1361: we need an option to disable LW's use of a midi keyboard. I opened up one of my FL projects at the same time and the whole midi configuration failed and screwed up the project
jackson535#1361: this is possibly a little niche but a pretty bad issue for me with LW affecting other software
ThePiGuy24#0369: ^^
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: I saw the input update video on YouTube, so I though to make a piano for regular keyboard and then I thought "I'm going to make a drum set too". Then I started moving around and the piano started playing by its own because I used W for D4. Then I thought that chairs has to have a "on use" output or key buttons has to have a "only when seated" option so they only work if you are seated
HuntaBadday#3556: I already have a synchronous counter 😂
HuntaBadday#3556: Nevermind
ThePiGuy24#0369: no, not really
HuntaBadday#3556: A synchronous counter will need to have a lot more "random" wiring
ThePiGuy24#0369: which removes the need for the delays on the output
ThePiGuy24#0369: though from the looks of it, what you want is a synchronous counter, rather than an asynchronous like you have currently
HuntaBadday#3556: Exactly
ThePiGuy24#0369: and that will do that
HuntaBadday#3556: Well thats stupid
circuitgamer77#0377: I agree that could be helpful, but I don't think we're going to get that in the base game because Jimmy doesn't want components with hidden states.
HuntaBadday#3556: And when I am dealing with 1 tick pulses the delay doesn't do anything
HuntaBadday#3556: I just want to delay a sequence of pulses
HuntaBadday#3556: I don't think you get it
GHXX#9078: just use a few d-latches that have their clock input set to high always
HuntaBadday#3556: With just that circuitry I can expand to 256 bytes
HuntaBadday#3556: Is what I am trying to do
HuntaBadday#3556: Thats why I suggested it 😂
HomelikeBrick42#1173: you would also need a 1 tick counter to keep track of the current time so you know when to read/write
HomelikeBrick42#1173: when you want to get a value out you just wait for the timer to spit out the value at the wanted address/time
HomelikeBrick42#1173: and you just feed the output into the input so its in a loop
HomelikeBrick42#1173: each tick in the timer could be 1 bit
HomelikeBrick42#1173: you could use that to make timer memory <:thonking:432741465844875264>
HuntaBadday#3556: Add a timer, what the timer will do is it will act like a delayer, but if I input "pulse, pulse, no pulse, pulse" it will just delay the sequence and output "pulse, pulse, no pulse, pulse" after a set amount of ticks
circuitgamer77#0377: Maybe just make the max board size adjustable in a setting?
HuntaBadday#3556: Make boards infinitely expandable, it will make it so I can do things like have a huge CPU fit on one board
Verlio_H#0201: clicking twice is also good for trackpads because right click and dragging is pain
SPECTRE#5183: Well yes
GHXX#9078: have you tried using connectors, since you mentioned your stuff is modular?
totobono4#5551: A component-dex with truth tables :3
totobono4#5551: No OR gate :c
SPECTRE#5183: it is close to what I am suggesting, it requires some more steps but it is worth the trade off for the reduction of mental and physical pain
SPECTRE#5183: im thinking of just doing it manually and using the mod function when you click on a component
SPECTRE#5183: yeah
Deleted User#0000: i guess it is better to find a other way instead of waiting for a fix
SPECTRE#5183: that it why I hope that the feature I am suggesting is implemented, oh and there is more behind that wall
SPECTRE#5183: Just pixels that can display all the letters of the alphabet to make basically a letter billboard
SPECTRE#5183: 
Deleted User#0000: what specification got your display? colordepth/pixel
SPECTRE#5183: it has become an utter joke
SPECTRE#5183: I try to build everything I can modular, but now that I am up to making the hookup from my memory, signal processor --> VRAM to Display
Deleted User#0000: hmm
SPECTRE#5183: same
Dragon Lord#6944: i build pretty much everything modular so i don't have to drag too many wires
SPECTRE#5183: none that I am aware of
SPECTRE#5183: it just becomes tedious
Dragon Lord#6944: sort of, but i can't say i agree... to each their own
Deleted User#0000: there is no way to do it automatically?
SPECTRE#5183: do you kind of see where I am coming from
Dragon Lord#6944: Hmm...
SPECTRE#5183: id rather press a key 2 times than holding down my mouse button and drag a wire
SPECTRE#5183: yep this guy gets it
ThePiGuy24#0369: it wouldnt save time, it would make it slightly less painful though, both mentally and physically
Dragon Lord#6944: Maybe I'm just not fully understanding you...
Dragon Lord#6944: But how does clicking twice save any time over clicking and dragging?
SPECTRE#5183: yeah but rn im working on a display and I have to connect like 456 AND gates together and that takes a lot of time
Dragon Lord#6944: ^^
HomelikeBrick42#1173: i dont see how that really changes much 🤷  <[newline]> you would still have to fly over to both components
SPECTRE#5183: but having the option where you can just click on an input and an output and the wire just joins would get rid of the tedious work aspect
SPECTRE#5183: auto connecting wires would just get rid of the fun in this game
SPECTRE#5183: this basically is what I'm trying to get across
HomelikeBrick42#1173: or just to click on the components separately without holding the mouse button?
HomelikeBrick42#1173: do you want an auto-connecting wire?
SPECTRE#5183: yeah but im talking about clicking on a peg and clicking on the end of another component and the wire joins, there is a mod function where you first left click hold ctrl and then join the wire, but it is a very clunky feature i.e. it takes a few extra steps to achieve its function.
GHXX#9078: not sure if this is already planned, but i saw mods have a property which represents whether or not they have been tampered. What would be really really useful if if mods were signed by logicworld when they have been uploaded to the website, or whereever they can be downloaded from.  <[newline]> And when the game loads a mod it would verify the signature. That way users can be protected from shady third party mod sites that may or may not modify contents. <[newline]> e.g. 9minecraft or similar ones for minecraft 🤮  <[newline]> logicworld backendserver load for that should be minimal. <[newline]> When loading a mod with a signature thats missing or invalid, a prompt could be shown, informing the user what the situation is, and what this means. (feel free to dm me if you want a message that explains it to the user)
Dragon Lord#6944: do you know about multi wire placement?
SPECTRE#5183: it makes large scale projects quite tedious even if you make stackable modules of components
SPECTRE#5183: instead of dragging wires
SPECTRE#5183: there should be an option where you can select a peg and choose another peg and the wire automatically joins (this also applies to components e.g. you click on the output of an switch and choose a display the wire joins automatically)
GHXX#9078: dunno if its been requested yet, but right now if a modded component's input or output count changes, the world cannot be loaded, so it would be cool if in that ase those modded components either get removed or just have all their pins disconnected
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Well I can't tell, I didn't try anything huge at stupidly high speed
Limón#7879: I am pretty sure
Limón#7879: it already does something like that
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: I saw an old video of LW optimisation, where a wall of inverters were flashing. Now it runs smoothly, but pushed too much to the limits, some ticks will be skipped again. I think a good solution, once the tick rate setting is added more visually, is to reduce the tick rate if there are skips due to heavy load or too fast tick rate
totobono4#5551: Or maybe a button "backups" on each world that open the list of the world's backups where you can select a backup and choose between two options : "load the backup" and "overwrite the world with this backup".
totobono4#5551: It will be fun to be able to load a backup on a world with a button "load backups" on each world in the world list.
Dragon Lord#6944: Or you can build a button selector panel
TheWildJarvi《THE SEMI SEER》#1337: a rotary switch is a good idea
zplilpz#9574: Some sort of multi-switch. Perhaps a rotary switch with variable stops would be sufficient
TheWildJarvi《THE SEMI SEER》#1337: make that tile a different color ?
Daimh#5870: Well then in this situation you always need to grab one specific corner of the board to move the whole thing
Vinyl Boot Maven of Shade#1858: Or shift z could add everything in a line from last selected to under cursor. And ctrl z would toggle under cursor from selection.
Vinyl Boot Maven of Shade#1858: You could have select use mod keys. Like in blender. Z would clear selection and select under cursor. Shift z could add to selection like current design for example.
Ecconia#4929: Yeah that would be `ESC` like it is everywhere... (An option here would be to separate the abort and pause-menu option in key bindings)
TheWildJarvi《THE SEMI SEER》#1337: alt+f4 <a:KEKWgif:829851650717909094>
ThePiGuy24#0369: having a dedicated abort/cancel key or simmilar
Ecconia#4929: What alternative do you suggest for aborting multi-select? Cause besides `ESC` there is none, afaik.
Sekoia#3968: you can technically make it work by having the extra boards be attached to the sides of the "main" board
ThePiGuy24#0369: aand i just did it again
ThePiGuy24#0369: make escape (or whatever other button is bound) not cancel multiselect, i have tried to pause the game so many times already while multiselecting and instead just deselected everything
Ecconia#4929: "Stacking" has not made it yet into LW, but it is afaik also planned.
Daimh#5870: Also bigger boards *please* so I can move my entire oversized thing without having to move every bit, or awkwardly make board connections
Daimh#5870: Allow players to resize mounts with pegs on them
commander of the pandas#1576: The ability to make a board transparent (E.G) right clicking. I mean this specifically out of inspiration from LittleBigPlanet how you could make anything transparent by hovering over it and tapping R2
TheWildJarvi《THE SEMI SEER》#1337: transparent boards
circuitgamer77#0377: I don't have my computer with Logic World set up right now, sorry...  Just got home from college.
Foobar#9222: ill move to <#901199821212352573>
Foobar#9222: i cant get it to work
Foobar#9222: Could you show me how that looks?
Foobar#9222: guess my suggestions above are still valid then
Foobar#9222: just checking
Foobar#9222: kk so no real way to do it in 1 go
HomelikeBrick42#1173: and then remove 1
HomelikeBrick42#1173: then 16
HomelikeBrick42#1173: then 8
HomelikeBrick42#1173: then 4
HomelikeBrick42#1173: duplicate it so you have 2 of them
Dragon Lord#6944: Yeah
Foobar#9222: ye but i guess to multi select, you have to have it already stacked 15 times
Dragon Lord#6944: Fr tho, I don't think so unless you multi select
Dragon Lord#6944: Get 15 cloning vats
Foobar#9222: ?
Foobar#9222: is there a way to just make lets say, 15 clones at once
circuitgamer77#0377: You can always place a board sideways on the edge of a board, which you can place sockets on - that lets you stack boards vertically just fine.  I've used that for several circuits.
Foobar#9222: i see
Ecconia#4929: Currently for EarlyAccess through sockets have been disabled. They will however be re-added to the game after some redesigning. As Jimmy is not happy with the current design. <[newline]> There also is an issue currently with placing sockets at the side of a board. But if you only place them on the top you can get very far with them.
Foobar#9222: I think its mostly when connecting certain things that are farther away. Having a single bus is advantageous
Foobar#9222: if the boards are horizontal to be vertically stacked
Foobar#9222: interesting, can you do sockets through the board?
Ecconia#4929: You mean "modded cables"... Anyway discussion for <#901659878869844048> channel.
GHXX#9078: i feel like that could break horribly (modding in cables that is)
Ecconia#4929: (Personally I never have an issue with grouping wires, since all wires which belong to each other are placed next to each other. But that is just my building style - other building styles probably need multi-wires) <[newline]> And regards "components which need multiple wires as input" - modded problems need modded solutions. <[newline]> It is probably fairly easy to make a mod that can add multi-wire. But I have no clue about <#901659878869844048>. I just know the game well (enough).
Ecconia#4929: Socket and MWP demo:
GHXX#9078: even with sockets and multiconnect, the issue that remains is that grouping them isnt too easy
Foobar#9222: Is there a doc for all the blocks?
Foobar#9222: Perhaps its my mistake xd
GHXX#9078: im also all for bundled cables since that could be very useful for modded components that use 8 or more inputs or outputs that are related, e.g. 8 data bits
Ecconia#4929: That pretty much sounds like you are not using Sockets at all 😱
Foobar#9222: I think the current wire system is good in the regard you dont have to worry about wires taking up block space, or connecting to random things etc, that is good. But. Placing wires is an utterly painfull experience (atleast to me, my hand started to hurt quite fast) due to having to repeatedly got peg to peg. Hence the wire block reccomendation. Best of both worlds to keep both systems, although i supposed a block connecting to pegs with current designs might be a bit hard to implement, atleast visually. <[newline]>  <[newline]> and yep, i checked the multi selecting, but unless i am again mistaken, you have to actually select all the components (or the board), interesting system, bit of a hassle for bigger things. <[newline]> Here i will again refer to minecraft and world edit, perhaps an addition to select area instead of components. //stack is usefull as heck 🙂
Foobar#9222: 1) Sorry for my lack of elaboration, it was a reference to a minecraft mod: Bundled cables basically bundle different wires in a single block. Maybe to rephrase adding a "bus", it keeps you from dragging lets say 32 wires if you have 32bit words, between your components. <[newline]>  <[newline]> 2/4) Yep, i figured out the circuit boards, however you still have to build 1 entire 1 before effectivelly stacking them, the wires don't interconnect between them automatically when you do so (unless i missed something). eg: I went ahead and tried to build some 16 bit memory to test out the building. I first had to build 16 bits by hand, then copy paste it vertically, which was tbh kinda hard to do, and then connect the two boards with wires, then copy paste again, and connect the 2 by wires etc.  <[newline]>  <[newline]> Wheres with a proper stacking mechanism, id realisticly only build 1 bit, then stack it horizontally (Wires included, and with wire blocks, any extraneous wires not currently connected too), then stack that vertically and i would be done. (Hey, perhaps im too used to minecraft, but i can't shake the feeling that, even though you have to watch where you place redstone because its an actual block, you can build big things with less hassle)
Ecconia#4929: 8) Grab something and delete it. (Already mentioned...) <[newline]> [I hope this helps...]
Ecconia#4929: 1) What do you mean with "Bundled" cables? Please describe your ideas. Like how you said it. I would think of you make a bunch of wires, then you select them and press "bundle" which draws a string around them to tie them together, then they are no longer straight but you can bundle them... <[newline]> -> I am very sure that is not what you mean... <[newline]> 2) Wire blocks: These are called `Pegs`, if you ignore the stackability. So you want a "block-peg" which connects on contact with other pegs?. <[newline]> 2/3) Use "multi-wire-placement": <https://youtu.be/6P6E4Sj5qMs> <[newline]> 4) You can copy whole boards, you just have to design them in a way, that you can easily use them as "modules" or so. It takes some time to get your head wrapped around that, feel free to ask if you have issues with that. (Q, E, Shift+Q, Shift+E, F) <[newline]> It is difficult - but not impossible, to have the volume copy/pasting mechanic working. But that would be very tricky to implement with good performance. Would probably take a bunch of time until it is in the main game, unless Jimmy... 😛 ||shifts priorities again... I assume that is not yet planned, also because it has unpredictable parent-component effects.|| <[newline]> 5) As already mentioned, you can go small by pressing 'C'. But what you probably need is `noclip` which lets you just fly through everything. Just open console and type it. Tired of typing it? Set a keybinding:  `commandbindings.add <letter> noclip` or so is the syntax, look it up with `help`. Not what you are looking for? You want noclip whenever you fly? Easy, just turn on the super secret setting to enable `noclip` when you fly, but for that you need a mod, which fixes a Stack Overflow Error: Can be found here <https://discord.com/channels/401255675264761866/918113977693769728/918141688160092201> There is also `playerscale` which lets you shrink or grow your character. <[newline]> 7) I saw this suggestion before, a block which you can build on at every side (aka squares at every side).
ieee 802.11ac#6337: a dedicated BPM ticker, trying to set up BPM with just delayers sucks
Foobar#9222: Thx for the delete tip
Foobar#9222: And u have to speficially stop flying to crouch again
Foobar#9222: But you cant stay that way after flying etc
⛄gravitowl⛄#0001: u can press C to crouch
Vinyl Boot Maven of Shade#1858: Using "mod" you can do multi wire place. And if you pick up a board and delete, it deletes the entire thing. There's also multi select that can be used with move and delete.
Limón#7879: I agree with all of these
Foobar#9222: My suggestions, the game has lots of potential. <[newline]> ``` <[newline]> Bundled cables <[newline]> better placement mechanics for wires that are better stackable. (Maybe add wire blocks that connect in a fashion like redstone, plus keep the ones you have now? <[newline]> making things with more bits is really tiring due to hand placing every little wire) <[newline]> Better stacking tools (Think world edit in minecraft) <[newline]> Option to lower player height, to me it feels as though im 3 meters tall :P (Hey i know this is subjective, thats why it could be an *option* <[newline]> I haven't really noticed any *normal* blocks, that you could use as a filler, which wouldve come in handy when i tried to vertically stack <[newline]>  <[newline]> Deleting entire circuits, maybe long holding R to prevent accidental deletions? <[newline]> ```
parallacks#7542: I had no idea that was a thing. There have been a few times that would have been helpful haha
GHXX#9078: now that i think about it. the main use would actually be the bundled inputs and outputs
GHXX#9078: the cable diameter could be 0.9 * <size of a board cell>, so i think in game thats literally 0.9 then. <[newline]> effectively like the big socket i guess
Limón#7879: I say it's as wide as a it would be normally so it keeps things "balanced"
Limón#7879: if we get bundled cables
GHXX#9078: could also offer bundled inputs and outputs for modded gates, that way its easy to have gates that operate on a byte level rather than a bit level
GHXX#9078: I hope we get something like Bundled cables at some point. Basically 8 wires combined into one larger cable. Such a cable can only connect to special pegs and bundled connectors. Would certainly help withmaking buses
circuitgamer77#0377: Re-root option?  This might exist, and I might have used it before, but I'm really tired and not thinking that well...  If it doesn't exist, it would be nice.
TheWildJarvi《THE SEMI SEER》#1337: Hmm okay I'll have to mess with that. Thank you!
PseudoGoose#2841: It still exists, just different default bindings.
TheWildJarvi《THE SEMI SEER》#1337: can we have the mouse scroll wheel reposition option back? i dont like the alt mechanism
EagleWolf404#5555: you can what?
Ecconia#4929: It also does say nothing about moving the board offset with **JKLI** (which you can do - maybe go through the controls).
Ecconia#4929: Like not even when placing a flip-able component. That sucks quite a lot.
Ecconia#4929: It does not mention the **F**lipping though.
[Pre-Scratch] le#1337: it says nothing about rotation
Ecconia#4929: All rotations work. In all (non-collision) cases. <[newline]> Did you also press 'F'? <[newline]> -> What does not work, is mirroring a board. <[newline]>  <[newline]> Btw with F6 you see a summary of keys which you can press.
Ralper#4755: I already tested that. Some orientations are not allowed in some cases
[Pre-Scratch] le#1337: oh thanks i didnt know that lol
circuitgamer77#0377: You can - have you tried shift + the rotation keys?
[Pre-Scratch] le#1337: rotating boards doesnt allow me to rotate them on all axis and can sometimes make stuff very akward so i agree there should be better rotating
Ralper#4755: Suggestion: better rotation tool. <[newline]> It's quite hard to rotate some circuits because of the tool limitations. Maybe a point to point welding tool or a giroscopic rotation tool would work better
Ecconia#4929: Off topic, not gonna answer in this channel. <[newline]> Jk, yes its dark orange and red. Cause why not?
Sekoia#3968: why?
Sekoia#3968: 1x1 red and yellow?
Sekoia#3968: wtf is that grid
Ecconia#4929: if you have other issues or questions, feel free to ask in <#901199821212352573> I am sure we can help you 🙂 <[newline]> No worry, not everyone has the time or elan to go over each and every development blog and YouTube video to know all the features.
Ryan#9918: Im dumb lol
Ryan#9918: I never noticed that down at the bottom...
Ryan#9918: Oh
Ecconia#4929: 
Ryan#9918: Does that make a bit more sense?
Ryan#9918: So you could have A to blue, B to Green, C to Red or something like that.
Ryan#9918: Imagine having a display with 3 inputs and each one turns on a different color that you can set.
Ryan#9918: So you know how an andgate can have mutiple inputs?
Reese4221#8317: do you mean something like <[newline]> ``` <[newline]> RRRGGGBBB <[newline]> ```?
Ecconia#4929: I still do not get it. <[newline]> You can assign one color for any combination of active display inputs. <[newline]> Even the same color multiple times.
Ryan#9918: Or is that a thing and I've overlooked it
Ryan#9918: Sorry, I mean for it to have multiple inputs each linked to a color.
Ecconia#4929: > show the full path wire <[newline]> Planned. <[newline]> > An option to disable player collision <[newline]> Open console, type `noclip` (SP & MP) <[newline]> > allow displays to be programmable <[newline]> Press 'X' choose a color pattern. Not the one you are looking for? Just add new patterns.
Ryan#9918: Things that I've found would be useful: <[newline]> - more intuitive vertical building. Currently copying boards and having them stack vertically on other boards is a pain and requires a good bit of fiddling.  <[newline]> - a hotkey to show the full path of a currently highlighted wire. This would be really helpful for troubleshooting. <[newline]> - let logic gates be vertically stackable.  Not sure why this isnt something that can be done at the moment, but would be really nice to have. Having to building a little ceiling and place gates on top of eachother that way is cumbersome.  <[newline]> - An option to disable player collision in multiplayer. Currently the collision boxes seem a bit large and its annoying to get accidentally pushed around when a friend is trying to get a look at something close. <[newline]> - allow is to color or texture wires. This is a thing IRL and would be immensely helpful for the readability of the game and large builds. <[newline]> - allow displays to be programmable and allow for multiple inputs to change its color.  <[newline]> - a new type of wire/plug that bundles multiple cables into one thick cable. Could possibly show on it which cable is currently lit up. Sorta like data cables in that AE minecraft mod. This would probably be a pain though and much less of a QoL suggestion
[Pre-Scratch] le#1337: how would it work in multiplayer? or if you imported an object from one world to another (once thats implemented)
Eltendo#9710: I mean an option  in the option menu
[Pre-Scratch] le#1337: i think that it makes the game more fun to have collisions
Eltendo#9710: Can you make a option ,that cables have no collission on circut boards and other things
Ecconia#4929: You could make a smaller 1-tick ALU with nc relays. <[newline]> But even nc-relays need 1 tick to change their state, as reaction to the input. <[newline]> It at least should allow 1-tick ICAs, currently iirc 1-tick ALUs had only been built with a CLA setup. <[newline]> I fear that any non-rounting instant option (any thing that could flip a signal), would downgrade the simulation to Redstone level aka broken.
circuitgamer77#0377: Assuming that was your question.
circuitgamer77#0377: I think you can do it - multi-wire select all pegs in a line except for the last one, then for the second group select all in the line but the first.  That should connect all of them together.
[Pre-Scratch] le#1337: i want that feature too
AX03#5549: ':('
Sekoia#3968: nope, not that I know of :(
AX03#5549: something like this
Sekoia#3968: if you mean like, an 8-bit data bus, yes!
Sekoia#3968: if you mean connected a bunch of pegs that are in a line, sadly not that I know of
AX03#5549: yes
Sekoia#3968: I'm assuming you mean pegs
AX03#5549: is there a way to connect multiple pigs in series with one action ?
err0r#5661: oh neeat
Reese4221#8317: you can click X on and gates and add more input pegs unsure about other things
err0r#5661: what if you could edit gates to have multiple inputs
Sekoia#3968: coolcool :)
TheWildJarvi《THE SEMI SEER》#1337: yeah im the guy who asked jimmy for relays in game ;)
TheWildJarvi《THE SEMI SEER》#1337: i remember they used to be in the game but i thought jimmy removed them, but they were just changed to a sub option
Sekoia#3968: also, don't forgot relays are *slightly faster* if you have a whole bunch chained (such as adders), because it only takes a tick to update when the top input changes
TheWildJarvi《THE SEMI SEER》#1337: damnnn okay
Sekoia#3968: absolutely true
Sekoia#3968: you can make an and gate with any amount of inputs from 2-4 (so 2,3,4)
TheWildJarvi《THE SEMI SEER》#1337: i can redo my ALU now and make it faster xD
TheWildJarvi《THE SEMI SEER》#1337: youre not trolling me?
TheWildJarvi《THE SEMI SEER》#1337: wait really?
Limón#7879: press x while looking at an and gate
Limón#7879: that already exists
TheWildJarvi《THE SEMI SEER》#1337: i could really use an and gate with 3 inputs lol
Limón#7879: maybe if you wanted only 1 input at time for some weird reason
Limón#7879: not really any practical use for it
Limón#7879: kinda useless
NxthingbutV0id#1939: Triple and quad xor gate
Limón#7879: one of the reasons is it's impossible with the current system
Limón#7879: with the current system
Limón#7879: impossibe
drawcoco#9558: best option is: no instant alu xD
drawcoco#9558: I would say no, but I'll have to think of it more
Sekoia#3968: although maybe not an instant and?
Sekoia#3968: I imagine that any instant non-identity operation could cause issues
drawcoco#9558: nc relays could do the trick for an instant alu, but the same problem exists with them
circuitgamer77#0377: I think if there will be any way to make instant ALUs, it would be if normally-closed relays are added.  I don't know if that would be enough, but I would really like it as a feature.
circuitgamer77#0377: That would create potential instant infinite loops in a single tick, which the simulation would run forever and never update again.  There's a reason that's not in the game...
drawcoco#9558: instant not gate (so we can make instant alu's) 🙂  <[newline]> kinda like the buffer and instant buffer 😉
TheWildJarvi《THE SEMI SEER》#1337: being able to put a bubble on any input or output of a XOR or AND gate would be very dank
jackson535#1361: roast
WhyNot?#2534: nothing worth taking though
WhyNot?#2534: well, too bad i dug it up and opened it for valuables
jackson535#1361: my house protects me from the evils of the world
jackson535#1361: without my house I am dead xd
jackson535#1361: without me my house is useless
jackson535#1361: my house is my best friend
jackson535#1361: this is my house
jackson535#1361: ⚰️
Ecconia#4929: eviller <@491262532917657600>
Ecconia#4929: https://media.discordapp.net/attachments/401255675264761868/917213489192382496/Screenshot_20211206_013452.png
Limón#7879: this is very true
Biggycheese69420#4947: ok
jackson535#1361: that's a horrible excuse to a bad ui
Biggycheese69420#4947: also if you didn't make your design like that you wouldn't have that issue
Biggycheese69420#4947: ok
jackson535#1361: it's too confusing to look at a bunch of gray things overlapping eachother
jackson535#1361: I already said
Biggycheese69420#4947: what's the issue
jackson535#1361: something new is required
jackson535#1361: it's not the solution
jackson535#1361: xd
Biggycheese69420#4947: np
TheWildJarvi《THE SEMI SEER》#1337: thank u sm
Biggycheese69420#4947: turn on the setting that highlights wires
jackson535#1361: evil
jackson535#1361: 
Biggycheese69420#4947: 
TheWildJarvi《THE SEMI SEER》#1337: ok lol
Biggycheese69420#4947: 1 sec
TheWildJarvi《THE SEMI SEER》#1337: wait howw???
jackson535#1361: the highlighting being transparent makes it even worse
Biggycheese69420#4947: 
jackson535#1361: yeah but it's not the same
Biggycheese69420#4947: there's an option where you can make it highlight all the connections to pegs as well.
jackson535#1361: the highlight thing just isn't enough
jackson535#1361: visual borders on the texture of pegs and all connections. it is hard to look at a maze of gray pegs and know what you are pointing at
TheWildJarvi《THE SEMI SEER》#1337: then you have TFF
TheWildJarvi《THE SEMI SEER》#1337: take  DFF, invert the output, feed back to DIN
Limón#7879: that counts
Limón#7879: just make an alu
cabral#9547: states are REALLY useful
cabral#9547: i think it is, bro
WhyNot?#2534: Super useful for counters and stuff
Limón#7879: it wouldn't be that useful imo
WhyNot?#2534: I get it now XD
WhyNot?#2534: XD
Limón#7879: you don't really need it in the game
Limón#7879: I am saying the whole thing
WhyNot?#2534: ? As far as I know it’s not
Limón#7879: I see it in the screenshot
Limón#7879: yeah its in the game
cabral#9547: a `T-Latch` is a `(TOGGLE)`
cabral#9547: no, only `D-Latch`, that is `(SET, RESET)`
Limón#7879: is that not in the game?
cabral#9547: this T-Latch needs to be in the game.. it's so useful!
cabral#9547: 
TheWildJarvi《THE SEMI SEER》#1337: True. Maybe someone can mod it lol
Dragon Lord#6944: i kinda like this idea, but it goes against the main game philosophy of having everything reproducible from a screenshot like jimmy wants :/
TheWildJarvi《THE SEMI SEER》#1337: I like a layering idea. You can assign components to a layer, those components wires have the color of the layer. You can enable and disable the layer(it's still their physically but you just clip through them and theyre invisible.)
Limón#7879: if no colored wires then add some way to easily distinguish wires from one another
NxthingbutV0id#1939: poggers!
WhyNot?#2534: found this in files while looking for something else
commander of the pandas#1576: I’m pretty sure this does exist in the game but is non-obtainable it is either being planned or was tested and decided against
NxthingbutV0id#1939: A socket that goes though the boards similar to the peg though
Ecconia#4929: *opens settings, turns on "only true bobbies allowed", laughs along with each Bobby and does not care about custom avatars*
blane1257#8086: that feels excessive to me, custom models and materials feels like the furthest that makes any sense to be implemented
TheWildJarvi《THE SEMI SEER》#1337: that would be really cool
CrispyPin#1149: evenually™️
CrispyPin#1149: jimmy wants vrchat level avatar customisation
Broyojo#2667: there would maybe be a maximum triangle counter or maximum physical size
TheWildJarvi《THE SEMI SEER》#1337: Probably the latter idea would work better because of shadows and no one being able to make a dick as their character model
TheWildJarvi《THE SEMI SEER》#1337: Or maybe even just options for bobby like slenderness(changes his radius in the horizontal plane but not vertical) or height
TheWildJarvi《THE SEMI SEER》#1337: Instead of skins. People can link a model to their Lw.net account and then verified servers can pull that info so the user can join the server with a custom model?
TheWildJarvi《THE SEMI SEER》#1337: Will we ever get custom player models?
Sekoia#3968: you can also just.. noclip?
TheWildJarvi《THE SEMI SEER》#1337: bobby
TheWildJarvi《THE SEMI SEER》#1337: i was tthinking of a shortcut, something like, hold alt, and then scroll to adjust bobby size
TheWildJarvi《THE SEMI SEER》#1337: i can go largeer too?
TheWildJarvi《THE SEMI SEER》#1337: oh where is the crouch size option? :o
Limón#7879: and you can go inside circuits
Limón#7879: you can set crouch size to super tiny
Limón#7879: that already is a feature
TheWildJarvi《THE SEMI SEER》#1337: also what about having "layers" so you can say, build control logic on layer 1, then turn on and off viewing this layer to help debug?
TheWildJarvi《THE SEMI SEER》#1337: and on my large builds i would like to get large so everything is easier to see
TheWildJarvi《THE SEMI SEER》#1337: i would like to be able to shrink down and go inside my circuits for easy debugging
TheWildJarvi《THE SEMI SEER》#1337: On the fly, resizeable bobby would be very nice
Broyojo#2667: i'm sure jimmy is already
101#1688: The game can already render hundreds of thousands of components and wires, I'd be surprised if it wasn't using instancing already
blane1257#8086: as far as fps goes.. i wonder if GPU instancing can be used? the game only uses a relatively small set of components, so it would be a huge imrovement if they could be GPU instanced, so all the components of the same type are rendered in a single draw call
circuitgamer77#0377: The problem I'm running into is that there are a lot of wires in a small space between several components, so it's really hard to delete all the wires from one peg in that mess.
101#1688: So it does, I stand corrected
101#1688: Oh it does?
CrispyPin#1149: apparently
CrispyPin#1149: as well as pistons
CrispyPin#1149: the mod has ics in it
101#1688: Read the title of the mod.
101#1688: They weren't.
WhyNot?#2534: Yeah, sorry about that
CrispyPin#1149: that seems pointless when replying to the last message
101#1688: You should use the reply feature so it's more obvious what you are replying to.
CrispyPin#1149: oh damn had no idea
CrispyPin#1149: ~~i know but this is jimmy we're talking about~~
WhyNot?#2534: https://github.com/KyleRokuKyu/Locomotion/tree/main/The%20Actual%20Mod/Locomotion
101#1688: It wouldn't be mandatory?
WhyNot?#2534: its already in a mod
CrispyPin#1149: maybe not at the moment but mod support is far from finished
CrispyPin#1149: but it wouldnt look as cool
101#1688: Also would give people a way to solve most of the games current capacity limitations.
101#1688: That's a pity. I'd be surprised if all of those advantages could be realised as a mod.
CrispyPin#1149: sadly wont happen in vanilla
101#1688: Suggestion: <[newline]> Component cans - a box you can attach to a board that occludes all components under the can. To get signals in and out, sockets could be allowed to intersect with the edges of the can. Would be toggle-able so you could see what's inside if you need to. <[newline]> Benefits: <[newline]> - Lot's of repetitive circuits that people don't need to look at. <[newline]> - Don't need to render components inside cans, improving FPS. <[newline]> - Don't need to send simulation state for components inside cans, allowing for optimisation of network traffic. <[newline]> - Don't need to load colliders for components inside cans, improving loading times for clients. <[newline]> Thoughts?
101#1688: Or just hold R to remove everything you mouse over, or shift+R
NUF333#9161: Add moving things
circuitgamer77#0377: Bulk wire removal.  Same idea as multi wire place, but just takes away any wires that would be placed in those spots.  Maybe on mod-shift-click by default?
Vinyl Boot Maven of Shade#1858: Alphabetical then. makes sense. But on server side, some things don't exist. Already tried with Label.IData. So shared needs to be separate and loaded first.
Limón#7879: for load order I am pretty sure
Limón#7879: it goes client -> server -> shared
Vinyl Boot Maven of Shade#1858: Lol I suppose. In that case the suggestion is to load the shared folder first
Limón#7879: put everything in shared ig
Limón#7879: idk
Vinyl Boot Maven of Shade#1858: What the? What's the point then?
Limón#7879: it probably loads after server so you can't reference it
Vinyl Boot Maven of Shade#1858: How's it work. I tried it on my Memory Mod. Had an IData class in src\shared namespace HMM.Shared and referenced it in my memory component in src\server. And when loading world logs said cannot find namespace HMM.Shared.
Bumpy#3920: ^
BigMintyMitch#1620: Only if they weren't so big...
Bumpy#3920: A way to place through-pegs closer together, similar to that of normal pegs would be fantastic
Sekoia#3968: press v on a button, EXPAND
Limón#7879: there already is a shared folder <:bobby_thinking:692790276938399835>
Vinyl Boot Maven of Shade#1858: For future modding: in addition to server and client folders for cs source files, a shared folder please.
Bumpy#3920: when do we get the big dev button in the dev world as a component? 🙂
Deleted User#0000: I made a bus tower for this.
blane1257#8086: im fine honestly if there arent RGB maps for pincounts that arent divisible by 3 since theres a decent chance someone will want to implement it differently anyways, since theres so many possible ways to use the extra bits
blane1257#8086: yeah, there should be some default RGB maps, at least on the ones that are divisible by 3
CrispyPin#1149: this needs to be a thing but in the mean time you could generate the configs with a script
WhyNot?#2534: maybe add a premade rgb color band to the displays? took me a fair bit so i could use rgb inputs XD
Radiant#3222: there is a server list which you add ips then name the server
Radiant#3222: like ingame
Radiant#3222: except there is already
Vinyl Boot Maven of Shade#1858: For modding support in the future: move TData interfaces into shared. Since the raw data is accessible through custom data anyway, I feel it would be appropriate to have proper access client side and serverside.
Daimh#5870: Night skybox
Darkhog#8724: Add server list, so I don't have to know IP to join a server.
WhyNot?#2534: i like this idea
Michael#8718: Any plans to make sockets such that it's easy to connect vertical and horizontal boards via socket?
Michael#8718: Bloom image makes me think of TRON
Ecconia#4929: Do not forget cutting boards into two. Maybe also placing sockets for the wires.  <[newline]> And also to remove socket connections from a wire if on same board. <[newline]> (the board cutting and merging is already planned)
tophangel#4416: Combine boards with equal length touching faces into a single board
DjSapsan#4530: I wanna diagonal boards
Limón#7879: More of a discord suggestion than a game one
Limón#7879: Logic world advent calender
101#1688: Would be nice to have a readout that can show us how fast the simulation is running and if it's behind or not, maybe in there with the FPS readout?
Ecconia#4929: You need one (fast)Buffer basically any diode per input.
TheWildJarvi《THE SEMI SEER》#1337: thats how it should work imo
TheWildJarvi《THE SEMI SEER》#1337: whats wrong with that second video
Kai#9999: might be a little cheaty, but it'd be so useful... especially in cases where you're relaying from a peg, which has unavoidable bidirectional behaviour
Limón#7879: But I feel as if that will not be added soon
Limón#7879: I want to see wireless things
Ecconia#4929: In general I would like to see mods for new or different component features. If the mod is liked by the community it could go into the main game. <[newline]> And a different instant diode is something a mod can add in many different styles for sure.
Ecconia#4929: Bruh <could write a long response, but I think LW has other much more important design issues>
Deleted User#0000: It is like school, but without the boring part. hehe
Deleted User#0000: To see you people building on and on is awesome. I love it to be here!
Deleted User#0000: Jimmy got enough to do i guess.
NxthingbutV0id#1939: Rtx on
NxthingbutV0id#1939: Glowing cables + a nighttime setting in the next update
Deleted User#0000: It seems to me, that light is life.
NxthingbutV0id#1939: Retro logic world
Deleted User#0000: hehe
NxthingbutV0id#1939: Ooooh I want
Deleted User#0000: Nice try, but this is to good! 🙂
Limón#7879: I like directional wires is a good idea but it might cause confusion if it looks like normal wires
Kai#9999: hell, even if you had a buffer the width of a peg or small contact i'd be happy. in the screenshot, those are 8 wires spaced as close together as possible (using ctrl for fine movement). enforcing directionality with that setup makes it look really wonky, especially with the fast buffers being so hefty
TheWildJarvi《THE SEMI SEER》#1337: i havent formed an opinion > your opinion
CrispyPin#1149: delayer > small buffer
circuitgamer77#0377: Just making buffers slightly shorter would be nice - it's really frustrating that you can't stack boards with buffers closely because of the little triangle of buffer sticking up.  Having normal buffers be a third of a tile wide would be nice though, and would make the decision of whether to use the fast buffer or normal buffer more interesting.  So far, in almost any case where I need a buffer I use a fast buffer because they're both so big that I can't really make it compact anyway.
CrispyPin#1149: we asked for smaller buffers and instead jimmy added the small slower buffers and removed 1tick delayers :(
Keklord#1759: I don't like the idea of directional wires for the reasons above, but I do agree buffers, especially fast, are a bit bulky
SpencerBeige#8582: I feel like directional wires would be a little cheaty, but I definitely think buffers should be smaller. Maybe the size of a socket for a buffer and a chubby socket for a fast buffer.
HomelikeBrick42#1173: why?
circuitgamer77#0377: I think buffers and fast buffers should be a bit smaller, but I definitely think I like them better than I would directional wires.  The only problem I have with them is their size...
TheWildJarvi《THE SEMI SEER》#1337: im def not a fan of directional wires
Kai#9999: (srry for the paragraph, didn't expect my suggestion to turn out this long) <[newline]> So hear me out: make directional wires a thing <[newline]> Clarification: This means a 2nd wire type that's monodirectional, it doesn't replace normal wires <[newline]>  <[newline]> Sure, buffers get the job done, but they're bulky and kinda unintuitive in my eyes. They're sorta just *there*, purely for the diode part of what repeaters are in Minecraft. They just aren't *useful* like repeaters, here's what I mean (bear with me) <[newline]>  <[newline]> In Minecraft, I would argue that repeaters exist solely to add yielding into redstone contraptions. Think about the problem from an engineering standpoint: You have a really long redstone wire that extends for tens of thousands of blocks; a really really long wire, connected to a lever. If there were no limit to wire length, you could imagine how taxing updating all those blocks must be if you do it all at once, doing 1000s of operations every redstone tick. In order to extend any redstone signal, you *must* experience a small amount of delay (comparators + redstone torches do this as well). It shows that this was intentionally done to distribute load over a series of redstone ticks, to prevent ticks from taking too long (or possibly causing infinite loops as well) <[newline]>  <[newline]> The fact repeaters *also* act as diodes is a smart move by the Minecraft devs, giving them an actual, practical use rather than purely as a wire extender. It keeps contraptions performant, while also introducing a brand new mechanic to redstone in general: monodirectionality, something that was unachievable beforehand. Personally, I believe they solve the problem at hand incredibly well <[newline]>  <[newline]> So, what am I trying to say? Why make the comparison to Minecraft? I'm saying that buffers are an ineffective solution to the problem at hand. In Logic World, buffers sorta just *exist*. There's no limit to how long a wire can be, and every output (or blot as I've heard) has a built-in 1-tick delay. I feel like the current implementation of diodes is just too much for what it could be, they just take up too much space, and we already have delayers which do the exact same thing. The fact that a "fast buffer" has to exist just to escape the delay feels really wonky and redundant in my opinion; a band-aid fix if you will <[newline]>  <[newline]> Therefore, I feel like directional wires being an *extension* of the current wire mechanics (rather than its own abstraction/entity/object) wouldn't do much harm to the structure of the game engine. Gameplay-wise, you could hold `shift+left-click` to place a directional wire (which has some arrowed texture for clarity), and the order in which you connect the two nodes would determine its directionality. It wouldn't require a terrible amount of change to the current wire system, all it would affect is the propagation of signals. The logic for which would change from transmitting anything regardless, to transmitting only if `power == input`, otherwise doing nothing (where `input` is the first node selected when placing the wire, and `power` being the node attempting to transmit through the connection). <[newline]> Ergo, nothing else about signaling logic would have to be refactored, just the propagation. <[newline]>  <[newline]> Personally, I think this makes a good compromise between usability, understandability, and adding bloat to the codebase: Directional wires wouldn't cause much overhead if optimized correctly. They'd be clearly marked, and diodes would no longer be objects which would decrease the complexity of contraptions, making them cleaner as well. <[newline]>  <[newline]> I'm interested in what people have to say about this. I know I'm fairly new to this community, but a game like this just speaks my language, and I definitely wanna see it grow and evolve
Stenodyon#8192: might be a bit too much glow
Stenodyon#8192: tried remaking it, not the same camera position as I didn't save it and couldn't bother reproducing it exactly
CrispyPin#1149: we must make it a tradition
Stenodyon#8192: I wonder how many iterations this image is gonna go through
jackson535#1361: 
jackson535#1361: I tried adding some bloom and contrast to make it glow a little, but I might have made it worse
jackson535#1361: matrix stuff right there
jackson535#1361: woah
CrispyPin#1149: you can rebind the interact or wire drawing button
Limón#7879: <:hand_left:847168730776862780><:bobby_joy:692808284331049040><:hand_right:847168704542277722>
Limón#7879: bobby hands
Keklord#1759: or just the ability to deselect the current item by hitting the currently held item button again, would probably make more sense than a "hand" item
Limón#7879: or have more dexterity
Limón#7879: a current solution would be to use a big item like a chair maybe
Limón#7879: you want a hand like in minecraft
Keklord#1759: when you click to draw a wire but the wire peg is far away, so you end up placing a switch somewhere random behind the peg
Limón#7879: ah I think I understand now
Limón#7879: I probably blocked it out of my brain
Limón#7879: I don't understand how hitting switches and drawing wire lines correlates
Keklord#1759: how does that stop me from placing items when drawing wire lines
Limón#7879: 
Keklord#1759: I don't know what you mean
Limón#7879: hit a key that does not do something
Limón#7879: keys
Keklord#1759: Read next line as well
Limón#7879: keys
Keklord#1759: would also make accidental placements when drawing wires a thing of the past
Keklord#1759: Item "hands" so i can hit my switches without placing stuff all the time accidentally
OopsieDoopsie#0412: you'll change your mind after you collapse half of your circuit by mistake without realising it <:bobby_thinking:692790276938399835>
Daimh#5870: Resizing this in I think should pull the pins in with it
CrispyPin#1149: 
CrispyPin#1149: make this possible ples
Daimh#5870: And also an always noclip whenflying option would be nice
Daimh#5870: (So you can stay small but fly around)
Daimh#5870: An option to disable uncrouching when flying
Sekoia#3968: alternatively, if we could swap things that have the same number of i/o out, it'd be great (like ands for relays/xors, buffers for nots or delayers, etc)
Sekoia#3968: random thing I thought of; it'd be great if we could copy/paste wires, so that similar structures with slightly different components can be made quickly
101#1688: Yes please! Wouldn't mind a tooltip that tells you how big a board is when you're resizing it as well
Sekoia#3968: the circuit board max size should be a power of 2
NxthingbutV0id#1939: Have a little overlay that appears when you hover over a part in the menu, giving a description of how the object works
hyperfluff#0001: Having a overlay of what component im looking at would be awsome for beginners <[newline]> kinda like in minecraft with the TMI mod and stuff <[newline]> a small textbox at a corner of the window that just displays the name and maybe some other stuff as soon as you look at a part
Artin_#3197: being able to place pegs on the sides of mounts would be nice
PseudoGoose#2841: Coloring switches and coloring wires are two very different things - in terms of complexity they're about the same (though wires are a bit more involved), but definitely different aesthetically
Limón#7879: but not wires
Limón#7879: we can have colored switches
PseudoGoose#2841: <@!859806257774723102>  jimmy has said before that it's probably not going to be a vanilla mechanic: https://discord.com/channels/401255675264761866/401255675264761868/829884785559601172
Limón#7879: I pray to jimmy every day that we get colorable wires and pegs 🙏
OopsieDoopsie#0412: Would be wonderful if it was possible to change socket connector color, so I can read, say, where's the lowest bit just by one glance
Xasin#9114: Is there a way to make linked circuit boards? <[newline]> I.e. when modifying one of them, all of them receive the modifications? <[newline]>  <[newline]> The size of the board would probably have to remain fixed (or boards that can't be resized just break), but this could be amazing when working on larger configurations of circuits when you want to swap something out.
Xasin#9114: I want :>
Stenodyon#8192: ye here is the original: https://discord.com/channels/401255675264761866/401255675264761868/911568137806299216
HomelikeBrick42#1173: if it was rendered with green light then the fast buffers would be darker because they are actually red
CrispyPin#1149: "slightly off"
HomelikeBrick42#1173: the fast buffers are brighter than they should be
HomelikeBrick42#1173: oh thats why the colors are slightly off in the green image
Stenodyon#8192: This is a render I did using blender that <@!316553438186045441> edited to be green (was originally red)
Xasin#9114: Ohhh right, I was confident I had tried that, but apparently not.
HomelikeBrick42#1173: you can already delete entire boards just by picking it up with `g` and then pressing `r` to delete it
Xasin#9114: Also, I would suggest to change the keyboard layout and actions. <[newline]>  <[newline]> It feels a little cumbersome and odd. <[newline]>  <[newline]> Since the general context of this project is quite aligned to something like KiCAD, maybe modifying the keyboard usage a bit to align better with it could help. <[newline]>  <[newline]> I find the "Right click to cancel" methodology of KiCAD very useful, for example. <[newline]> R to rotate rather than to delete, with shift-r being reverse rotation. <[newline]> That frees up "e" for interaction or editing. <[newline]>  <[newline]> Repeatedly pressing z on the multi-select when looking at a circuit board to select sub-components of the board could be very nice as well, that allows quick deletion of an entire board in an intuitive manner.
Xasin#9114: Or just as a mod?
Xasin#9114: Was this done with a filter? <[newline]> Wow <3
DADp#7461: alt f4 is your friend
Ecconia#4929: Oh... the connecting screen lacks a "Cancel" button...
Biggycheese69420#4947: RGB wires
Deleted User#0000: Include Night & Day and including glowing connections. So i can build my own informatic town.
DADp#7461: that would ve neat
Artin_#3197: i would like color coded wires in the game
Vinyl Boot Maven of Shade#1858: Please fix the n^2 world loading algorithm. Bubble sorts are evil.
Biggycheese69420#4947: it's a lot better now
CrispyPin#1149: ah understandable
Vinyl Boot Maven of Shade#1858: Awesome. I got into the habit of avoiding it since in 90.1 it would always crash and/or break the world.
CrispyPin#1149: i think you can even resize mounts and boards at the same time but don't quote me on that
CrispyPin#1149: multi select works for most things, including changing colours and resizing
Vinyl Boot Maven of Shade#1858: Awesome
Biggycheese69420#4947: yes
Vinyl Boot Maven of Shade#1858: Do you just multiselect and then edit one of them?
Biggycheese69420#4947: z
Vinyl Boot Maven of Shade#1858: Oh really?!
CrispyPin#1149: or do you want to create several profiles?
CrispyPin#1149: you can apply a setting to multiple displays at once with multi select
Vinyl Boot Maven of Shade#1858: A simple way to copy and paste Display settings would be really nice.
Daimh#5870: Or even just modify the smallest mount size to be half of what it currently is, and shrink it a bit horizontally so it is the size of a peg. (for precise placements like pegs)
Daimh#5870: Minature version of mount that can be used to stack pegs. The mount can go on top of pegs and then another peg can go on top of that
Leo3065#5297: It would be great to have a way to import and export screen color config, for example something like export to and paste from clipboard. This make reusing and generating configs easier
The_Circuit_Guy2828#5138: (the singers and drums)
The_Circuit_Guy2828#5138: because the game already has MIDI instruments
The_Circuit_Guy2828#5138: that would be really useful if you wanted to build a MIDI player or something
sybergoosejr#8256: i like the bottom option there almost provides same density but with half of the output (assuming restricted to a flat board)
Limón#7879: I think buffer should be removed and 1 ticj delayer added back
PseudoGoose#2841: i mean, there are some options
sybergoosejr#8256: delay chain vs smallest buffer chain i could think of in 5 seconds. this is why the tv's use delayers vs buffers.
sybergoosejr#8256: 
PseudoGoose#2841: g <:oof:675395089094148106>
sybergoosejr#8256: change design of buffer to be easily chainable or update delayer back to 1 tick. this change totally goofs all the tv's on ryans server.\
Limón#7879: Make Logger.Info take an any type instead of string
Limón#7879: add source console
Daimh#5870: Also it may be like this for a reason but I think it would be nice to be able to precisely move through pegs
Daimh#5870: Toggle switch to make flying always Noclip mode
Limón#7879: ~~someone made a mod of this~~ someone already answered sorry
km#1297: yeah I'll shoot for that then
CrispyPin#1149: you could have both components ig
km#1297: was also wondering if people would want it to stay 1 bit at a time or prefer like an 8 bit variant
km#1297: I'll be working on making file-emitter better today because the commands are a pain and I think I know how to do it without the commands now
Michael#8718: As they have different shapes and wiring
Michael#8718: I liked both options!
CrispyPin#1149: so he should have removed buffers again lol
HomelikeBrick42#1173: i guess he didnt want to have 2 parts that did the same thing?
Michael#8718: What was wrong with one tick delayers?
CrispyPin#1149: <https://github.com/kyle-marshall/file-emitter/> if you want to try it
Michael#8718: Roger 🙂
CrispyPin#1149: someone already made a mod that reads a file serially
Michael#8718: Could be done serially, byte at a time, requiring more use work
Michael#8718: I have been thinking about being able to read files outside game.  Maybe it would have to be a mod.  But a component with a reset pin, a next pin, and an 8 bit data line, could read one byte at a time from an outside file that was configured in some way.  Reset would reset to the first byte of file.  Next would move to the next byte.  The data lines would yield the byte value from the current position in file
DADp#7461: things and things and things and things and things and things and things
Moldytzu#4226: something like this
Moldytzu#4226: in the selection menu, when you hover over a component, a popup in the right of the screen appear with additional information (like use, size etc.) about the component
CrispyPin#1149: coming post 1.0
Sky_Hawk0#3287: VR support?
64548#0351: Hey Jimmy would not have as in the next version you optimize the creation and loading of the world? <[newline]> and that I noticed that it takes a lot for the world to create and loading after
DanielGJ44#4557: And then it'll just be "the game is loading lol"
DanielGJ44#4557: Add a secret/not secret setting for "performance friendly loading screen"
Ecconia#4929: Nevertheless an enhancement to it would be amazing, even if its a quick and dirty one. <[newline]> Just a simple state text telling us players what the heck the client is doing there, while we wait minutes 😛
blane1257#8086: yay
Jimmy#8080: I've seen several people say this now so I'll definitely keep it in mind
blane1257#8086: please just keep it in lmao
blane1257#8086: even if you put it in the corner with like a fancy loading animation and stuff
blane1257#8086: ill be so sad if you dont
blane1257#8086: 100%
blane1257#8086: you should keep the game is loading lol
Jimmy#8080: excellent idea
Verlio_H#0201: the game is loading lol should be one of the quotes
Daimh#5870: If not I'll just mod it to have this current screen <:miu_cool:501111536052338689>
Jimmy#8080: Lol I'll see what I can do
Daimh#5870: Cause I personally love it :p
Daimh#5870: I really hope there's going to be some secret setting to keep the current loading screen
Jimmy#8080: Lol, my quotes are found in the default server MOTDs :)
Zephi#4594: https://cdn.discordapp.com/attachments/865000391656865813/896075595040055296/unknown.png
Zephi#4594: cancdy crudsh
Satan#9850: Will it have quotes from you jimmy?
Jimmy#8080: Later in EA we'll have much prettier loading screens, with original art, quotes from famous computer scientists, and a few minigames. This is very low priority though so don't expect it for a while
Daimh#5870: Have a loading bar that says 'the game is loading lol' over and over and slowly loads in :)
Dragon Lord#6944: You could just put the loading screen that you have on the website lol
lucman64 🇺🇦#5391: please add something ware while your loading you can see whats happening so its not so boring when I join a big server
Jimmy#8080: this is coming but not for several updates, it'll be part of some bigger features
Reese4221#8317: i guess but its still annoying
HomelikeBrick42#1173: also if you do pick them up you can press escape to cancel the move
Daimh#5870: I know mind blowing :)
Reese4221#8317: cant believe i didnt think of that
Reese4221#8317: amazing advice!
Daimh#5870: Just dont pick them up <:4Head:770443890137628672>
Reese4221#8317: if it hasnt been suggested before a "board lock" toggle for boards so you cant pick them up
Ecconia#4929: Just color the boards....... Did that in my CPU too.
Daimh#5870: You cant exactly place labels on small spots like this (I did see someone use colored boards as a replacement but that seems a bit weird to me)
Daimh#5870: Well I mean if you have a super dense structure with pegs there isn't much space for em :)
Lisa#4756: Use labels 🏷
Daimh#5870: Has that been suggested yet? :p
Daimh#5870: Colored through pegs? 🤔
Daimh#5870: I guess <:Hmm:872602955881259009>
Daimh#5870: Yeah
CrispyPin#1149: and since  you aren't space constrained it doesn't really matter much that 7segs are big
CrispyPin#1149: this is very much the kind of thing a mod could do but wouldnt fit the main game
Lisa#4756: Eh not too much tbh
Daimh#5870: Like a stupid amount of space
Daimh#5870: Well you can make your own 7 segment display but it takes a LOT of space
RyanT#1426: that kinda spoils making one urself out of displays
Daimh#5870: But on the back it has a hex input
Daimh#5870: have a label that is a numerical display
Attikitty#2900: it would be fun to actually have a special board instead of a can, and you can toggle if it's visible. if it's not visible, then it would be covered by a can like this
Dragon Lord#6944: Wireless communications engineers would like to know your location
TheAffinity#3062: or color coded, or the output stub to have a distinct shape
Daimh#5870: I think pegs shouldnt be shorter but the outputs could be shorter
Grandiose Lights#2727: Perhaps making the pegs on logic components shorter in length would fix that?
Daimh#5870: Oh gotcha
Jimmy#8080: Yep, this is the reason super short wires are disallowed. You should be able to see all connections with your eyeballs.
Ecconia#4929: And has also improve the understandability for other players 🙂 <[newline]> Nobody ||sane|| likes invisible wires.
circuitgamer77#0377: Not being able to do close connections has made several of my circuits much bigger...  That's a tactic I use a lot :)
Daimh#5870: This is possible though <:Hmm:872602955881259009>
Daimh#5870: Here is another case that feels like it should be possible
circuitgamer77#0377: Agreed :)
Daimh#5870: I think it would be nice if close up connections like this were possible.
circuitgamer77#0377: That has been suggested a bunch :)  My suggestion is that if colored wires are implemented, the center of the wire on each face be the normal wire colors and the corners are solid colors that you can pick, not changing with state change.
nuratic#2027: Ability to change the colour of each section of wire would be nice, for both the on/off states, it would make it easier to follow wires in bigger projects
Sekoia#3968: (the (very minor) bug btw)
Sekoia#3968: can't find it tho?
Sekoia#3968: have two keybindings in the more options menu, remove the first one. The second one keeps the "or" text
Sekoia#3968: woop, just found a bug when looking for it lol
Jimmy#8080: The controls UI is a little awkward and unintuitive for these more advanced controls options, I intend to make it much better
Jimmy#8080: Yep - when you're editing a control, hit "more options" and the click "change holding mode" (button text might be slightly different but that's the gist)
Grandiose Lights#2727: I cannot find this setting. Is it in the Controls tab?
Sekoia#3968: where is that?
Jimmy#8080: You can get this behavior by changing the "Draw Wire" control from "hold down mode" to "tap to toggle mode"
Grandiose Lights#2727: Normally when dragging a wire, releasing the mouse will cancel the wire placement. Instead, left click once to start a wire, and left click again to connect the wire.  <[newline]> Cancel wire placement with a right click. <[newline]>  <[newline]> Should the player left click again (or hold down left button) on a space where the wire can't connect to, a normal wire peg to appear for the wire to connect to if the space is clear. <[newline]>  <[newline]> Dragging a normal wire peg onto another wire peg should merge all the wire connections onto one peg. <[newline]>  <[newline]> This is to help when connecting wires over long distances and to avoid accidentally releasing the mouse button when dragging out a wire. This is also to make sure a peg can be placed with a valid wire connection at the same time when compacting designs.
Dragon Lord#6944: Ah, gocha
Limón#7879: DjSapson though was asking for one
Limón#7879: Or any other message after
Limón#7879: I do not see mod in the message
Dragon Lord#6944: They were asking for a mod, not a feature.
Limón#7879: Probably won't be implemented
Limón#7879: https://logicworld.net/tracker/109
Dragon Lord#6944: if it's the second type, you could call it the black box mod :)
DjSapsan#4530: what about a chip mod? Mod for custom chips where you can create own circuits inside and in the game it will only 1 block with pegs. Or like in many other games it can be extra-dimensional space with usual LW build system but without render if outside
DanielGJ44#4557: Don't you have to worry about trademark infringement or something stupid like that
MoonCookie#3229: I think its just better to see a logo and maybe some detail in discord. Not the default ?
Ecconia#4929: <Joke about Direct Current> <[newline]> You mean Discord? What for? <[newline]> Am curious, since I would not need that.
MoonCookie#3229: I think a DC integration would be nice :)
HomelikeBrick42#1173: i was just showing you the other ideas people had
HomelikeBrick42#1173: it has been suggested alot
HomelikeBrick42#1173: its ok
Moldytzu#4226: didn't saw it. sorry
HomelikeBrick42#1173: https://discord.com/channels/401255675264761866/906825697190895646/908868123808129075
Moldytzu#4226: a way to transform a circuit board into a small integrated circuit in a DIP package
StartForKiller#0001: or Bluetooth chips
StartForKiller#0001: like the protecting metal around the wifi chips on laptops
StartForKiller#0001: this what i was saying
Jimmy#8080: I definitely want to improve the multi-select UI, but it's pretty complicated due to the 3D nature of LW builds. Improvements are coming but I don't have a timeline right now
Jimmy#8080: Coming later this year! <@661212813326286858> has been working hard on it. I want to get the soundtrack onto Bandcamp in extremely high quality, so you'll be able to buy it there :)
trucksarenoisy#4659: There are many suggestions but this is the best one amongst them all
trucksarenoisy#4659: Most important feature request
trucksarenoisy#4659: Ability to turn bobby into an impostor
64548#0351: I know someone out there will say but then the logic world would be like minecraft and it would kind of be almost impossible ne hahah but of course if the creator wants you can do it in a way that the terrain is not in the form of blocks you know but something like a normal mountain more realistic
64548#0351: <@!487413285403099136>  hi have you ever thought about creating an open world survival mode where people have to collect resources like: minerals - mobs food - trees - flowers. <[newline]>  <[newline]> outside that the person must create tools to: <[newline]> - mining attack hostile or pasific mobs to harvest food. <[newline]> - and a key that allows the person to change some components and connect them.? <[newline]>  <[newline]> the food would be for the character to avoid going hungry you know hahaha <[newline]> and the rest would be for the person to create the components only in survival mode. <[newline]>  <[newline]> it would be nice if you add the game to the front right in the next game update right?
DanielGJ44#4557: Hopefully it becomes a mod
circuitgamer77#0377: I agree that something to hide components would be great, I was just suggesting a potential way to combine your idea with the other person's idea.
101#1688: Honestly though, I think Jimmy has enough on his plate right now, best not to pester him with such things 😉
101#1688: There is plenty of space in the game, I don't think a compacting feature is really needed. I wasn't thinking a component really, but rather a way to designate a section of a board as a "can", and have it cover the components under it, perhaps with adjustable height. A bit like these:
circuitgamer77#0377: I like <@!144160633691176960>s idea of a component that can hide components inside it so they don't need to be rendered - I think that could even be combined into a microchip-like thing, so you build the circuit somewhere (maybe with a saved board and sockets?)  and that saved board could be converted into a chip of some kind.  That saves rendering, and could allow for slightly more compact circuits.  Maybe have the dimensions of the chip be determined by the component count and/or size so that you can't make a gigantic circuit tiny, but maybe just a bit more compact?  Making it based on a saved board means you still have to design the logic yourself, it's just easier to copy it after that.
jackson535#1361: the problem with microchips/compressing circuits is that many of us are already skilled at making circuits at component level, and so our needs are different than someone just beginning to learn digital circuitry
StartForKiller#0001: this resolve that
StartForKiller#0001: not really, if you are near a huge build then nope
101#1688: It’s also not as if these are mutually exclusive features. Giving users more ways to manage performance is never a bad thing.
101#1688: “Solved” is a strong word. I’d argue that this is a better solution than render distance.
gnog#2259: like if you have low fps because of many components, you just reduce render distance, no?
gnog#2259: Isn't that solved with render distance?
101#1688: Yup, I second this suggestion. Maybe component “cans” which can be placed onto boards to cover components so that they don’t have to be rendered underneath. Could be set up so that you can toggle transparency when looking at them. Input and output could be handled by allowing the edge of the can to intersect sockets (but not other components) If this (or something like it) were to be added (and the N^2 loading problem were to be fixed), the capacity of the game would become essentially limitless.
StartForKiller#0001: this can be done with some type of wall, that you add to the circuit and the things inside that box never renders
DanielGJ44#4557: HOWEVER I believe everyone did like the idea, it was just one of those "make a mod" things
DanielGJ44#4557: I do not know if the stance has changed, but this was a discussion that would come up like monthly before release
DanielGJ44#4557: All I'll be doing to link the conversation will be using the discord search tool so I'll leave that for you
DanielGJ44#4557: In essence, a game about building circuits seemed to have it's purpose defeated by making components that eliminate the need to build the base level logic components
HomelikeBrick42#1173: can you give me a link to the conversation maybe?
HomelikeBrick42#1173: why doesnt he want to implement it?
DanielGJ44#4557: Big brain modders where are you
DanielGJ44#4557: Yes that's been confirmed as not happening in the base game but a few people in chat when I was beta testing said they were going to work to implement that
Curze#4096: Sounded like Jimmy didnt wanna implement stuff like that, so we need a big brain modder to do it for us 🙂 <[newline]> Anyone up for the challenge?
HomelikeBrick42#1173: so you still have to try to make things compact and use the least components possible
HomelikeBrick42#1173: there should also be a size limit per number of components (so 1000 parts wont fit into a single block)
64548#0351: I agree
HomelikeBrick42#1173: if you could compress it into a single chip the rendering problem would not exist anymore
HomelikeBrick42#1173: the major thing that is slowing down the game is rendering
64548#0351: yes yes it makes the world lighter you know imagine a lot of processes made of such a small thing
HomelikeBrick42#1173: compressing builds would be so cool
HomelikeBrick42#1173: yes
64548#0351: hi why don't you add a system that allows a person to use a programmable micro chip that can control the outputs. but in this case the person can save how many outputs i/0 he wants to know.🤭
blane1257#8086: smh 3d print it from resin <[newline]>  <[newline]> *~~(that'll.. totally work, right?)~~*
Saltypretzel#0321: sadly i dont think the music exxists on vinyl ~~yet~~
Saltypretzel#0321: nah get the music on vinyl
Vinyl Boot Maven of Shade#1858: Something that would make creating encoders much easier. Pointing at a peg and hiding all wires attached to it.
RyanT#1426: suggestion: make it so you can select every board or display in a rectangle area without selecting each one manually so you can easily recolour a set of small boards, or change the colours of all displays in a screen at once
Pegacraffft#1193: I was wondering about the lamps. If you put it on more than one pin, itll extend downwards, but that makes it impossible to build a display with all 9 pins enabled. So i was wondering if it would be possible to put all the pegs in one block (like you could with the precision placement and pegs. Just so you can put the blocks next to each other. <[newline]>  <[newline]> Or is there a reason not do do that?
katkosmos#6502: Purchasable soundtrack? 🥺  <[newline]>  <[newline]> Like I *could* just take the MP3s from the game folder, but I wanna support you guys more, + maybe it could have FLAC versions or something.
Dragon Lord#6944: apparently some old systems that were little endian had big endian addressing for their graphics, so when they moved forward to other (more sane) systems, the colors got reversed to bgr. most modern software stores color as rgb, and all color crts recieve color as rgb, but there was a mixup in the middle of history that made some softwares use bgr for everything and it stuck. i am angey
Dragon Lord#6944: opencv uses bgr
PseudoGoose#2841: the ordering really doesn't matter, but C,M,Y is nice because they're the direct opposites of R,G,B respectively
PseudoGoose#2841: cursed CMYK
Lisa#4756: MYC. Magenta Yellow Cyan.
Verlio_H#0201: add YPbPr as well
Jimmy#8080: You can sort of already do this by tagging the world. Bottom right when you have a sandbox selected, a little + button in a circle.
Jimmy#8080: I'm going to add more tools for display configuration generation, which will allow for this kind of thing. Also probably some default RGB/RBY configs.
_Mpcs#0525: **Favourite worlds / saves** <[newline]> Being able to star a world, or mark it as favourite so it shows up at the top of the list no matter what
CrispyPin#1149: for now
pilonpl#4015: Minecraft redstone - ok <[newline]> But scrap mechanic is a completely different game
jackson535#1361: 
jackson535#1361: yes
DjSapsan#4530: It will be better than Scrap Mechanic. Huge plus to the game
jackson535#1361: tires to make smart vehicles or rideable with chairs
jackson535#1361: ~~boobytraps~~ `bobbytraps`
jackson535#1361: hall effect sensors
jackson535#1361: firework launchers
jackson535#1361: or laser emitters and receivers like in portal 2
jackson535#1361: perhaps a 3d printer or 3d screen
jackson535#1361: expansion of the I/O in general, to encourage new types of machines
jackson535#1361: mechanical and non-mechanical machines with a bunch of pins in general would be amazing
jackson535#1361: yes
jackson535#1361: yes
jackson535#1361: its already possible but you have to make the configuration by hand and save it
Vinyl Boot Maven of Shade#1858: There should be a color configuration for the display thats like rgb, so like the 9 inputs could have 3bpp rgb mapped.
PseudoGoose#2841: i dunno if I would make it automatically change color
PseudoGoose#2841: What about a display with an output that can be activated by clicking it like a button... kind of like ... a _touch display_ 😎
Lance#8995: Need a key or button that also lights up when pressed or has an LED Active input.  This will allow for things line Minesweeper where the top board has sizable buttons that when pressed will both activate a HIGH Output and light up the button.
Ecconia#4929: Video of OpenTUNG implementation: https://media.discordapp.net/attachments/401255675264761868/855509157666226196/Peek_2021-06-18_20-04.mp4
Ecconia#4929: https://logicworld.net/tracker/202 <[newline]> Modify MWP to make bus creation more easy. <[newline]> When pressing the mod key (control), while selecting the second group of pegs, it should finish MWP as before, but start a new MWP with the first group being the old second group. <[newline]> No more redundant group of peg selections.
DjSapsan#4530: in Unity physics in not a problem haha
Deleted User#0000: YEAH!
ieee 802.11ac#6337: well via Mods™️ we have linear motion via pistons so if we could get rotational motion this would theoretically be possible
Deleted User#0000: Virtual motor technology with mechanical elements, so that we can start with robot technology. <[newline]> Imagine we could build a Machine that builds itself? <[newline]> <Reproduction>
Biggycheese69420#4947: No problem
SpencerBeige#8582: thank you
Biggycheese69420#4947: 30 tps
SpencerBeige#8582: Does anyone know the default simulation rate?
Vinyl Boot Maven of Shade#1858: Teams and component and board ownership with privileges to help prevent against griefing.
megamaz#1020: Item Locking -  <[newline]> A way to lock certain items to prevent highlighting of that object
DanielGJ44#4557: Idk if maybe friending someone will eventually give permissions to see what world someone is on, that seems like a logical exception
DanielGJ44#4557: The website has a friend system I think, but Jimmy also said that he didn't want people to be able to see what server someone was in without them simultaneously knowing you know, functionally making you join the servers individually to check
Macrohard Onfire#0662: Better
megamaz#1020: Then add a friend system on the website :)
Macrohard Onfire#0662: Are there friends outside of steam's system? <[newline]> If not, that can't really be added since not everyone owns it on steam
megamaz#1020: Adding a "Join Friend's World" button in the multiplayer menu to make multiplayer more accessible to people who don't know how it works.
pilonpl#4015: -replayes (something like Replay Mod in Minecraft)
JPM-Baroque Spaceship#6542: a way to change wire color
CrispyPin#1149: backups are already done automatically but yeah there should be menus for loading them in game
pilonpl#4015: -command block
pilonpl#4015: -Backup button (backs up selected world)
CrispyPin#1149: wires already use ray collision
DjSapsan#4530: Would be very good: <[newline]> ~~1) Wires with ray collisions instead of boxes. Often 1 pixel doesn't let me connect gates~~ <[newline]> 2) Optimisation for moving boards.  <[newline]> 3) Factorio-like "blueprints":  <[newline]>  - thumbnails of saved boards. <[newline]>  - books within books with pictures and description. <[newline]>  - copy/paste keeps structures in memory. Cycling last n saved boards. <[newline]>  - add a way to copy the entire area with selection box. <[newline]>  - sharing builds via strings (to share it in chat/online - https://factorioprints.com/view/-Mnb44KiQQu82rYzR_BD) <[newline]> 4) Smaller buffers? <[newline]> 5) Put gates on their sides, not just bottom. <[newline]> 6) Real-time clocks. So builds can adjust their speed regardless of tick-rate. For example - real time clocks, screens, music.
Ecconia#4929: Lol why not pin "Write a mod for that." 😄 Its a good answer for most requests. <[newline]> ↓ Like point 6 down there...
Vinyl Boot Maven of Shade#1858: Combine display and button and make touch screens a thing.
Operu#6600: add a component that can get mouse position so people can create a full blown OS <[newline]> Then probably also a feature for that component that freezes your camera rotation so that you can move your cursor on a custom interface
CrispyPin#1149: it is planned, assuming it's not high on the priorities
CrispyPin#1149: https://ptb.discord.com/channels/401255675264761866/901199821212352573/902839861009072158
blane1257#8086: .
Moldytzu#4226: yeah but the game should have an official one
blane1257#8086: not a bad idea <[newline]>  <[newline]> some tutorials exist on yt tho dont they?
CrispyPin#1149: in the mean time we could make a community one
blane1257#8086: im pretty sure thats coming at some point
Moldytzu#4226: a tutorial world would be nice for new players
Vynix#3003: Second message. Could we also get less orange emoji's? I haven't played the game, so I can't give feedback or suggestions.
Jimmy#8080: 
Jimmy#8080: Welcome to our newest channel! I see a lot of conversation about ideas for Logic World happening in <#401255675264761868> and <#901199821212352573> , so I thought it'd be poggers to organize those into their own channel. Use this space for casual discussion & spitballing of features you might want to see added to the game.
