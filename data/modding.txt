Justin#2534: Of course these systems can also be bricked with just a few lines of code, which is why memory protection exists 😁
Justin#2534: Some people do think experience is lost with such features which is one reason things like Commander X16 and TempleOS exists
Verlio_H#0201: oh that was 4 days ago
Verlio_H#0201: literally 1984
DADp#7461: im loving it
DADp#7461: exactly this
Ecconia#4929: What did you want to cause? 🤔
DADp#7461: what did i cause
GHXX#9078: lw does
GHXX#9078: ngu idle does not load your mods
Ecconia#4929: Oh really? I think I done that too, with Logic World - ever heard of it? 😛
GHXX#9078: done that in the past with nguidle
GHXX#9078: in c# you can just inject an appdomain/runtime or something and use reflection or harmony (if the target game is made in c#)
Ecconia#4929: But its a pain to find the location - and thats also gonna be a problem with almost any program - especially the garbage collected ones.
Ecconia#4929: I used the memory API before too, but to read the player-position in Scrap-Mechanic - to then generate a map in an external tool.
Justin#2534: I'm sure Jimmy will get right on reverse engineering Unity
GHXX#9078: luckily that is made very easy woth c# as you can just grab the source essentially
GHXX#9078: the big workload is the reverse engineering part, which plays a crucial role in making something meaningful
GHXX#9078: you can also make rwx mem pages
Justin#2534: Like I said, using such low level tools to do such low level processes on such a high level game seems entirely pointless and would take a lot of effort to implement
GHXX#9078: so yeah you can totally make code in unity that modifies the bytes of memory of its own process
GHXX#9078: its a windows kernel feature
GHXX#9078: it's not unity specific
Justin#2534: Idk enough about Unity to say really. If Unity allows you to modify the memory it uses for processes that's confusing to me and seems super not useful. If players want to just poke random memory addresses in their program to crash it, knock yourself out, I'm sure they'll make great C developers
GHXX#9078: doesnt need admin perms either 😂
GHXX#9078: so yes, its modifying memory directly
GHXX#9078: it writes to the memory allocated for the process that is specified by the handle that you pass
Justin#2534: Idk why I make these semantic arguments lol
GHXX#9078: other one is readprocessmemory
Justin#2534: That writes to an abstracted block allocated by your Kernel
GHXX#9078: that's the call for writing essentially
GHXX#9078: https://docs.microsoft.com/en-us/windows/win32/api/memoryapi/nf-memoryapi-writeprocessmemory
Justin#2534: This kind of tinkering on modern systems is blocked by many security features
Justin#2534: On the C64 for example, you could modify hardware memory as there was no memory security
Justin#2534: I think we're thinking of the act of "modifying memory" as two different things. I'm talking about this https://en.wikipedia.org/wiki/PEEK_and_POKE
GHXX#9078: also, im not sure if the memory responsible for storing the code that essentially handles drawing your desktop background is userland code
GHXX#9078: its just for that game, not for any program
Justin#2534: So I could change the color of my desktop with this program?
GHXX#9078: the game does not support modding and is made in c++
GHXX#9078: its modifying memory directly
Justin#2534: That appears to be a game modding API. Which is just adding a new layer of abstraction, not modifying memory directly, unless I'm misunderstanding
GHXX#9078: in Windows you can just make a kernel32.dll call, and on Linux you need to write to a file i think
GHXX#9078: windows and Linux will need different implementations though
GHXX#9078: c# and a bit of assembly (x86-64)
GHXX#9078: https://5d.ghxx.dev done it in the past using c# :)
Justin#2534: As any blooming OS dev learns, "memory" is like an abstraction of an abstraction of an abstraction
GHXX#9078: you cannot write to physical memory with normal means, but you can write into a process' memory easily
Justin#2534: If you're talking about pointing directly to memory, I'm pretty sure Unity wouldn't allow for that functionality and I'm certain any modern operating system wouldn't
GHXX#9078: but yeah it would definitely be possible
DADp#7461: exactly
GHXX#9078: also seems quite unstable
DADp#7461: 🙂
Reese4221#8317: that sounds like a remote code execution exploit waiting to happen
DADp#7461: kinda like cheat engine in lw
DADp#7461: the ganes memory
GHXX#9078: can you elaborate on that?
DADp#7461: real modding idea: make a block to change memory in the game
Ecconia#4929: Needs to be either a panoramic image or a specific cube map image, else the edges will look awesome. <[newline]> (But yeah, that is what I did, but it's difficult to find a good one)
GHXX#9078: wouldnt it be as easy as grabbing some kind of of 4k image off the web then?
Chime#3134: lots of variant skyboxes from e.g. KSP mods and so forth.  Would want to check licensing on redistribution for other purposes but likely reasonably easy.
Ecconia#4929: Yes
GHXX#9078: is the skybox just an image ?
Ecconia#4929: I am not sure where to go with this mod. Currently one changes it with a command after World join. Cause there is no official callback. Also, if you have multiple skyboxes how to choose them? And even more important where do I find a good 1024^2 night skybox.
Ecconia#4929: To my knowledge no, I gave up trying and just added normal outputs which one has to connect to the inputs manually. <[newline]> One can't even use invisible links (only between inputs) or make the outputs invisible.
zandy#3110: I look forward to a full apple II implementation
GHXX#9078: <a:rooAwwShakeZoom:794739142105497630> keep me updated <a:rooAwwShakeZoom:794739142105497630>
HuntaBadday#3556: Is it possible to use an input as an output?
HuntaBadday#3556: I have decided to make a mod, it will have a 6502 block, have I gone insane?
Ecconia#4929: So I made a skybox mod, which loads skyboxes. <[newline]> But I need one with higher resolution... <[newline]> 1024² per side is good. <[newline]> No clue how to extract the universe one, that is also embedded into the game. <[newline]> But finally no more bugs at night. Now it would be amazing to change the shaders of the game too - to have everything a bit darker. <[newline]> Maybe somewhere there is a sun property 🤔
Flampt#3906: You have every single mod bru
Ecconia#4929: Idk what will happen, but I hope LW just explodes 😄 <[newline]> -> It starts and compiles them all. <[newline]> -> I can join a modded server! <[newline]> -> And I reliably crash when someone uses UNDO 😄
Chime#3134: Interesting.  Yeah, I'm toying with the idea of having the rotating drum of my delay line thing actually show little red/black marks going around the drum in time with its loop length.  Probably couldn't scale workably though.
Ecconia#4929: And no, I am not sending the whole custom data every tick, just 2 bytes - address and new value. <[newline]> (API Hackery...) <[newline]>  <[newline]> I am so curious, how the performance of my display would rise, if I also optimize the network traffic like I did here. <[newline]> Like not sending 1024 pixel (128 bytes) but just 2 bytes.
Ecconia#4929: Working with memory component is a problem, because you do not know whats inside. <[newline]> Well - fixed that.
GHXX#9078: indeed it is
GHXX#9078: <:frog_happy:733352650091003955> <:frog_happy:733352650091003955>
Ecconia#4929: Modding is life!
Moojuiceman#5661: I haven't played LW since the last things I did to help with modding. I'm neck deep in modding a different game now anyway
cheese3660#8641: I am on and off with modding, school and work have been taking priority
Moojuiceman#5661: I don't. RIP
cheese3660#8641: I still exist myself
Limón#7879: cheese and moojuice are the main ones I remember
Limón#7879: <@!244503493996445697> stopped existing I am pretty sure
Limón#7879: I saw <@!299685147220115457> around here a while ago
Limón#7879: most of dropped out of existence I feel like
Ecconia#4929: Oh didn't know this was already a topic in the past - was apparently not fixed "in the next update". Will though... <[newline]> But good to know that it is not intentional. <[newline]> (Just scrolled all the way to the top in this channel - there where a lot of messages in the first days - crazy - the pioneers of modding).
GHXX#9078: <:rooW1:580615576120983552>
Ecconia#4929: No modding update, but more (advanced) cheeky little hackers :D
Limón#7879: did they have a modding update or have people gotten more advanced
zandy#3110: haha surely in an afternoon's work
Ecconia#4929: EZ, just replace the whole simulation code, Jimmy can pull that in an afternoon no sweat 🤪 <[newline]> (Luckily that stuff is post release)
Chime#3134: inductors, capacitors, resistors, .... no, not in logic world
Chime#3134: I mean I love the idea of an EEWorld where you're sending floating point voltage levels and the whole thing runs a realtime MNA sim but that's really a completely different sort of game so no 😛
Chime#3134: They look like it!  But no, was going for an enclosure for spinning magnetic disc/ring/thing
Ecconia#4929: Ohh, thats a thing - probs for bobby (I dare you to dab this bobby)
Chime#3134: that's just succ changes with `mesh: Sphere` for one of the blocks
zandy#3110: capacitors?
Ecconia#4929: HOLY 😱
Chime#3134: 
Chime#3134: well that's better than the shenanigans I was up to
Chime#3134: heeeh
Ecconia#4929: Yes! <[newline]> <https://github.com/Ecconia/Ecconia-LogicWorld-Mods/blob/master/EcconiaCPUServerComponents/EcconiaCPUServerComponents/src/client/KeycapLab.cs#L29> <[newline]> Its easy, make mesh, add vertices and triangle indices. <[newline]> (This class is my "bad" code, which caches and constructs up to 100 meshes - cause idk how to make non-scaling corners - could half that though with not much effort...)
Chime#3134: has anyone tried adding meshes?
Ecconia#4929: You can be behind a key component as character. <[newline]> And so can a key be behind the character. <[newline]> (My code works by now, just did the space transformation). <[newline]> My development (and rant) place: <#940522396501295114>
Chime#3134: is there a third person camera?  Because for first person camera you can't be behind anything, right?
Ecconia#4929: I basically want to know if the player is in front or behind a component... <[newline]> And if the component is in front or behind the player... <[newline]> Such many posiibilitieieieies. And my brain is like: DON'T THINK ABOUT IT! <[newline]>  <[newline]> Normally I would just convert spaces... <[newline]> But LogicWorld does a very very very good job at not handing out the camera quaternion.
Chime#3134: quaternions and matrixes woo~
Ecconia#4929: Worked with gdb before at least... thanks for the input - for now I postponed this issue and am now fighting 3D math.
Chime#3134: note that getting managed stack traces out of a mono-level crash is going to require pmip invocation, but that's no different than windows... good news though, gdb is a joy to work with while windbg is a special sort of hell
Chime#3134: alternatively, launch entirely from within gdb
Chime#3134: note that ulimit affects future process children in that process tree, not the system.  So ideally run that in a shell and then from that same shell invoke logicworld
Chime#3134: haven't wrestled unity crash handler on linux since ksp 0.25 days 😄
Chime#3134: and then it might be a system core dumps directory or the current directory, depending
Chime#3134: potentially distribution-specific, and potentially not written to disk unless you've set `ulimit -c unlimited`
Ecconia#4929: Linux dumps. But do you know where dumps end up, at which location and which name do they have? (For LW specifically).
WhyNot?#2534: thx, a reset fixed it
Chime#3134: Uhm, maybe I can help with dumps.  Are we talking linux coredump from mono or a windows minidump or a mac's MACH dump stuff?
Ecconia#4929: Yes, you probably have a world, where you have that component with a different amount of inputs and outputs. <[newline]> Just reset the world - or undo the peg amount to what it was before. -> You can add more detailed error messages in your Prefab code. <[newline]> Or are you using the SUCC file, then just undo or reset help.
WhyNot?#2534: im getting an error for the mod im working on i have no idea how to fix it, any ideas?
Ecconia#4929: Does anyone here know how to debug reproduceable core dumps and would be willed to share his/her wisdom? <[newline]> I was able to mod the assembly instructions of the compiler to prevent the `Path is null` bug. <[newline]> But only on the server, the same code core-dumps on the client. No clue why.
Chime#3134: or entertainingly wrong, at least.
Chime#3134: Maybe a vector-display like an old tektronix terminal might be the right approach, hm
Chime#3134: Blessed are the pessimists, for we have made backups.
elblorenz32#4966: well... i'd personally be fine if they just get deleted properly (since I choose to delete them by joining even though it warned me)
Chime#3134: I saw some bits suggesting there is-or-will-be a migration system to handle some cases like that, maybe.
Chime#3134: can happen if you change the names of things in your mod also
Chime#3134: it warns you that the parts will disappear, and offers you options of cancelling or proceeding (which causes it to run a backup)
elblorenz32#4966: ok, but that'd be nice if it di as mc forge, which warns you of missing thing and then just removes them if you continue <[newline]>  <[newline]> but at least I don't have to fear that my world breaks if I change something there
Ecconia#4929: No, it will tell you that it can't load the world. <[newline]> You can force load it, but not sure if that removes things - not to my knowledge.
elblorenz32#4966: when I delete a mod I used in a world file and now I load it later, will it remove the invalid things/gates or what else would happen?
Chime#3134: Low key a reasonable name
DADp#7461: ahyes logicworld.unitybullshit
Ecconia#4929: Ahhh I got you bad boy! The MonoBehavior is never instanciated. Like the `Initialize` method is never called. That is indeed bad. <[newline]> Ohh that thing is in `LogicWorld.UnityBullshit`, so `LogicWorld` is bullshitting me here. Or rather, now I have to bullshit LogicWorld. <[newline]> And wow, I was able to call `Initialize`. <[newline]>  <[newline]> However next problem: <[newline]> The `ConfigurableMenu` contains `private RectTransform Menu;` and I did add a `RectTransformer` component to the `GameObject`, but it does not end up in the field 😦 <[newline]>  <[newline]> So if anyone knows how to inject the components into the `SerializedField`s, please help.
Ecconia#4929: Like I do not understand this exception. I added some printing, and it works fine and as expected for normal windows. <[newline]> But why does mine fail like that, and with the Logging it moves the problem up in the stack - how??? <[newline]> Gotta put more logging.... UNTIL I FIND THE CAUSE
Chime#3134: seems cumbersome but it may be worth trying
Chime#3134: I did also have the idea of using small button/collider things on it to have people press on them in-world to change the input count...
Chime#3134: it looks like just subclassing like that should register it, but the class never gets .Initialized() by anything, and when I try in the client modloader it goes down in flames without showing the exception or error
Ecconia#4929: Oh how did I skip this. Indeed, this helps. <[newline]> Didn't know you can next MonoBehaviours.  <[newline]> Well I am awake anyway, might as well get out of bed and try again. But only for 20min. <[newline]> (Oh it only does configuration, so its not quite helpful :sad:)
Chime#3134: the oracles are like anti-causal buffers; they give you a signal that may never have been sent.
Chime#3134: and that works, so I've got that going for me, which is nice.
Chime#3134: Well, I'm still not sure how to get adjustable menus on moddable parts yet, but I have repurposed that bytememory thing to act like the new style latch sized at 8.
Chime#3134: ComponentMenusManager is... internal.  it looks like the .Add on that is what is wanted, but that should be called by double base's .Initialize, if it were being invoked.  Which it isn't.  Hm.
Chime#3134: `this.DoTheFuckery((ByteReader) reader, writer);` hahah
Chime#3134: `LogicWorld.UI.EditComponentMenuBase<TEditingInfo>.Initialize()` looks highly relevant: <[newline]> ```cs <[newline]>     public virtual void Initialize() <[newline]>     { <[newline]>       ComponentMenusManager.AddComponentMenu((IEditComponentMenu) this); <[newline]>       this.ConfigMenu = this.GetComponent<ConfigurableMenu>(); <[newline]>       this.ConfigMenuUtility = this.GetComponent<ConfigurableMenuUtility>(); <[newline]>       if ((UnityEngine.Object) this.ConfigMenu == (UnityEngine.Object) null || (UnityEngine.Object) this.ConfigMenuUtility == (UnityEngine.Object) null) <[newline]>         throw new Exception("This menu is set up incorrectly"); <[newline]>     } <[newline]> ```
Chime#3134: ``` <[newline]>       if (SceneLoader._Initialized) <[newline]>         throw new Exception("bad programmer! bad!!"); <[newline]> ```
Moojuiceman#5661: If you care enough, you could write a serialiser to fully clone the object and output it to something you can then inspect or template-ify for use in other components. I tried, but had serialisation issues with some of the types involved
Moojuiceman#5661: It's not as easy as just editing the menu to be yours, because of the missing data
Moojuiceman#5661: Gameobject.Instantiate copies an existing object including the components. But it's not a deep clone so lots of them have missing data
Chime#3134: Wow!
Ecconia#4929: How do you even copy that... you could probably copy it, remove the ANDMenu and add your own menu...
Moojuiceman#5661: We tried copying the existing And menu game object, but there were a lot of things tightly coupled to the And components and couldn't get it working with the custom ones
Ecconia#4929: There also is the option to hijack the AND gate menu and use that. <[newline]> But, that will make the maximum AND peg size, be linked with your component. <[newline]> Which is very likely not desired. - But I am pretty sure its doable.
Ecconia#4929: <@!195021798868254720> So, there are several issues I encountered while trying to make peg amount resizable. <[newline]> If you want to have a custom edit window, you will need to instantiate a unity `GameObject` with dozens of LW components. <[newline]> However as you might be able to see, the game kindly says that I should have sexual intercourse with myself ||- well fine by me||. <[newline]> And it has to be Unity, which creates and manages the window, so it is mandatory to be able to create it. <[newline]> Doubt anyone here is in the mood to write a window-system from scratch, just so that it works... <[newline]> Btw code fails in `ConfigurableMenu` for the first time, because `ScaledBackgroundSize` is null (which can't be).
Ecconia#4929: <@!154964593397989376> I am starting to take this personal... <[newline]> This "Hey" is totally directed at me... ||:P||
Ecconia#4929: My problem is that I am trying to create a window and that fails... <[newline]> Its quite interesting to create your own window. But am suffering from NRE
Ecconia#4929: Not that important, can leave it away
GHXX#9078: just snag it with reflection 🙂 <@!151293812675706880>
Ecconia#4929: If I really dislike something, then it is every single time LogicWorld uses `internal`. GOSH really ruins my mood.
Ecconia#4929: I kind of feel like Jimmy caught me trying to get component editing working...
Ecconia#4929: Im on my way home and tempted to give it a try. <[newline]> (Especially injecting a custom window sounds very nice and useful)
Moojuiceman#5661: I've been neck deep in harmony but for another game, so I can maybe help on that angle at least
Moojuiceman#5661: Maybe someone else here who has can take a look. Everything I know about LW modding is probably outdated at this point
cheese3660#8641: No, I haven't
Moojuiceman#5661: Have you done any work with harmony? I think it opens some options, but obviously goes against the in game mod framework
cheese3660#8641: Ive not been able to get it working either
Moojuiceman#5661: <@195021798868254720> the edit and gate menu (and by extension pin count) is the one thing we haven't been able to get working. Cheese and I tried back when C# modding was first figured out. I don't think anyone has got it working since then. And I haven't touched the game in ages, so Cheese is probably your only hope for new developments
Chime#3134: https://github.com/lashtear/CableSnake has the current mess-in-progress
Chime#3134: EditAndGateMenu and friends are there, but my new one isn't.  Hunting down where that list gets generated because I'm just not seeing a registration thing for it.
Chime#3134: in trace logs the Scene setup stuff spawns in all the 'menus' and things
Chime#3134: I should be asleep.  but
Chime#3134: hmmmm
Chime#3134: ``` <[newline]>     public class EditVectorLatchMenu : EditComponentMenu <[newline]> ``` <[newline]> As EditAndGateMenu is...
Ecconia#4929: I mean this one here `GetTextIDsOfComponentTypesThatCanBeEdited`, which base class is this in? <[newline]> Cause I never saw it before...
Chime#3134: oh, the GetTextIDs...?
Chime#3134: and then `public override string ComponentTextID => "CS.VectorLatch";` in the VariantInfo subclass
Ecconia#4929: Huh, where is that method... (Like in which base class)
Chime#3134: heh, it colorized for C#... but then didn't keep it
Chime#3134: ```c# <[newline]>         protected override IEnumerable<string> GetTextIDsOfComponentTypesThatCanBeEdited() <[newline]>         { <[newline]>             yield return "CS.VectorLatch"; <[newline]>         } <[newline]> ```
Ecconia#4929: Since your prefab is in charge of defining the looks and size, you only need to change the peg amount afaik. <[newline]> And the "only input count" menu, is hardcoded in some list (only the AND gate there), which you probably have to hijack. Never tried to do that, so the details or how much truth is in what I said. <[newline]> Hmm is the `GetTextIDsOfComponentTypesThatCanBeEdited` that list? How do you implement that?
Chime#3134: yes, will post the repo, but I'd hoped to get it working first 😄
Chime#3134: the vector latch-- just like the dlatch, but hit X and you can have it stack N additional bits off to the left, all driven by the same angled clockpin
Chime#3134: the menu code is mostly even part agnostic, though I needed to send a different peg adjustment thing in my case
Chime#3134: Yes; just like the andgate is configurable (to set its input count)
Ecconia#4929: You want to inject a new self-written menu type?
Chime#3134: I have dynamic prefab (now there's a term, heh) but I don't seem to be able to get X to open my new menu.  Do we know how is `EditAndGateMenu` registered, that lets it pop up when you configure an and gate?  I implement `GetTextIDsOfComponentTypesThatCanBeEdited` like it did, hmmmm.
Chime#3134: I was trying to cast `as float` ...which is not C#.  >_>
Chime#3134: the "trace" bit helped immensely, thank you for that
Chime#3134: \o/
katkosmos#6502: now i can start writing the code that actually does stuff <:blaze:716897128621932574>
katkosmos#6502: aha took me a bit, but i got the game to actually load a client mod now lol
Ecconia#4929: "Good", depends. <[newline]> If you want to know why your compilation fails, put `loglevel "trace"` into the file in the `licc` or the `licc-server` folder. <[newline]> If you want to see stacktraces in the log files, get my `RandomDebugCollection` mod. <[newline]> If you want to see errors and output which is not captured by the LW-Logging system (Unity and some other errors), use `-logfile` argument of Unity on the `Logic_World` client.
katkosmos#6502: mk I've got the dll open and have been poking around a bit
Chime#3134: side question: is there a good way to get more logs out of lw?
Chime#3134: I like to open everything up and look around in starry-eyed wonder at all the strange code, but there may be spoilers so don't do that if you care about that
Chime#3134: e.g. Server/LogicAPI.Server.dll
Chime#3134: the server one is under server though and what you need for most stuff
Chime#3134: Logic_World_Data/Managed/LogicWorld.ClientCode.dll
katkosmos#6502: where's the dll at relative to the root folder?
Ecconia#4929: I did not have much luck with this one, but maybe it works for you 🙂
Chime#3134: goodluck and godspeed &c.
katkosmos#6502: I'm gonna be using AvaloniaILSpy (https://github.com/icsharpcode/AvaloniaILSpy)
Ecconia#4929: On Linux I have good success with DNSpy using Wine. <[newline]> And also good is the built-in decompiler in the Rider IDE.
Chime#3134: yeah, I should probably run the linux version but I still do most games from windows, so...
katkosmos#6502: downloading ILspy.. but a port because linux lol
Chime#3134: but like crack open LogicWorld.ClientCode.dll and look at StandingDisplayVariantInfo
Chime#3134: AND was less useful as a model because of how it got compiled.  There may be good docs for these, but I was just looking at the dlls with dotPeek and it really didn't do well with that one; warnings about compiler-generated types and so forth, likely from a closure in the actual definition.
Chime#3134: but: yes.  Most of the magic of dynamic prefab and placement is done with a VariantInfo thing, and several examples of those exist for variable parts like displays, the andgate, etc.
Chime#3134: I'll post what I have so far but I got stuck with some silly error that didn't compile, leaving LW in a black screen, so I realized I needed to reopen it in vs rather than vscode and this filled me with both despair and ennui so I stopped there for the night... 😉
Chime#3134: it doesn't work yet but we can look over it
Chime#3134: <@!114181867078549508> I've got some work toward setting up a dynamic/dynamic one (VectorLatch) that works like my long purple byte thing but with configurable quantity like an and gate
Chime#3134: eeee
katkosmos#6502: I am too <:blaze:716897128621932574> Might take me a while since I've gotta get situated with the APIs.
Ecconia#4929: Sweet, looking forward to your results
katkosmos#6502: ah yeah I'm wanting to play audio out of a dynamically generated buffer
Ecconia#4929: If you just want to load a sound from the mod-files and play it on demand, <[newline]>  the LogicWorld API has wrapping for all that (I am using that in one of my mods). <[newline]> That uses `AudioClip` internally, but I am sure you can use it directly 🙂 (If required).
katkosmos#6502: Awesome, wanted to make sure I'd have access to things like `AudioClip` on the client
Ecconia#4929: Yes, they do. <[newline]> On the server there is afaik a stripped down version, since it is not executing Unity itself. <[newline]> But you need it for Quaternions and Vector3 - mostly.
katkosmos#6502: Alrighty, cool, thanks. And I suppose one more question: Do (C#) mods have access to the unity APIs, e.g. through `using UnityEngine;`?
Ecconia#4929: Since there are no tutorials anywhere, one has to learn by doing. (There are some - pinned in this channel - but nothing official). <[newline]> However one needs references, nothing less fun than digging in the dark. Hence I recommend you to get a decompiler. Something that shows you the decompiled source-code of Logic-World. <[newline]>  <[newline]> Besides that, have a look at the `MHG` folder and at all the mods in <#910673109164638239>, there are many mods with different functionalities, you can pretty much see almost all relevant aspects of the API there. <[newline]> Especially for prefabs, have a look at the mods. <[newline]>  <[newline]> You can also always ask questions here if its something more specific.
katkosmos#6502: so I just decided to finally get around to learning modding, and was wondering if anyone had resources on: dynamic prefabs, generating placing rules for said dynamic prefabs, and creating component option menus (like when you press X on a component)
Chime#3134: likewise inking anyone that gets too close is right out
Chime#3134: So it probably is quite possible to make parts that wriggle and crawl around the board but I probably should not.
Flampt#3906: yup
Chime#3134: 
Chime#3134: hahaha, just learning how it works with a byte ram before I make something interesting.  But pin positioning stuff has some interesting potential
Chime#3134: 
Ecconia#4929: Pro tip: Do not send chat messages to the client in an endless loop. <[newline]> (Cause that is what I just did...)
Ecconia#4929: Nice, then I gonna tell Jimmy to get these 4 characters included in 0.91 😛 (#Best fix) <[newline]> (As soon as he finished optimizations and asks for ticket status)
cheese3660#8641: It has been bothering me, yee
Vinyl Boot Maven of Shade#1858: Also looking forward to that change
Ecconia#4929: <@!299685147220115457> <@!377717131556552708> <@!151293812675706880>  <[newline]> Hi, only our mods seem to use the `shared` folder. ||Not even `MHG` uses that folder, thus I guess it is an oversight.|| <[newline]> I would like if the `shared` folder gets moved into the `src` folder, because it also contains source code. <[newline]> That keeps our plugins more organized. <[newline]>  <[newline]> Whenever these change happens, our mods however will break. And the fix is simply to move the `shared` folder into `src`. <[newline]> If there is no special reason, the folder is not there to begin with, I would like for this change to happen as soon as possible (with update 0.91, given Jimmy is fine with that - it is not exactly a bugged situation, but it is a 4-letter change in the games sourcecode). <[newline]>  <[newline]> What are your thoughts about this? Does it bother you, or do you actually think its good, that it is not in the folder. <[newline]> Do you just want this change to happen soon or with the big modding update?
Ecconia#4929: #More things that annoying me about modding... <[newline]> Why is the `shared/` folder not at `src/shared/` ?? WHAY? <[newline]> I cannot think of any reason. Except to make our code-bases look more ugly. <[newline]> 💢 Ticket time! Ticket: <https://logicworld.net/tracker/341>
elblorenz32#4966: ah, ok cause i was wondering, why my construction would write *stuff* to it that shouldn't be there
cheese3660#8641: Chip select should have just been renamed to read on my end
cheese3660#8641: Yes
elblorenz32#4966: <@!299685147220115457>  When I write data to the ram chip, I can write without having the chip select/read line enabled... is this to be expected?
Moojuiceman#5661: Landlord's Super, construction game. Using bepinex which uses HarmonyX underneath. Needed to add an additional condition to an if statement, so had to use transpiler instead of simple pre/postfix
Ecconia#4929: May I ask what you are modding, and how, and why? (Am curious)
Moojuiceman#5661: I figured it out. It was an "assignment inside an iterator that ran again later" issue. Broke the iterator apart a bit and made the assignment its own statement
Moojuiceman#5661: Anyone here with experience using harmony transpilers with jump instructions/labels? (Ping me or use reply)
Ecconia#4929: Loooong wire! Wait what? I did not increase max wire length!? <[newline]> Oh `DisableCollision` was still on - I did not know this was a feature of my mod 😅
Ecconia#4929: Finally, `/list` command.
Ecconia#4929: Finally, scientists have developed: *Chat commands* <[newline]> ||Nobody reacting to this: *Ahh well lets remove it from GitHub - there seems to be no demand*||
Ecconia#4929: By tradition, you want anything to do in LogicWorld - you hack it. <[newline]> My `CustomChatManager` is server sided only. LW does not know what a server-only mod is "meh". <[newline]> So I replaced the old client-verifier (just like above - a bit different). And am running this code now. <[newline]> If you want to write a server-only mod. You can use my `ServerSidedOnlyModSupport` mod, and implement the interface `IServerSideOnlyMod` in your mod. That's it.
SilentSoulsSr#1716: Whoohooo, made my first, non fucitonal mod !!
Ecconia#4929: Any why modify the chat manager? Oh you probably recall this nasty `SayRaw` command, which allows you to impersonate everyone? <[newline]> No more! (At least not on my servers).
Ecconia#4929: No clue about that, but you will get compile errors if it is too new. <[newline]> There are a set of things which are not supported.
SilentSoulsSr#1716: What version of C# is recommended ?
SilentSoulsSr#1716: I do have access the enterprice version of visual studio, referencing DLL's are decompiled on request, when not obfuscated 🙂
Ecconia#4929: It is a thread, not a channel. You can see it by viewing the threads of this channel.
SilentSoulsSr#1716: Only when i click the link i even see that subchannel am i doing something wrong
Ecconia#4929: However it is a huge advantage to have access to the decompiled source code of LogicWorld. <[newline]> For that I can recommend `DotPeek` or `DNSpy` (there are more decompilers).
Ecconia#4929: The easiest way is to download mods from <#910673109164638239> and just understand what they do. <[newline]> Just play with stuff, until it makes sense.
SilentSoulsSr#1716: Maybe wiki
SilentSoulsSr#1716: Do i compile a DLL ?, is there info on how to start i can read up on
SilentSoulsSr#1716: 1st time modder, experienced C# dev, how can i start modding.
Ecconia#4929: Ever thought about having a custom chat handler, which processes messages before forwarding them to players? <[newline]> EASY just kick out the old chat handler:
Ecconia#4929: keys poll for key down every frame <[newline]> (Not all keys but visible ones)
MS#5409: What did you use to get the keystrokes?
Ecconia#4929: Good question not sure if it is polling on demand and processing events <[newline]> or if it is keeping an array of all keys updated and just polling from that. (Ignoring text input)
MS#5409: Tho i haven't looked into how the buttons are accessed in LW
MS#5409: Yeah... Iirc it will see it as a push button and not a toggle (had that pain in another unity game modding)
Ecconia#4929: Basically this requires Unity to be able to get and change the Operating Systems Caps and Num Lock states. <[newline]> Idk if or how they have support for that. <[newline]> And I would really like, if LogicWorld had support for not flipping the lock state of either. <[newline]> (Or the CSharp libraries)
PseudoGoose#2841: I do like it when typing SCREAMING_SNAKE_CASE, I could also do it with shift but caps lock is more ergonomic
Flampt#3906: I got used to it
Flampt#3906: I am
Ecconia#4929: I told my Operating System to ignore my Caps-Lock key. And put the LW console on it. <[newline]> Because the default key does not work for me - and I need it for other stuff anyway. <[newline]> Am not much of a Caps Lock user anyway. Are you?
Flampt#3906: now you just need to make a separate mod that makes the caps lock work
Flampt#3906: very cool
Ecconia#4929: Last video of these keys for some time. I just fixed one bug. And it feels just as nice as the LW keys to use these. <[newline]> And I think the sound they make is funny. (Sadly I cannot record audio with my recording tool). <[newline]> I am very happy so far. I can even remove confusing labels which I do not need.
Flampt#3906: loll
Ecconia#4929: Who needs alphabet anyway 😄 <[newline]> (My IDE would totally hate you for that and just clean it up by itself)
Flampt#3906: gotta align the imports by length xD
Flampt#3906: finally done
Jimmy#8080: Love it
Ecconia#4929: Oh btw, can't forget this one 🙂 LOOOOOOONG KEY
Ecconia#4929: The command `EditKeyLabel` allows to set any string as label. `\n` becomes newline.
Ecconia#4929: Today was tough. I got to here. <[newline]> These boys cannot be clicked yet, nor have an output. <[newline]> Anyway these things should not take that long. <[newline]> The core functionality is there.
Ecconia#4929: First TextMeshPro experience 😅
Flampt#3906: knife bru
Ecconia#4929: I have the decompiled source code. I can see the original LW components. (Obviously). <[newline]> Lets just wait for someone who knows that, instead of playing the guessing game.
Flampt#3906: like what could be used
Flampt#3906: what do you have ?
Flampt#3906: I have no idea
Ecconia#4929: How? <[newline]> And why does a Label not have to specifically call that?
Flampt#3906: <:bobby_dab:692790273490550855>
Flampt#3906: you update it
Ecconia#4929: How do I update the outline while resizing?
Flampt#3906: not sure how to change the state of an InputPeg
Flampt#3906: this did not work
Broyojo#2667: very cursed
Flampt#3906: da heck
Ecconia#4929: Finally, shading works properly. And we got the round going on 😄 <[newline]> I hope you are **T R I G G E R E D**!
DADp#7461: mod it 😈
Flampt#3906: Haha
Ecconia#4929: Achievement! I got it first <[newline]> (And I have no clue how)
Ecconia#4929: Uff wrong channel... Details are ofc in my dev thread: <#940522396501295114>
Ecconia#4929: OH NO, WHAT HAS HE DONE. <[newline]> BANISH THIS SINNER - **ROUND THINGS IN LW**:
Flampt#3906: I can remove the phasic links in the method that runs when its deleted
Ecconia#4929: In general you can just remove the phasic links if you delete the bundler and then do nothing in the splitter, if they are already gone.
Ecconia#4929: Huh does the signal not go off, if you remove the source?
Flampt#3906: Not sure, I'll check but it might be private
IsCoffeeTho#0001: immediately after removing the phasic link might you be able to just set each pegs state to 0?  <[newline]> *it's been a while since i worked on a C# mod*
Flampt#3906: any idea how to reset the input pegs?
Flampt#3906: uh I ran into an issue that I'm not sure how to fix. <[newline]> so I have two components: one which has 4 inputs and 1 output (bundler) and the other one (splitter) has 1 input that takes the bundler's output and it has 4 other inputs that are connected to the bundlers inputs with a OneWayPhasicLink. <[newline]> I made it so that when the splitter isn't getting an active input anymore it removes all phasic links from the bundler's inputs. <[newline]> now it works fine normally, **but the issue is when you delete the bundler before deactivating the signal the splitter input pegs keep the last state and since it's not an output peg I can't just change it's On property**
Flampt#3906: I thought so
Ecconia#4929: Ahh, you need to cast it to `(InputPeg)`
Flampt#3906: `'IInputPeg' does not contain a definition for 'RemoveAllPhasicLinks' and no accessible extension method 'RemoveAllPhasicLinks' accepting a first argument of type 'IInputPeg' could be found`
Flampt#3906: no
Ecconia#4929: ? <[newline]> -> It is in the `Server.dll`
IsCoffeeTho#0001: especially that logic script changed *and is so beautiful*
IsCoffeeTho#0001: we should get that documentation written aye
Flampt#3906: I have IInputPeg
Flampt#3906: I don't have InputPeg tho
Flampt#3906: yup
Flampt#3906: RemoveAllPhasicLinks
Ecconia#4929: But the method might have a different name. `ClearAllPhasicLinks` does not exist.
Ecconia#4929: Look in `LogicWorld.Server.Circuitry.InputPeg`
Flampt#3906: https://github.com/LonnonDev/LW-Modding/blob/main/CS-Modding/Reference/CS-InputPeg.md
Ecconia#4929: This, where is this?
Flampt#3906: here
Ecconia#4929: And where is it missing?
Flampt#3906: the methods
Flampt#3906: thats where I found that
Flampt#3906: LogicAPI.Server.dll
Ecconia#4929: Personally I recommend you to look at the decompiled source code and not at some third party documentation. Cause then its 100% there. <[newline]> Where are you even looking?
Flampt#3906: any idea why this isn't here?
Flampt#3906: alright
Ecconia#4929: So my assumption is: <[newline]> A secret wire, is like a real wire, which directly connects two pegs, but it does not have a 3D representation or object. <[newline]> A phasic link also connects two pegs, but using the link-layer for that (aka all the conditional instant forwarding).
Flampt#3906: hm
Ecconia#4929: Prolly in through-pegs, where you have a virtual (invisible) wire between both pegs.
Flampt#3906: it's just that it's the only one that has the remove all method
Flampt#3906: idk
Flampt#3906: 
Ecconia#4929: Where are secret links used?
Flampt#3906: I can't find this
Flampt#3906: what is the difference between a secret link and a phasic link
Flampt#3906: <:bobby_ok:692790276623958087>
Flampt#3906: so happy I found this method
Flampt#3906: I defined a class in WireBundle.Server and a dictionary in it so that I can use it anywhere
Flampt#3906: I actually don't have to use serialized data for my mod I just used the same method as the wireless mod
Ecconia#4929: Mostly this is caused if it cannot find/resolve the two provided custom classes. <[newline]> (As ofc in your case too)
MrFrump#6949: ah, wrong namespace does.
MrFrump#6949: what causes " System.Exception: Error getting data of type LogicWorld.SharedCode.Components.ComponentInfo from node:  " ?
Flampt#3906: what am I missing?
Flampt#3906: I have a `SerializeCustomData` method in a LogicComponent and in the other component I have `IComponentInWorld` of that component, but `thatComponent.Data.CustomData` is null
Flampt#3906: I'm not really sure how to get the custom serialized data of a component
Flampt#3906: oh bruh
GHXX#9078: ^
Moojuiceman#5661: int i, you haven't declared it so the for loop is trying to assign to an existing variable
Flampt#3906: this is confusing, I got this error `error CS0103: The name 'i' does not exist in the current context` <[newline]> my code: <[newline]> ```cs <[newline]> for (i = 0; i < base.Outputs.Count; i++) <[newline]> { <[newline]>     try <[newline]>     { <[newline]>         base.Outputs[i].On = data[i]; <[newline]>     } <[newline]>     catch (IndexOutOfRangeException) <[newline]>     { <[newline]>         Logger.Info("caught error"); <[newline]>         break; <[newline]>     } <[newline]> } <[newline]> ```
Jimmy#8080: when modding is officially supported this will be easy (and documented)
Jimmy#8080: Maybe Program.GetInstance?
Jimmy#8080: yeah idk how you'd do dependency injection with mods at the moment
Flampt#3906: I don't have the instance and there are no references to grab it from
Flampt#3906: ok
Jimmy#8080: `ContinuousUpdatingComponents` is for components that have requested to update again on the next frame. They get added when a `LogicComponent` calls `UpdateForAnotherFrame()` during `LogicUpdate()`. I think in vanilla, the only component that uses it is Delayers.
Flampt#3906: what's the difference between `UpdatingComponents` and `ContinuousUpdatingComponents`
Flampt#3906: nice
Ecconia#4929: Whooot, fully decompiled `LogicAPI.dll` `LogicAPI.Server.dll` `LogicWorld.SharedCode.dll` and `Server.dll`, noice! Can run these from my IDE now.
Jimmy#8080: You need to look it up in `LogicManager` using the component's address
Flampt#3906: if anyone figures out how to get a LogicComponent instance from IComponentInWorld hmu
Flampt#3906: well I don't think I can get the instance so yeah
GHXX#9078: because all the data needs to be encoded as a string
GHXX#9078: serializing seems expensive
Flampt#3906: why would it be costly tho
Flampt#3906: dont think so
Flampt#3906: I only have `IComponentInWorld`
GHXX#9078: maybe you can somehow get the reference to the instance of the class of the connected component?
GHXX#9078: seems like that might be costly
GHXX#9078: hmm
Flampt#3906: I'll have to use Serialized Data method
Flampt#3906: now last thing to do is get data from the component after checking that it's ID matches
Flampt#3906: yee
GHXX#9078: nice 😄
Flampt#3906: perfectt
Flampt#3906: 
Flampt#3906: 
Flampt#3906: printed 31
Flampt#3906: sheesh
Flampt#3906: ohh
GHXX#9078: ok
GHXX#9078: to see if it runs
Flampt#3906: I'll try first without
GHXX#9078: wanna put a throw into the initialize method?
GHXX#9078: well
Flampt#3906: ok
GHXX#9078: and you might want to move the code back into initialize, assuming it still runs then
GHXX#9078: try again after you removed the exception
GHXX#9078: yea
Flampt#3906: got this tho `System.NullReferenceException: Object reference not set to an instance of an object.`
Flampt#3906: I just remove it
Flampt#3906: so thats good right?
Flampt#3906: this also did `System.Exception: Works`
Flampt#3906: but
Flampt#3906: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.
Flampt#3906: an error came
Flampt#3906: when I placed a bundler
Flampt#3906: oh
Flampt#3906: I'll try
Flampt#3906: only a splitter and switches
GHXX#9078: can you place one down?
Flampt#3906: I didnt place a bundler down
GHXX#9078: yeah
GHXX#9078: not during compilation
Flampt#3906: well it never was
GHXX#9078: when the class is instantiated
Flampt#3906: when compiling?
Flampt#3906: but when is the constructor supposed to run?
Flampt#3906: yes
GHXX#9078: did you put in the proper name?
GHXX#9078: something in your succ file must be odd then
Flampt#3906: multiple
Flampt#3906: yes
GHXX#9078: did you load into a world and place down the component?
GHXX#9078: that seems odd
Flampt#3906: but it doesn't seem to work
Flampt#3906: I used exceptions
Flampt#3906: ok
GHXX#9078: oh, a print also works
Flampt#3906: not sure I can put a few prints
GHXX#9078: just add a  <[newline]> throw Exception("Yep, it does run"); to check
GHXX#9078: does the code even run then?
Flampt#3906: still -1
Flampt#3906: didnt notice
Flampt#3906: ok
Flampt#3906: oh
GHXX#9078: not a class
GHXX#9078: its a "method"
Flampt#3906: why would I add the same class in a class
GHXX#9078: hm?
Flampt#3906: wait what
GHXX#9078: that should work
GHXX#9078: but yeah, above Initialize add <[newline]> ```cs <[newline]> public BundlerBase() <[newline]> { <[newline]> // and now the code that used to be in the initialize func <[newline]> } <[newline]> ```
GHXX#9078: ah
Flampt#3906: pretty simple
Flampt#3906: ```cs <[newline]> namespace WireBundle.Components <[newline]> { <[newline]>     public class Bundler8bit : BundlerBase <[newline]>     { <[newline]>         public override bool[] data => new bool[8]; <[newline]>     } <[newline]> } <[newline]> ```
Flampt#3906: no
GHXX#9078: do those components override Initialize also?
GHXX#9078: ah
Flampt#3906: 2bit 4bit 8bit and 16bit
Flampt#3906: because I have multiple components using it
GHXX#9078: why is the bundler base class abstract?
Flampt#3906: https://pastebin.com/f45vYWQZ
Flampt#3906: ok
GHXX#9078: can you send me the full class file
Flampt#3906: visual studio code
Flampt#3906: no
GHXX#9078: are you using visual studio?
Flampt#3906: how do I make the constructor
GHXX#9078: because if it did get called then numericId cannot be -1
Flampt#3906: I'm not that good at c#
GHXX#9078: maybe initialize doesnt get called for some reason
Flampt#3906: uh I'm sure what that would be
GHXX#9078: instead of in Initialize()
GHXX#9078: try throwing it into the constructor
Flampt#3906: BundlerBase <[newline]> ```cs <[newline]> public static int NumericID = -1; <[newline]>         protected override void Initialize() <[newline]>         { <[newline]>             if (NumericID == -1) <[newline]>                 NumericID = Component.Data.Type.NumericID; <[newline]>             else if (NumericID != Component.Data.Type.NumericID) <[newline]>                 throw new Exception("Component id changed unexpectedly!"); <[newline]>         } <[newline]> ```
Flampt#3906: SplitterBase <[newline]> ```cs <[newline]>                 int bundlerNumericID = WireBundle.Components.BundlerBase.NumericID; <[newline]>                 if (!logged) <[newline]>                 { <[newline]>                     Logger.Info("BundlerBaseNumericID: " + bundlerNumericID.ToString()); <[newline]>                     logged = true; <[newline]>                 } <[newline]> ```
Flampt#3906: ye
GHXX#9078: can you show me your code?
GHXX#9078: 🤔
Flampt#3906: just a type
Flampt#3906: is it maybe that it's not an object
Flampt#3906: I tried again but still -1
Flampt#3906: and turned on the switch and then it printed like it should
Flampt#3906: and connected them
Flampt#3906: I placed the splitter and a switch
GHXX#9078: then it should be set
GHXX#9078: plop down a component
GHXX#9078: yea
Flampt#3906: ._.
Flampt#3906: so it printed -1
Flampt#3906: but yeeh
Flampt#3906: I dont like seeing him
GHXX#9078: <@!154964593397989376> i just wanted to point out that i like those error drawings xD
Flampt#3906: ohh compiled
Flampt#3906: oh nvm forgot to change null to -1 in one line
GHXX#9078: XDDDDDDDDD
Flampt#3906: 
Flampt#3906: yeah lol
GHXX#9078: the compiler will tell you xD
GHXX#9078: _i think_
GHXX#9078: should be implicit, so no
GHXX#9078: and <[newline]> ```cs <[newline]> if (NumericId == -1) <[newline]>     NumericID = Component.Data.Type.NumericId; <[newline]> else if(NumericId != Component.Data.Type.NumericId) <[newline]>     throw new Exception("Component id changed unexpectedly!");```
Flampt#3906: when assigning
Flampt#3906: do I have to cast it
Flampt#3906: ok
GHXX#9078: so <[newline]> public static int NumericID = -1;
GHXX#9078: and have the default value be -1
GHXX#9078: <@!621309926631014410> lets use an int instead
Ecconia#4929: It might be, that Nullable is disabled in the compilation. But I might also say nonsense. Just had issues and went well with having it off.
GHXX#9078: actually
GHXX#9078: <:thonk:808797080713035787>
Ecconia#4929: There is something funny with the mod compilation and Nullable. Up to this point I never used it. Idk. Has to be investigated further.
Flampt#3906: ok
GHXX#9078: so it wastes an extra 4 bytes in our case, but we can then make it "null" for initialization purposes
GHXX#9078: it makes it nullable
Flampt#3906: whats the ? for
GHXX#9078: store it as a "ushort?"
GHXX#9078: actually
GHXX#9078: but store it as a ushort
GHXX#9078: for printing yeah
GHXX#9078: ooh
Flampt#3906: to print it
Flampt#3906: idk
GHXX#9078: why?
Flampt#3906: can I just do ToString() on it?
Flampt#3906: oh
GHXX#9078: its an unsigned 16bit integer number
GHXX#9078: no
Flampt#3906: is ushort a string?
GHXX#9078: 👍
Flampt#3906: yeah I'll change it
Flampt#3906: oh
GHXX#9078: tostring will add some garbage
GHXX#9078: 
GHXX#9078: no
Flampt#3906: same thing
GHXX#9078: do that
GHXX#9078: yeea
GHXX#9078: you could get its NumericId
Flampt#3906: `ComponentType`
GHXX#9078: because this code will run more than once
GHXX#9078: also, whats the type of Component.Data.Type
Flampt#3906: why
GHXX#9078: or, safer <[newline]> ```cs <[newline]> if (NumericId == null) <[newline]>     NumericID = Component.Data.Type.ToString(); <[newline]> else if(NumericId != Component.Data.Type.ToString()) <[newline]>     throw new Exception("Component id changed unexpectedly!");```
Flampt#3906: hm ok
GHXX#9078: and inside the constructor of your component you do <[newline]> ``` <[newline]> NumericID = Component.Data.Type.ToString();```
GHXX#9078: just make it <[newline]> public static string NumericID = null;
Flampt#3906: <:thunking:446109191392985108>
GHXX#9078: we need to do a hacky approach then
GHXX#9078: i see
GHXX#9078: oooh
Flampt#3906: since Component is not static
Flampt#3906: that error is from this first line
Flampt#3906: BundlerBase: <[newline]> ```cs <[newline]> public static string NumericID = Component.Data.Type.ToString(); <[newline]> ``` <[newline]> SplitterBase: <[newline]> ```cs <[newline]> Logger.Info("BundlerBaseNumericID: " + WireBundle.Components.BundlerBase.NumericID); <[newline]> ``` <[newline]> error: `A field initializer cannot reference the non-static field, method, or property 'LogicComponent.Component'`
Flampt#3906: hold on
Flampt#3906: I get an error tho
GHXX#9078: and no, you dont have to import anything
Flampt#3906: oh ok
GHXX#9078: you need that
GHXX#9078: yeah keep that
Flampt#3906: the property was
GHXX#9078: the field should be marked as static, but the class shouldnt be
Flampt#3906: no
GHXX#9078: was your class marked as static?
Flampt#3906: I don't have to import it or anything?
Flampt#3906: ok so I just have to remove static
GHXX#9078: at least not necessarily
GHXX#9078: the class should NOT be static though
GHXX#9078: WireBundle.Components.BundlerBase that is
GHXX#9078: make sure your class is maked as public, just in case
GHXX#9078: to access it
GHXX#9078: simply write WireBundle.Components.BundlerBase.NumericID then
Flampt#3906: WireBundle.Components.BundlerBase
GHXX#9078: the public static one
GHXX#9078: what namespace and class is the first variable in
Flampt#3906: the bundlerBase code
GHXX#9078: ah
Flampt#3906: yes
GHXX#9078: the wirebundle code?
GHXX#9078: what code gives you this error?
GHXX#9078: hm?
Flampt#3906: shouldn't I have it since the file is literally in the same folder
Flampt#3906: I'm also getting an error saying that I don't have the instance
Flampt#3906: `A field initializer cannot reference the non-static field, method, or property 'LogicComponent.Component'`
Flampt#3906: I can't get it
Flampt#3906: 
Flampt#3906: and Component isn't
Flampt#3906: but since NumericID is static
Flampt#3906: this is what I did <[newline]> in the BundlerBase class I added this <[newline]> ```cs <[newline]> public static string NumericID = Component.Data.Type.ToString(); <[newline]> ``` <[newline]> and in the SplitterBase class I use this to access it <[newline]> ```cs <[newline]> WireBundle.Components.BundlerBase.NumericID <[newline]> ```
Flampt#3906: maybe I can just the ComponentAddress
Flampt#3906: I'll try it tomorrow
Flampt#3906: If that works then great
Flampt#3906: <:thunking:446109191392985108>
GHXX#9078: simply access it using yourOtherComponentClassName.yourstaticVariable
Flampt#3906: But even if I did, how would I access it from the Splitter LogicComponent?
GHXX#9078: without reflection
GHXX#9078: from just within your component class
GHXX#9078: but perhaps you can find out the id of your own component instance
Flampt#3906: I cant get the bundler LogicComponet instance
Flampt#3906: But I only have this: `IComponentInWorld`
GHXX#9078: well, you are just looking for a way to find out if a connected component is a bundler component right?
Flampt#3906: From the bundler class
Flampt#3906: Is that how I get it
GHXX#9078: hm?
Flampt#3906: So I can access a LogicComponent instance??
GHXX#9078: just some static variable in your own class
Flampt#3906: And where do I store it
GHXX#9078: i doubt it would change during runtime
GHXX#9078: so its always the correct one
GHXX#9078: thats why you would grab it during runtime
GHXX#9078: yea
Flampt#3906: Its not the same if you have other mod components
Flampt#3906: The numeric ID?
GHXX#9078: inside your bundler component code, maybe you can get the id of said component type, which you can then use for finding the other
Flampt#3906: What?
GHXX#9078: can you get the component type id of your own component?
Flampt#3906: To check that it's a bundler component
GHXX#9078: <@621309926631014410> what do you need the names for anyway?
Jimmy#8080: Correct
Flampt#3906: can it only be used on the client
Flampt#3906: literally what the heck
Flampt#3906: `The type or namespace name 'Interfaces' does not exist in the namespace 'LogicWorld'`
Flampt#3906: why can't I use LogicWorld.Interfaces
Flampt#3906: I probably will
Justin#2534: Try working on a smaller project and coming back to it
Flampt#3906: I'm very close to giving up
Justin#2534: It can be a frustrating process for sure
Flampt#3906: well I don't know what to do at this point, I checked I bunch of files but nothing seemed helpful
Flampt#3906: ._.
GHXX#9078: dunno
Flampt#3906: <@!109262887310065664> do you think I can use any of these to get it?
Flampt#3906: I found this too
Flampt#3906: IClientWorld also uses it
Flampt#3906: 
Flampt#3906: I think I found it
GHXX#9078: a reference to it might be in another dll
GHXX#9078: hmm
Flampt#3906: not sure how to get it because for the WorldData we used the Service thing
Flampt#3906: but I have to get the instance and everything
Flampt#3906: Ok 👍
GHXX#9078: check out the public class <[newline]> LogicWorld.SharedCode.Components.ComponentTypesManager <[newline]> more specifically <[newline]> LogicWorld.SharedCode.Components.ComponentTypesManager.NumericIDsToTextIDs, which is a dict, so just access it with [YOUR_NUMERIC_ID] <[newline]> LogicWorld.SharedCode.Components.ComponentTypesManager.NumericIDsToTextIDs[numericID] <[newline]>  <[newline]> <@!621309926631014410>
GHXX#9078: ok, maybe it contains an enum or something or a name
Flampt#3906: I'll dig a bit more in like 6 hours
Flampt#3906: I'm not home
GHXX#9078: can you dig into ComponentType and show me the class contents?
Flampt#3906: It returns the numeric ID
Flampt#3906: `component.Data.Type.ToString()`
Flampt#3906: I did do that
GHXX#9078: 
GHXX#9078: 
GHXX#9078: simply access the componentdata and then get the componenttype
Flampt#3906: Dont think so
GHXX#9078: i think you would need to get the actual class that it is, maybe that provides you some info
Flampt#3906: I could find the numeric ID but that isn't very useful
Flampt#3906: is there a way to get the component name with this object `IComponentInWorld` ?
GHXX#9078: idk if there is a better way
Flampt#3906: hm ok
GHXX#9078: xD
GHXX#9078: make a binary counter or something
Flampt#3906: do I count ticks in my head lol
Flampt#3906: check how many you get?
GHXX#9078: hmm, i guess load up a larger world, set tps to something very high, check how many you get and then start using your modded component and see if there is a noticable impact
Flampt#3906: how do I know
GHXX#9078: they technically theoretically™ should be
GHXX#9078: i hope tps are good
Flampt#3906: I hope I never need them again
Flampt#3906: lol
GHXX#9078: working with delegates be like
Flampt#3906: \:)
GHXX#9078: https://tenor.com/view/cat-halloween-witch-mixing-salem-gif-6583375
Flampt#3906: lesgooo
GHXX#9078: <a:rooAwwShakeZoom:794739142105497630>
Flampt#3906: everything works
Flampt#3906: 
Flampt#3906: omgg
GHXX#9078: (because even though it is stored as iworlddata, its actually of the type worlddata)
GHXX#9078: worlddata or Iworlddata, shouldnt matter in this case
Flampt#3906: k
GHXX#9078: as the second arg
GHXX#9078: try passing the instance of worlddata
GHXX#9078: oh yeah
Flampt#3906: ```cs <[newline]>  <[newline]>         private static Delegate lookupPegWiresDelegate = LookupPegWires.CreateDelegate(Expression.GetDelegateType( <[newline]>            (from parameter in LookupPegWires.GetParameters() select parameter.ParameterType) <[newline]>            .Concat(new[] { LookupPegWires.ReturnType }) <[newline]>            .ToArray())); <[newline]> ```
GHXX#9078: for delegate creation
GHXX#9078: whats your code again?
GHXX#9078: hmm
Flampt#3906: is this helpful?
Flampt#3906: 
GHXX#9078: also has an example if you scroll down, but they are declaring a delegate, whereas we are using the GetDelegateType method
GHXX#9078: https://docs.microsoft.com/en-us/dotnet/api/system.delegate.createdelegate?view=netcore-3.1#system-delegate-createdelegate(system-type-system-reflection-methodinfo) here is the docs page for the createdelegate method
Flampt#3906: I think I need to pass the instance
Flampt#3906: :/
GHXX#9078: :C
Flampt#3906: ``` <[newline]>  ---> System.ArgumentException: Cannot bind to the target method because its signature is not compatible with that of the delegate type. <[newline]>    at System.Reflection.RuntimeMethodInfo.CreateDelegateInternal(Type delegateType, Object firstArgument, DelegateBindingFlags bindingFlags) <[newline]>    at System.Reflection.RuntimeMethodInfo.CreateDelegate(Type delegateType) <[newline]>    at WireBundle.Components.SplitterBase..cctor() <[newline]> ```
Flampt#3906: when giving an active input to the component
Flampt#3906: ah crap
GHXX#9078: <:vvPog:580599306759831582>
Flampt#3906: it loaded the world nice
GHXX#9078: 👍
Flampt#3906: without it
GHXX#9078: yes
Flampt#3906: `HashSet<WireAddress> wireAddresses = (HashSet<WireAddress>)lookupPegWiresDelegate.DynamicInvoke(pegAddress);` this should work
GHXX#9078: about the casting?
Flampt#3906: I got an error
Flampt#3906: yes
Flampt#3906: of dynamic invoke
GHXX#9078: yeaa
GHXX#9078: the returnvalue will be "object?"
Flampt#3906: the return
GHXX#9078: cast what?
Flampt#3906: I also have to cast
Flampt#3906: ok
GHXX#9078: try calling it using .DynamicInvoke(pegArg) instead of .Invoke()
Flampt#3906: same errror
GHXX#9078: okay new attempt
Flampt#3906: yea
GHXX#9078: delegates do be weird
Flampt#3906: ok
Flampt#3906: ig thats fine
GHXX#9078: thats fine
Flampt#3906: so I had to use object
Flampt#3906: can't use WorldData as type since it's internal
Flampt#3906: ok but this is how I get it: `private static object worldDataInstance = LogicAPI.Service.Get<IWorldData>();`
GHXX#9078: <:thonk:808797080713035787>
GHXX#9078: try passing the world data object as a first parameter
GHXX#9078: ah
Flampt#3906: I did
GHXX#9078: yes
Flampt#3906: when Invoking?
GHXX#9078: try just adding the peg address arg
Flampt#3906: Invoke ^
GHXX#9078: ok .Invoke it is then
Flampt#3906: `error CS1955: Non-invocable member 'SplitterBase.lookupPegWiresDelegate' cannot be used like a method.`
GHXX#9078: because the original LW function needs one
GHXX#9078: you do need to pass an arg
GHXX#9078: well actually
GHXX#9078: what happens if you use just ()
Flampt#3906: Invoke won't work either
Flampt#3906: `error CS1929: 'Delegate' does not contain a definition for 'Invoke' and the best extension method overload 'PropertyChangedEventExtensions.Invoke<PegAddress>(PropertyChangedEventHandler, PegAddress, params Expression<Func<PegAddress, object>>[])' requires a receiver of type 'PropertyChangedEventHandler'`
GHXX#9078: ill be honest, delegates are a bit finnicky to get the syntax right imo
Flampt#3906: ok so () won't work.. trying Invoke
Flampt#3906: k
GHXX#9078: according to stackoverflow its literally the same after compilation
Flampt#3906: ok
GHXX#9078: imo .Invoke() is cleaner (as it indicates that it is not a normal method)
GHXX#9078: either () or .Invoke()
Flampt#3906: just () ?
Flampt#3906: and how do I use it?
GHXX#9078: and you also need the "using System.Linq.Expressions;"
GHXX#9078: ```cs <[newline]>  private static Delegate lookupWireDelegate = LookupPegWires.CreateDelegate(Expression.GetDelegateType( <[newline]>             (from parameter in LookupPegWires.GetParameters() select parameter.ParameterType) <[newline]>             .Concat(new[] { LookupPegWires.ReturnType }) <[newline]>             .ToArray())); <[newline]> ```  <[newline]> something like this _i think_
GHXX#9078: check out the accepted answer of this one https://stackoverflow.com/questions/16364198/how-to-create-a-delegate-from-a-methodinfo-when-method-signature-cannot-be-known
Flampt#3906: not sure what it is exactly
Flampt#3906: I didn't pass the target parameter
Flampt#3906: ``` <[newline]> System.TypeInitializationException: The type initializer for 'WireBundle.Components.SplitterBase' threw an exception. <[newline]>  ---> System.ArgumentException: Cannot bind to the target method because its signature is not compatible with that of the delegate type. <[newline]>    at System.Delegate.CreateDelegate(Type type, MethodInfo method, Boolean throwOnBindFailure) <[newline]>    at System.Delegate.CreateDelegate(Type type, MethodInfo method) <[newline]>    at WireBundle.Components.SplitterBase..cctor() <[newline]> ```
Flampt#3906: ok new error \:)
Flampt#3906: ah ok
GHXX#9078: 
GHXX#9078: use this one
GHXX#9078: https://docs.microsoft.com/en-us/dotnet/api/system.type.getmethod?view=netcore-3.1#system-type-getmethod(system-string-system-type())
Flampt#3906: maybe makes it easier to find
Flampt#3906: lol
Flampt#3906: yeah but you know just in case
GHXX#9078: and also, you only have to specify the parameters for lookup, as lookuppegwires is unique
GHXX#9078: ez fix though, get rid of the bindingflags
GHXX#9078: yeah, overloads are different in netcore3.0
Flampt#3906: it crashes
Flampt#3906: wdym should be fine
GHXX#9078: i guess the overloads are different
GHXX#9078: should be fine
Flampt#3906: do I need to cast
Flampt#3906: ```cs <[newline]> private static MethodInfo LookupPegWires = worldDataType.GetMethod("LookupPegWires", BindingFlags.Instance | BindingFlags.Public, new Type[] { typeof(PegAddress) }); <[newline]> private static MethodInfo LookupWire = worldDataType.GetMethod("Lookup", BindingFlags.Instance | BindingFlags.Public, new Type[] { typeof(WireAddress) }); <[newline]> ```
Flampt#3906: String, BindingFlags, Type[]
Flampt#3906: I passed in order like in the docs
Flampt#3906: ``` <[newline]> (23,94): error CS1503: Argument 2: cannot convert from 'System.Reflection.BindingFlags' to 'System.Type[]' <[newline]> (23,139): error CS1503: Argument 3: cannot convert from 'System.Type[]' to 'System.Reflection.ParameterModifier[]' <[newline]> (24,82): error CS1503: Argument 2: cannot convert from 'System.Reflection.BindingFlags' to 'System.Type[]' <[newline]> (24,127): error CS1503: Argument 3: cannot convert from 'System.Type[]' to 'System.Reflection.ParameterModifier[]' <[newline]> ```
Flampt#3906: bru wha
Flampt#3906: already have it
GHXX#9078: might need a "using LogicAPI.Data;"
Flampt#3906: k
GHXX#9078: pass <[newline]>  <[newline]> new Type[]{typeof(WireAddress)}
GHXX#9078: sec
GHXX#9078: no
Flampt#3906: wait do I pass this `new Type[WireAddress]`
GHXX#9078: if this is annoying to do for whatever reason, there are other ways (get both and then filter them)
GHXX#9078: so you can just use typeof()
GHXX#9078: the param classes are public
Flampt#3906: ok
GHXX#9078: 
GHXX#9078: one that specifies argument types
GHXX#9078: use an overload like that
Flampt#3906: how do I choose the correct one
GHXX#9078: https://docs.microsoft.com/en-us/dotnet/api/system.type.getmethod?view=net-6.0#system-type-getmethod(system-string-system-reflection-bindingflags-system-type())
Flampt#3906: ohh that one
GHXX#9078: Lookup, public, instance
GHXX#9078: 
Flampt#3906: there is only one with that name
GHXX#9078: no
Flampt#3906: impossible
GHXX#9078: but the stacktrace does point towards those two lines as far as i can tell
GHXX#9078: odd, maybe some sort of lazy loading
GHXX#9078: so, one of those two give you more than one match
Flampt#3906: and in logs it printed 1 before the error
Flampt#3906: but it happened when I gave the component active input
GHXX#9078: cctor means it happens during static variable initilization
Flampt#3906: with printing
GHXX#9078: 
Flampt#3906: I debugged
Flampt#3906: yes
GHXX#9078: are you sure that its that line?
GHXX#9078: uuh
GHXX#9078: so it makes so difference
GHXX#9078: for delegates
GHXX#9078: according to stackoverflow the () form gets turned into .Invoke() by the compiler
Flampt#3906: https://pastebin.com/hFB8feu0
Flampt#3906: I checked the link you sent and that's not how it was used
GHXX#9078: actually maybe both work
GHXX#9078: lookupPegWiresDelegate.Invoke(pegAddress);
GHXX#9078: like
GHXX#9078: lookupPegWiresDelegate(pegAddress); i think you need to use .Invoke
GHXX#9078: ooh
Flampt#3906: yeah
GHXX#9078: can you show me the full code?
GHXX#9078: <:Thinkies:609112411966013460>
Flampt#3906: <@!109262887310065664> if you don't mind taking a look
PseudoGoose#2841: c# moment
Flampt#3906: not too sure what I did wrong or right
Flampt#3906: so I have this: <[newline]> ```cs <[newline]> private static Func<PegAddress, HashSet<WireAddress>> lookupPegWiresDelegate = (Func<PegAddress, HashSet<WireAddress>>)Delegate.CreateDelegate(typeof(Func<PegAddress, HashSet<WireAddress>>), LookupPegWires); <[newline]> ``` <[newline]> and this line causes an error: <[newline]> ```cs <[newline]> HashSet<WireAddress> wireAddresses = lookupPegWiresDelegate(pegAddress); <[newline]> ``` <[newline]> ``` <[newline]> System.TypeInitializationException: The type initializer for 'WireBundle.Components.SplitterBase' threw an exception. <[newline]>  ---> System.Reflection.AmbiguousMatchException: Ambiguous match found. <[newline]>    at System.RuntimeType.GetMethodImplCommon(String name, Int32 genericParameterCount, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers) <[newline]>    at System.RuntimeType.GetMethodImpl(String name, BindingFlags bindingAttr, Binder binder, CallingConventions callConv, Type[] types, ParameterModifier[] modifiers) <[newline]>    at System.Type.GetMethod(String name, BindingFlags bindingAttr) <[newline]>    at WireBundle.Components.SplitterBase..cctor() <[newline]> ```
Flampt#3906: Hm I'll try that
IsCoffeeTho#0001: i really wish the modding errors for logicscript were a bit more verbose
GHXX#9078: <@!151293812675706880>  in fact, just think of it as a method https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/delegates/using-delegates
Moojuiceman#5661: Think of it like a listener method. You can register methods to a delegate, then when you call the delegate it calls those methods
Ecconia#4929: Sounds interesting. No clue what a delegate is, but it seems quite important in C#. From what I saw so far.
GHXX#9078: okay, it will be quite slow according to stackoverflow. But there seems to be an easy way of making a delegate that you can tell call almost for free: <[newline]> https://blogs.msmvps.com/jonskeet/2008/08/09/making-reflection-fly-and-exploring-delegates/ (but its quite some reading) <[newline]> <@!621309926631014410>
GHXX#9078: the tricks being cooking up custom methods at runtime
GHXX#9078: if its too slow maybe mono.cecil can be used for some tricks
GHXX#9078: probably
Flampt#3906: I hope that's fine
Flampt#3906: I will have to call Invoke every logicUpdate tho
Flampt#3906: lol
Flampt#3906: revolutionary components may be added soon
GHXX#9078: 😄
Flampt#3906: appreciate the help!
Flampt#3906: seems like it worked
Flampt#3906: :)))))
Flampt#3906: 
GHXX#9078: because IWorldData gets registered it seems
GHXX#9078: 
Flampt#3906: shouldn't it be WorldData
Flampt#3906: <IWorldData>
Flampt#3906: why the interface?
GHXX#9078: and then just pass instance as the first arg to the invoke()
GHXX#9078: var instance = LogicAPI.Service.Get<IWorldData>()
Flampt#3906: hm
GHXX#9078: its public too
GHXX#9078: 
GHXX#9078: could be worth trying
GHXX#9078: logicapi has a function to get the service it seems
GHXX#9078: aaaah
GHXX#9078: its custom
Flampt#3906: not sure what that means
GHXX#9078: whats interesting is that it is registered as some kind of service
Flampt#3906: yeah I tried using a search but it only searches classes and stuff
GHXX#9078: im digging through the code right now. the idea is that you want to find a static variable somewhere that has it
Flampt#3906: I can't get the instance?
Flampt#3906: so
GHXX#9078: yea
Flampt#3906: but I have the method
GHXX#9078: if you have the instance but not the method then thats also useless
GHXX#9078: yeah, but its also the other way around
Flampt#3906: but isn't the method useless if I don't have the instance
GHXX#9078: well, you needed the type anyway to get the method
Flampt#3906: so I can actually gather data
Flampt#3906: all this time, I was trying to get the instance
GHXX#9078: you got the type
Flampt#3906: but didn't I get the instance using reflection?
GHXX#9078: type is a type, and not an instance of that type
GHXX#9078: obviously
GHXX#9078: oh well yeah
GHXX#9078: so, "type" should be wrong
GHXX#9078: https://stackoverflow.com/questions/19151656/methodinfo-invoke-targetexception
GHXX#9078: hmm
Flampt#3906: <@!109262887310065664> is the target the `type` I passed?
Flampt#3906: this line: `HashSet<WireAddress> wireAddresses = (HashSet<WireAddress>)LookupPegWires.Invoke(type, new[]{base.Inputs[0].Address});` <[newline]> raised this error: `System.Reflection.TargetException: Object does not match target type.`
Flampt#3906: Oh
GHXX#9078: the reason for this is because, as you correctly saw, it is not static -> BindingFlags.Instance, *but it is public* --> BindingFlags.Public
GHXX#9078: use BindingFlags.Instance | BindingFlags.Public
Flampt#3906: dunno why tho
Flampt#3906: I found out that `LookupPegWires` is null
Flampt#3906: after some debugging
Flampt#3906: thats all I know
Flampt#3906: something is wrong with the last line
Flampt#3906: maybe it has something to do with the type I passed
Flampt#3906: ```cs <[newline]> var asm = AppDomain.CurrentDomain.GetAssemblies().First(x => x.GetName().Name == "LogicWorld.SharedCode"); <[newline]> Type type = asm.GetType("LogicWorld.SharedCode.WorldData"); <[newline]> var LookupPegWires = type.GetMethod("LookupPegWires", BindingFlags.Instance | BindingFlags.NonPublic); <[newline]> HashSet<WireAddress> wireAddresses = (HashSet<WireAddress>)LookupPegWires.Invoke(type, new[]{base.Inputs[0].Address}); <[newline]> ```
Flampt#3906: boy do I love when it doesn't say which line `System.NullReferenceException: Object reference not set to an instance of an object.`
Flampt#3906: and the splitter will get the data from the bundler through the wire
Flampt#3906: I am making a mod that can bundle up inputs
Flampt#3906: yeah of course I will make it public when I finish it
GHXX#9078: also,  <[newline]> a) what mod are you making <[newline]> b) can you make the source code public when it works? This way other people can take a look and will have an easier time
Flampt#3906: I see
GHXX#9078: which makes a lot of sense
GHXX#9078: it doesnt suck, its just that the return type is "object"
Flampt#3906: oh ok
GHXX#9078: HashSet<WireAddress> wireAddresses =  (HashSet<WireAddress>)LookupPegWires.Invoke(type, new[]{base.Inputs[0].Address});
GHXX#9078: yeah just cast it
GHXX#9078: aaaaaaaaaah
Flampt#3906: that line
Flampt#3906: `HashSet<WireAddress> wireAddresses = LookupPegWires.Invoke(type, new[]{base.Inputs[0].Address});`
GHXX#9078: what line do you get this error at?
GHXX#9078: this one is worse
Flampt#3906: the Invoke method sucks
Flampt#3906: gosh
Flampt#3906: ok without I get another error: `error CS1503: Argument 2: cannot convert from 'LogicAPI.Data.PegAddress' to 'object[]'`
Flampt#3906: I'll try without the new thing
Flampt#3906: `error CS0266: Cannot implicitly convert type 'object' to 'System.Collections.Generic.HashSet<LogicAPI.Data.WireAddress>'. An explicit conversion exists (are you missing a cast?)`
Flampt#3906: k lemme try
GHXX#9078: .Invoke(worldDataObject, new[]{base.inputs[0].Address})
Flampt#3906: oh
GHXX#9078: you need to add the worlddata object as a first argument
Flampt#3906: yeah
GHXX#9078: ah inside the worlddata
GHXX#9078: what class is that method in?
Flampt#3906: that doesnt work
Flampt#3906: I have this currently `LookupPegWires.Invoke(base.Inputs[0].Address);`
GHXX#9078: cuz i think it has a object, object[] overload
GHXX#9078: you also need the args i think
GHXX#9078: if new[] doesnt work then use new object[]
GHXX#9078: and parameters should be an array of arguments, e.g. new[]{ arg1, arg2, arg3 } e.g. new[]{ "aaaaa", 1324234234,  "anyThingElseReally"}
Flampt#3906: `error CS1501: No overload for method 'Invoke' takes 1 arguments`
GHXX#9078: obj should be the class instance that you want to call this function for
GHXX#9078: with less args
GHXX#9078: i think there should be a different overload
Flampt#3906: 
Flampt#3906: yeah I wasn't sure if I should use kwarg
GHXX#9078: im pretty sure .Invoke() accepts a params object[] arg
Flampt#3906: I will
GHXX#9078: .Invoke(arg1, arg2)
GHXX#9078: just add them inside
GHXX#9078: i however do not recommend constantly calling type.GetMethod(), so you want to store that in a persistent variable somewhere
Flampt#3906: and to pass args?
GHXX#9078: not sure how fast .Invoke() is, but its probs not too bad
Flampt#3906: ok
GHXX#9078: you need to do LookupPegWires.Invoke()
Flampt#3906: oh
GHXX#9078: but just adding () wont work
Flampt#3906: k
GHXX#9078: its fine to store it like this
Flampt#3906: so I can just do LookupPegWires()
Flampt#3906: is it ok to store a method in a var like this? `var LookupPegWires = type.GetMethod("LookupPegWires", BindingFlags.Instance | BindingFlags.NonPublic);˛`
Flampt#3906: yup
GHXX#9078: i guess i wont write up any code then xD
GHXX#9078: oh nice
Flampt#3906: pogg
Flampt#3906: 
GHXX#9078: ima write up some code though
Flampt#3906: oh ok
GHXX#9078: its .GetName().Name
GHXX#9078: OOOOH
GHXX#9078: might be a net 6.0 thing
Flampt#3906: I even checked docs
Flampt#3906: well its not
GHXX#9078: Name should be a thing
Flampt#3906: I think its GetName
Flampt#3906: maybe FullName
Flampt#3906: `error CS1061: 'Assembly' does not contain a definition for 'Name' and no accessible extension method 'Name' accepting a first argument of type 'Assembly' could be found (are you missing a using directive or an assembly reference?)`
Flampt#3906: error
Flampt#3906: ```cs <[newline]>             var asm = AppDomain.CurrentDomain.GetAssemblies().First(x => x.Name == "LogicWorld.SharedCode"); <[newline]>             Type type = asm.GetType("LogicWorld.SharedCode.WorldData"); <[newline]> ``` <[newline]> I'll give this a try
Flampt#3906: oh ok
GHXX#9078: the type of asm will be System.Assembly
GHXX#9078: well
GHXX#9078: a variable name
Flampt#3906: what type is that
Flampt#3906: but what is asm
Flampt#3906: hm ok
GHXX#9078: OR, easier, pick any public type of that dll and get its dll using typeof(...).Assembly
GHXX#9078: then asm will contain a reference to the assembly
GHXX#9078: ```using System; <[newline]> using System.Reflection; <[newline]> using System.Linq; <[newline]>  <[newline]> var asm = AppDomain.CurrentDomain.GetAssemblies().First(x=>x.Name == "LogicWorld.SharedCode");``` <[newline]> this might also work
GHXX#9078: sec
GHXX#9078: there are many other classes
Flampt#3906: 
Flampt#3906: it's internal
Flampt#3906: but it's not public
GHXX#9078: use typeof(someClassName) where someClassName is a class in the same assembly, but is public
Flampt#3906: what do I do instead?
GHXX#9078: likely
Flampt#3906: should it be `LogicWorld.SharedCode.WorldData` ?
GHXX#9078: since you didnt specify the fully typename
GHXX#9078: although what probably is null is "type"
GHXX#9078: dont do assembly.loadfile, as it should be loaded already
Flampt#3906: I tried with Load and LoadFrom too
Flampt#3906: I imported System.Reflection, System, LogicWorld.SharedCode, LogicLog
Flampt#3906: `System.NullReferenceException: Object reference not set to an instance of an object.`
Flampt#3906: ```cs <[newline]>             Assembly assembly = Assembly.LoadFile(@"D:\Logic.World.v0.90.3\Server\LogicWorld.SharedCode.dll"); <[newline]>             Type type = assembly.GetType("WorldData"); <[newline]>             var LookupPegWires = type.GetMethod("LookupPegWires", BindingFlags.Instance | BindingFlags.NonPublic); <[newline]>             Logger.Info("Working!"); <[newline]> ```
Flampt#3906: yeah
GHXX#9078: can you show me your code and the error you are getting?
Flampt#3906: I checked his code
GHXX#9078: in this case you need to get it using some other method (check ecconias code for that), i think he used typeof(someOtherClassInTheSameDll).Assembly. then get the class, etc.
Flampt#3906: <@!109262887310065664>
Flampt#3906: I just want to get the WorldData object, from the assembly LogicWorld.SharedCode.dll and use it's method
Flampt#3906: ok I tried a bunch of stuff and now I'm getting a error that an object is being referenced even tho it doesn't exist
Flampt#3906: I have this after that line: `var LookupPegWires = type.GetMethod("LookupPegWires", BindingFlags.Instance | BindingFlags.NonPublic);`
Flampt#3906: I only referenced it??
Flampt#3906: so this: `var type = typeof(WorldData);` raised this error: `error CS0122: 'WorldData' is inaccessible due to its protection level `
Flampt#3906: Alright
GHXX#9078: in any case, as Ecconia pointed out, checking how he did it should be a decent start
GHXX#9078: but if you have to reference the type at runtime for whatever reason you can also do GetType but then you need to know the assembly
GHXX#9078: ideally you would use something like typeof(SomeNamespace.blabla.someClass, BindingFlags.Something|BindingFlags.SomethingElse).GetField("yourWorldFieldReference", BindingFlags.Something|BindingFlags.SomethingElse)
GHXX#9078: lies
Ecconia#4929: If you need examples for reflection (and harmony) look at my mods. I make excessive use of them
Flampt#3906: I searched up but I only found people saying that it's almost impossible
Flampt#3906: <@109262887310065664> do I use GetType?
Flampt#3906: Hm ok
GHXX#9078: once you got that reference you can read/write it, even ignoring the "readonly" modifier. So you can even set a private readonly field thats in a private class
GHXX#9078: generally you look for a class that contains the variable you want to access (access modifiers such as private, protected, etc. dont matter) <[newline]> and then from that class reference you can do a search for the property/field/method/etc. that you want
GHXX#9078: you can find any object in memory pretty much
Flampt#3906: I'm not that familiar with reflection, I can get the current(initialized) WorldData object with it?
GHXX#9078: keep in mind that reflection is very slow compared to pretty much anything else, so try to keep the number of reflection calls to a minimum by caching the object you want to use, if possible
GHXX#9078: if you want to access worldData or pretty much anything you can use reflection
Flampt#3906: Both
Limón#7879: I think there is a way to get the connected block if you look at my wireless mod
GHXX#9078: which of the two questions do you still need an answer to?
Flampt#3906: I did
Ecconia#4929: No. Look it up in LW source code...
Flampt#3906: No one knows? \:(
Flampt#3906: how do I access the WorldData?
Flampt#3906: is it somehow possible to get the connected peg(s) of `base.Inputs[0]` ?
Leo3065#5297: Ah that makes sense, and it's working now
GHXX#9078: aah
Ecconia#4929: Here are the details: https://discord.com/channels/401255675264761866/901659878869844048/945423859962769418 <[newline]> (Loading harmony last does the trick - after all other compilation has been done) <[newline]> (Since the compiler breaks with `Path is null`, once a single Harmony-using mod has been loaded)
GHXX#9078: <:rooThink1:580614815408586762>
Ecconia#4929: So your fix is quite easy. Remove `loadaccelerator`, start LW. Then add `loadaccelerator` back and start LW again. As easy as that. <[newline]> (Given it is your only Harmony-using mod).
GHXX#9078: simply loading harmony first should fix it all id assume
GHXX#9078: it seems odd
cheese3660#8641: Ecconia descrbed the issue in their latest message here
GHXX#9078: so this is likely an issue with something that relies on harmony
GHXX#9078: <@!156022918906642432>  iirc, the "path is empty" indicates that a dll that was needed couldnt be found
cheese3660#8641: Yeah ... thats your problem
Leo3065#5297: Yes:
cheese3660#8641: Those docs were written before IInputPeg was a thing iirc
Ecconia#4929: To be specific: The compilation of mods becomes impossible, as soon as the first Harmony mod is loaded. <[newline]> (And my fix is only for those who paid for the game btw).
cheese3660#8641: I was asking this cuz loading too many mods at once breaks the game sometimes, <@151293812675706880> has the fix in case its that
cheese3660#8641: No
GHXX#9078: so InputPeg is a class. IInputPeg is an interface
GHXX#9078: InputPeg != IInputPeg <[newline]> any name prefixed with an I in c# terms indicates an interface rather than a class. <[newline]> But it is very likely that InputPeg : IInputPeg
GHXX#9078: <@299685147220115457> do you rely on a non-lw dll? e.g. harmony?
cheese3660#8641: Do you have any other mods?
Leo3065#5297: What could cause the problem?
Leo3065#5297: <@!299685147220115457> Question: <[newline]> My game doesn't seem to load when I added you mod. When I removed the mod the game loads properly. <[newline]> The OS is Windows 10, the game version is 0.90.3, and when I tried to load with your mod, the following error shows up in the log file: <[newline]> ``` <[newline]> 2022-03-06T10:18:56Z | ERROR | [SceneAndNetworkManager] going to error screen with message: "Path is empty" <[newline]> ```
Flampt#3906: It seems to be the same thing since it says that base.Inputs contains InputPeg's but in the error I got it says its IInputPeg
Limón#7879: I can't really check but I think this might be for InputPeg and not IInputPeg
Limón#7879: what file is this in?
PseudoGoose#2841: i had to look it up though
PseudoGoose#2841: ooh that's a good reference
Dragon Lord#6944: ~~Wait, this isn't the channel i though it was... should I move/remove this?~~
Dragon Lord#6944: sorry, your 'first message' message made me think of that
Dragon Lord#6944: props to any computing history buff who gets that
Dragon Lord#6944: first message i'm going to send when testing communication hardware will probably be `lo`
Flampt#3906: Actually nevermind it's not what I needed
Flampt#3906: LogicComponent
Flampt#3906: First message
GHXX#9078: which is?
Flampt#3906: its missing the only thing I need ._.
Flampt#3906: that's all I could find
Flampt#3906: 
Flampt#3906: 
Flampt#3906: is the github CS-Modding thing wrong?
Flampt#3906: in the placing rules, what are these: offsetDimensions and offsetScale ?
Dragon Lord#6944: there was some memory loss from that time, but I was all there
Dragon Lord#6944: as soon as I came up I was lucid an talking to my mother (whom i made promise to record my high self) and was just doing investigations as to my cognitive abilities. I felt no degredation in cognition but some pretty marked reductions in motor skills.
jackson535#1361: drugs!!124650897
jackson535#1361: when I had my wisdom teeth removed, I said "this is better than christmas"
jackson535#1361: lol
Nik#1011: it's funny I didn't think I was high until I wasn't high anymore and then I realized I was really fucking high
Nik#1011: yes quadruple impacted teeth here as well
Dragon Lord#6944: idk what they gave you, but holy shit
Dragon Lord#6944: i was lucid directly after surgery, and all four of mine were bone impacted...
Nik#1011: interesting. for me it was like 2 days lol. I was completely anesthetized and asleep through the surgery (I was unlucky and needed a fairly invasive removal)
HuntaBadday#3556: I will update
HuntaBadday#3556: Nice
HuntaBadday#3556: Ooo
cheese3660#8641: <@!625413443541008434> I updated my mod ... so you should update it on your server
cheese3660#8641: Resizable seven segment and hex displays are done uwu
cheese3660#8641: Too big?
cheese3660#8641: I'm trying to make a through panel seven segment display, positioning the segments is *fun*
Flampt#3906: Once I position two pegs right, ussually the rest is easy
Flampt#3906: Oh yeah
cheese3660#8641: Getting prefab positions *just* right is fun
GHXX#9078: if its the tool i am thinking about, its not about how it looks exactly, its about the pinlayout and whatnot
Flampt#3906: It shows you how a component would look but it looks different in LW
Ecconia#4929: No, after they are removed one becomes dumb, cause lost wisdom. Have this problem too. <[newline]> (But in Germany the drug is gone fully after 3 hours, so brain can do thinking. Just only had one hand cause was holding the cooling pack with the other)
GHXX#9078: for me it wasnt too bad, but i wasnt drugged up badly, only my mouth felt numb
cheese3660#8641: My gods
PseudoGoose#2841: after my wisdom teeth surgery, i tried to write assembly and had to completely redo it
PseudoGoose#2841: trust me, it will be funny seeing what you did the next day
PseudoGoose#2841: or do
PseudoGoose#2841: DO NOT
cheese3660#8641: Whats wrong with it?
cheese3660#8641: Should I work on mods, just got wisdom teeth removed and am totally not drugged
Flampt#3906: Its literally called Component Designer, thats the tool
Ecconia#4929: Not sure which tool that is, but do not call something trash (That's mean to the devs). <[newline]> Instead use constructive critisim.
Flampt#3906: and restarting logic world every time
Flampt#3906: I'm changing succ values by hand
Flampt#3906: I'm not using it anymore
Flampt#3906: but the one called that way
GHXX#9078: also if something is trash, dont use it...
Flampt#3906: not official
GHXX#9078: what? there is no official component designer tool.
Flampt#3906: I mean it's good but its wrong
Flampt#3906: the component designer tool is trash
GHXX#9078: yes, you can rescale them iirc
Flampt#3906: can the output peg have a specified length when making a component?
cheese3660#8641: The only thing would be doing th requests and such
Flampt#3906: Ight
cheese3660#8641: No I just instantiate it in my client mod ... just need to generate it dynamically
Flampt#3906: How can you inject it? The harmony thing?
Flampt#3906: yes yes..
Jimmy#8080: see the pinned message
cheese3660#8641: So wait ... what if I inject a menu into the scene upon my mods load, and add an on component click interface method to my components that display this menu?
cheese3660#8641: And gates are specifically whitelisted via the EditAndGateMenus GetTextIDsOfComponentTypesThatCanBeEdited() method
Flampt#3906: but you would still have the color changer?
Flampt#3906: ok
Ecconia#4929: For the display you only have to let the component data implement an interface. <[newline]> That works differently for AND gates. (They must be whitelisted somewhere)
Flampt#3906: or is it different since its not an output
Flampt#3906: well using that logic can't you make it think its an AND gate?
cheese3660#8641: Wait ... yeah shit that works
Flampt#3906: I'll just make separate components
Ecconia#4929: Commandz
Flampt#3906: I'll just not use the menu
Flampt#3906: yeah
Ecconia#4929: But that comes with storing an additional integer, and having the possibility to change the color presets....
Flampt#3906: <:thenking:446109302369812490>
Ecconia#4929: Bruh, one way to change inputs is to make the component think its a display. Because the display edit menu has an input peg amount slider. Derp.
Flampt#3906: *ahem* *Jimmy..*
Flampt#3906: would've been nice if you could do it without moddifying the dll
Flampt#3906: ok
cheese3660#8641: LogicWorld.UI
Flampt#3906: <:thenking:446109302369812490>
Flampt#3906: where is that
Flampt#3906: andd
cheese3660#8641: The EditAndGateMenu class
Flampt#3906: where did you find that
cheese3660#8641: specifically over this method in it <[newline]> ``` <[newline]> protected override IEnumerable<string> GetTextIDsOfComponentTypesThatCanBeEdited() <[newline]>         { <[newline]>             yield return "MHG.AndGate"; <[newline]>             yield break; <[newline]>         } <[newline]> ```
cheese3660#8641: The and gate menu is encoded into the scene and is specific to the and gate, the only way I can think of to get it to work for other components is with a harmony patch
Flampt#3906: oh
cheese3660#8641: I have an idea for a workaround though which I might explore
cheese3660#8641: it does not allow you to select a number of pins
cheese3660#8641: No, it actually doesn't
Ecconia#4929: Yeah you need to implement some interface, not sure which or where. <[newline]> Sometimes there are annoying side effects. <[newline]> Just do what the AND gate does.
Flampt#3906: the AND gate also does that
Flampt#3906: doesn't your mod do that
Flampt#3906: how not
cheese3660#8641: Last I checked
cheese3660#8641: That's not feasible yet using the x menu to choose the amount of pins
Flampt#3906: <@!299685147220115457> I used your mod to figure it out but it's just not working, do you maybe know the issue?
Flampt#3906: any idea? anyone?
Flampt#3906: no errors
Flampt#3906: like clicking x
Flampt#3906: it loads the world, I place the component but the edit thing is disabled
Ecconia#4929: Prolly the error. <[newline]> Does it compile? Does it load worlds? <[newline]> What is the problem?
Flampt#3906: not sure what I missed
Flampt#3906: ```cs <[newline]> public abstract int dataSize { get; } <[newline]> private static Color24 blockColor = new Color24(3, 169, 252); <[newline]> public override PrefabVariantIdentifier GetDefaultComponentVariant() <[newline]> { <[newline]>     return new PrefabVariantIdentifier(dataSize, 1); <[newline]> } <[newline]> public override ComponentVariant GenerateVariant(PrefabVariantIdentifier identifier) <[newline]> { <[newline]>     PlacingRules placingRules = new PlacingRules(); <[newline]>     placingRules.AllowFineRotation = false; <[newline]>     var prefabBlock = new Block <[newline]>     { <[newline]>         RawColor = BundlerPrefabBase.blockColor <[newline]>     }; <[newline]>     List<ComponentOutput> outputs = new List<ComponentOutput>(); <[newline]>     float current_width = (float)dataSize/2f; <[newline]>     outputs.Add(new ComponentOutput <[newline]>     { <[newline]>         Position = new Vector3(-0.25f, 0f, 0f), <[newline]>         Rotation = new Vector3(0f, 0f, 0f), <[newline]>     }); <[newline]>     List<ComponentInput> inputs = new List<ComponentInput>(); <[newline]>     inputs.Add(new ComponentInput <[newline]>     { <[newline]>         Position = new Vector3(0.25f, 0.25f, -0.2f), <[newline]>         Rotation = new Vector3(0f, 0f, 270f), <[newline]>         Length = 0.4f <[newline]>     }); <[newline]>     inputs.Add(new ComponentInput <[newline]>     { <[newline]>         Position = new Vector3(0.25f, 0.25f, 0.2f), <[newline]>         Rotation = new Vector3(0f, 0f, 270f), <[newline]>         Length = 0.4f <[newline]>     }); <[newline]>     prefabBlock.Scale = new Vector3(0.5f, 0.5f, current_width); <[newline]>     prefabBlock.Position = new Vector3(0f, 0f, 0f); <[newline]>     placingRules.GridPlacingDimensions = new Vector2Int((int)current_width, 2); <[newline]>     return new ComponentVariant <[newline]>     { <[newline]>         VariantPlacingRules = placingRules, <[newline]>         VariantPrefab = new Prefab <[newline]>         { <[newline]>             Blocks = new Block[] { prefabBlock }, <[newline]>             Outputs = outputs.ToArray(), <[newline]>             Inputs = inputs.ToArray() <[newline]>         } <[newline]>     }; <[newline]> } <[newline]> ```
Flampt#3906: current code:
Flampt#3906: I need to be like the and gate
Ecconia#4929: `PrefabVariantIdentifier` is, if you have a component with variable input/output amount. Then this generates the model, just like in the `SUCC` file, just with code. <[newline]> Or you have fixed peg amount, but are just too lazy to use `SUCC` (like me).
Flampt#3906: if so I can't get it to work
Ecconia#4929: Normally I only need `trace` for the compiler on game-start. Afterwards I type `loglevel information` and `clear` in console.
Flampt#3906: developing
Flampt#3906: I am
Ecconia#4929: It will spam your log folder though. If you are not developing, you should turn the loglevel to default anyway.
Flampt#3906: `PrefabVariantIdentifier` is this used for like editing a component?
Flampt#3906: its fine ig
Flampt#3906: yeah ik but then I don't see the the errors
Ecconia#4929: Or turning off anything that blinks and stop moving.
Ecconia#4929: Lowering the log-level to not "trace".
Flampt#3906: `| TRACE | [Lidgren network client] Got message Data` how do I get rid of this thing spamming the console
NGeorge#5042: +With Buffer One-Way power its kinda good
NGeorge#5042: 
NGeorge#5042: Also the receiver is useless since the transmitter if powered one of them the other transmitter does the same.
NGeorge#5042: but it doesn't.
NGeorge#5042: This one should be turned 1 right?
NGeorge#5042: imma make another world
NGeorge#5042: kind of
NGeorge#5042: in images yes in text No
Limón#7879: can you elaborate?
Limón#7879: that shouldn't be happening
NGeorge#5042: Yoooo `T-Latch` is soo GOOD
Flampt#3906: is that possible? I need it to set an array size
Flampt#3906: so I have a component prefab and it has a variable called dataSize, now in the LogicComponent object, I want to get that variable somehow
NGeorge#5042: yes but if i do something wrong i need to reload the world...
Limón#7879: did it work after what cheese suggested
cheese3660#8641: I *think* its to signify that it has data that is persistent between reloads of the world ... idk tho
Flampt#3906: what does `HasPersistentValues`
Flampt#3906: ok
cheese3660#8641: Should only really use it if you use large amounts of data
cheese3660#8641: For storing persistent data of your components without using logic worlds builtin data management interface
BitorBit#6268: does it take some time to load logic world with mods?
Flampt#3906: <@!299685147220115457> you used it in your mod
Flampt#3906: what are these used for? `SerializeCustomData` and `DeserializeData`
cheese3660#8641: .
cheese3660#8641: Yep
Flampt#3906: I figured out why I got that error if anyone need the info some day, I didn't have a ClientMod object
cheese3660#8641: try connecting it to the pin above
cheese3660#8641: You're setting the address, not the data
NGeorge#5042: Left side is the transmitter and the right one is receiver
NGeorge#5042: I have everything set-up and it doesn't want to turn on
NGeorge#5042: Wireless Mod is BROKEN
BitorBit#6268: where is modded logic mod
cheese3660#8641: The code for the inversion is already there actually just need to fix it
cheese3660#8641: Nope, came up with it organically thinking of a way to have highlighting
HuntaBadday#3556: ```- 8 bit: ASCII character, the top bit is going to be used to invert the character on the display in a future version``` <[newline]> Commodore 64 reference?
HuntaBadday#3556: Sure
cheese3660#8641: Should I also make an RTC?
cheese3660#8641: Thats part of my plans
HuntaBadday#3556: Keyboard that outputs ascii codes
Ecconia#4929: Keys with custom labels, cause I need them <[newline]> (jk, cause it's an annoying one)
cheese3660#8641: Class names be like <[newline]> ``` <[newline]> ThroughPanelHexDisplayVariantInfo <[newline]> ```
cheese3660#8641: because that may be hella useful
cheese3660#8641: Also might try making my seven seg and hex displays through panel and resizeable
cheese3660#8641: Anyone have any other suggestions for stuff I should make?
cheese3660#8641: I'll think about this later, I have ideas now though
cheese3660#8641: Ohh, I see how that works
Jimmy#8080: Override the `GenerateDecorations()` method in your ClientCode
Jimmy#8080: It should be doable
cheese3660#8641: Ohh, keys use custom child gameobjects...something not supported by LW mods for now...
cheese3660#8641: And update has been pusehd
HuntaBadday#3556: Ok
cheese3660#8641: (But still loads files from server end)
cheese3660#8641: btw jsyk <@!625413443541008434> the load command is being renamed to loadram, and its gonna also be on client side as well
cheese3660#8641: So now if I set up stuff correctly with some control wires I could make this a proper tty
HuntaBadday#3556: nice
cheese3660#8641: Right
cheese3660#8641: Left
cheese3660#8641: Downwards/upwards scrolling
cheese3660#8641: It took some effort
cheese3660#8641: Thank you
HuntaBadday#3556: Really helps with programing my cpu
HuntaBadday#3556: Your mod is awesome
HuntaBadday#3556: ye
cheese3660#8641: Used with the file loading from my ram mod I can get text on the screen hella easily lol
Justin#2534: Super neat
cheese3660#8641: But other than that weird thing...I think every function works except for the display scrolling so far
HuntaBadday#3556: weird
cheese3660#8641: Only problem is the game crashes on exit and I have no clue why
HuntaBadday#3556: I like it
HuntaBadday#3556: ooo
cheese3660#8641: 
HuntaBadday#3556: ooo
cheese3660#8641: Anyways, progress on recolorable text display!
HuntaBadday#3556: Ye
cheese3660#8641: Though it might not have stuff such as ctrl and such to begin with at least
cheese3660#8641: And make it look cool at that
cheese3660#8641: I do have an idea of how to do it though
cheese3660#8641: yee
HuntaBadday#3556: And will output the ascii codes
HuntaBadday#3556: Yeah
cheese3660#8641: y'know what'd be great ... but needs to be implemented well to work ... a full keyboard component
cheese3660#8641: Yee
HuntaBadday#3556: And with this mod I can make an operating system for my computer without having to manually input the machine code
HuntaBadday#3556: Text is awesome
HuntaBadday#3556: Nice
cheese3660#8641: progress uwu (I know how to fix the weird marks)
cheese3660#8641: mhm
HuntaBadday#3556: So low-byte high-byte order?
cheese3660#8641: Basically, it reads the file given to it into an array of bytes, and searches for all ram components with the 3rd top pin set (dw, this isn't too slow as it keeps an array of all ram components anyways) and runs a function that loads the byte data into memory in a little endian order
cheese3660#8641: Little endian
HuntaBadday#3556: <@!299685147220115457> When I do the load command, how does it load? What is the byte order?
Ecconia#4929: Ever unpacked an obfuscated jar file on windows? <[newline]> Contains A.clase and a.class, windows will yoink one of the two.
Dragon Lord#6944: I made a throwaway microsoft account because I like minecraft too much to let my hatred of microsoft get in the way of playing it
GHXX#9078: same, if you get any numbers lmk
PseudoGoose#2841: but i just want to hold out for as long as possible, i'd be curious to see how many are still left at the end
PseudoGoose#2841: i mean, i already use an ms account for forza and sea of thieves so ¯\_(ツ)_/¯
GHXX#9078: windows disappoints me soo much. Only thing that keeps me really is all the programs that have no linux port
GHXX#9078: i just made a brand new ms account xD
PseudoGoose#2841: i still haven't migrated mine 🙃
HuntaBadday#3556: Something I hate about windows is when you try to change the case of a character in the name of a file it doesn't update
GHXX#9078: ||at least microsoft moved mc to ms accounts 🙃 ||
cheese3660#8641: GOSH DARN YOU WINDOWS CASE INSENSITIVITY ✊
HuntaBadday#3556: Gud
cheese3660#8641: Will be pushed in next update
GHXX#9078: xD
HuntaBadday#3556: Yep
cheese3660#8641: really...
GHXX#9078: even with same words
cheese3660#8641: Wait .. really
GHXX#9078: was literally typing the same thing
GHXX#9078: ^^
HuntaBadday#3556: <@!299685147220115457> Change Manifest.succ to manifest.succ
HuntaBadday#3556: It works!
HuntaBadday#3556: I will change it
PseudoGoose#2841: ohhh yeah
HuntaBadday#3556: knowing linux cares about it
GHXX#9078: maybe try renaming the file to lowercase
PseudoGoose#2841: windoes doesn't care lol
GHXX#9078: although manifest.succ should lowercase afaik
GHXX#9078: <:thonk:808797080713035787> that looks fine
HuntaBadday#3556: 
GHXX#9078: in the screenshot
GHXX#9078: whats inside cheeseutil?
HuntaBadday#3556: Because it works in windows
HuntaBadday#3556: It might be because the server is linux
HuntaBadday#3556: 
cheese3660#8641: Can I have a screenshot of your gamedata folder too
HuntaBadday#3556: Could it be that my server is linux based?
cheese3660#8641: It works perfectly fine for me <[newline]> ``` <[newline]> Welcome to the Logic World server! <[newline]>                                   Running server v0.90.3 <[newline]>  <[newline]> [Server] Running in unverified mode, player identities will NOT be verified. To turn on verified mode, edit config.succ.[Server] Loading mods... <[newline]> [Mod manager] Loaded mod 'Base game' with 31 components, no logic scripts and no hooks <[newline]> [Cheese Util Mod] Cheese Util Mod - Server Loaded <[newline]> [Mod manager] Loaded mod 'Cheese Util Mod' with 22 components, no logic scripts and no hooks <[newline]> [Server] Loading save 'World'... <[newline]> [Save manager] No save exists called World - creating one now <[newline]> [Save manager] Loaded world World in 0.0s - save was 359 B, contained 0 components and 0 wires <[newline]> [Server] Starting the simulation (30 TPS, max timestep 1s)... <[newline]> [Server] Starting the server (60 target TPS)... <[newline]> [Lidgren network server] Listening on 43531 using protocol IPv6_DualStack <[newline]> [Network manager] Listening on 43531 <[newline]> [Simulation service] Simulation will be paused when no players are connected. This can be disabled by editing config.succ. <[newline]>  <[newline]> Server initialized. Clients can now connect. Type help for a list of commands. <[newline]> ```
HuntaBadday#3556: Awesome
cheese3660#8641: sorry for the delay, but im finally able to check this
HuntaBadday#3556: Understandable
HuntaBadday#3556: Ah
cheese3660#8641: Not home yet unfort
HuntaBadday#3556: <@!299685147220115457> You able to find why your mod doesn't work on servers?
cheese3660#8641: There are a few in <#910673109164638239>
Voodoo8648#2429: Hi, Where can I download mods?
Ecconia#4929: So yeah, sounds possible to me. But cloning a key component and kind of making it customizable, sounds tough. <[newline]> (I just messed with the DLL) <[newline]> [One could actually use a command to set the content of a custom key, that prevents messing with the GUI framework]. <[newline]> I am fine with just being able to set a custom string, or fall back to default, if not custom text provided. <[newline]> {Kind of weird that Y and Z are correctly positioned. But like almost all yellow keys are wrong. Whatcha doing Unity?}
Ecconia#4929: I want mods: <[newline]>  - Chat encryption. <[newline]>  - Key custom text and option to print up to 6 characters in a grid. <[newline]> (Uff, these might as well be LW suggestions)
HuntaBadday#3556: Ok
cheese3660#8641: I'll check that when I get home, that doesn't make sense...
HuntaBadday#3556: <@!299685147220115457> Your mod doesn't work on servers, it says "Invalid mod"
StartForKiller#0001: anyways, beinex can handle generic methods patching, i did some ones a log time ago
StartForKiller#0001: https://docs.bepinex.dev/master/api/index.html
StartForKiller#0001: well, it's a forked version of harmony, it's called harmonyx and bepinex add some patches for loading dlls and more
PseudoGoose#2841: dotPeek is free if you download it standalone
Ecconia#4929: If you can get it, give it a try 🙂 (I am using Rider, but I assume the decompiler is the same) <[newline]> I only found one compilation issue with it so far (in the servers main class). <[newline]> And if I mod a DLL using DNSpy, I often copy paste the DotPeek class into it 😄
Flampt#3906: You mean dotPeak? It seems free
Ecconia#4929: DNSpy does this whenever it encounters inner methods. <[newline]> The worst is that sometimes it forgets to add the inner method bodies. <[newline]> Personally I recommend the Decompiler from JetBrains, but it might be difficult to obtain, if you do not have a school/university email, or too much money.
GHXX#9078: and when you dont want to use your mod you can just move the symlink out of your gamedata folder :)
GHXX#9078: needs admin perms but is worth it
GHXX#9078: yeah
cheese3660#8641: on windows?
GHXX#9078: instead of copying over you could use a (hard) symlink to your mod source folder and then launch the game in the post buildstep :)
GHXX#9078: consider using ilspy if you are on windows
GHXX#9078: yeah the decompiler messed up; i dont think this is even valid syntactically
cheese3660#8641: Literally just deletes old mod in LW folder, then copies mod over, then runs LW
cheese3660#8641: Made a custom build step in VS for my mod uwu
cheese3660#8641: I.e. the files called CheeseUtil[Server/Client].cs in my code
cheese3660#8641: The client or server mod type I think
Flampt#3906: anyone else know what this is?
Flampt#3906: idk
Ecconia#4929: Never had that, what is a mod type?
Flampt#3906: how do I fix this?
Flampt#3906: `ERROR | [SceneAndNetworkManager] going to error screen with message: "mod 'WireBundle' has no mod types"`
Flampt#3906: oh yep now it shows a lot of stuff
Ecconia#4929: Yes
Flampt#3906: like this?
Ecconia#4929: Edit: `licc/<howeverTheOnlyFileHereIsCalled>` add `loglevel "trace"`
Flampt#3906: yes this is very useful
Ecconia#4929: Heh, why? Just a look in the logs, and you know why its black 🙂 (Aka compilation error)
Flampt#3906: I hate this screen
Flampt#3906: ok
Moojuiceman#5661: https://github.com/cheese3660/CheeseUtilMod
Moojuiceman#5661: It does that when there's a local class definition, more of a "temporary type" if you will. There's no formal definition so it doesn't have a class you can look at. Check out Cheese's mod though, she has/had a working dynamic input
Flampt#3906: Did the decompiler read it wrong or something?
Flampt#3906: so I'm trying to make a component that can have a dynamic input count and I tried to use the andgate code but this part doesn't seem right
cheese3660#8641: I PUT A F\*\*KING INFINITE LOOP IN MY PREFAB CODE
cheese3660#8641: Its ... my prefab code thats the issue?
cheese3660#8641: sure\
Ecconia#4929: Voice chat?
cheese3660#8641: But where would I even do that, none of the Initialize functions are called yet ... no logs I've put there have been executed ... so I have no clue where to put my debug prints
Ecconia#4929: Print stuff to logger for debugging. Don't use LConsole since that does not end up in the logs #designChoices
cheese3660#8641: This is literal pain tho
Ecconia#4929: The best reason for freezing without any feedback is stackoverflows or in general loops. Idk why, but LW can loop functions without throwing stackoverflow exceptions.
cheese3660#8641: It legitimately looks normal
Ecconia#4929: It just freezes without any feedback?
cheese3660#8641: There was no compilation errors...
Ecconia#4929: Technically you could make a mod with priority 100 which gets loaded as the first one, and then sets the log-level to trace. And once the compilation is done it resets the loglevel to whatever it was before. <[newline]> Sounds good, I want that.
cheese3660#8641: Anyways ... client logs
Ecconia#4929: LOL 😄
cheese3660#8641: ~~editing the dll~~
Ecconia#4929: How did you change the loglevel on the server?
cheese3660#8641: Thank yee
Ecconia#4929: `loglevel "trace"` <- Quotations matter, for whatever reason. <[newline]> Same as server actually.
cheese3660#8641: Because I did it the wrong way
Ecconia#4929: Lol how does that crash the game 😄 Never had that
cheese3660#8641: setting the log level to trace
Ecconia#4929: "do it" => do debugging?
cheese3660#8641: (Only on server side, I forgot how to do it on client side the legit way that doesn't crash the game on launch
cheese3660#8641: No
Ecconia#4929: But that's the server log, does that have an issue? <[newline]> (And yes trace is enabled, yay)
cheese3660#8641: (skipping the mod compilation because that seems to go alright
cheese3660#8641: Heres what my logs look like though
Ecconia#4929: Also if you have the "go to error screen with exception" thingy, you can get my Debug mod to have that print the stacktraces to logs.
Ecconia#4929: Oh wait, no it always freezes if any exception happened actually.
Ecconia#4929: How, even never had that... I assume you have your log-level on `trace`, else you do not get compiler output.
cheese3660#8641: How do you mean?
Vinyl Boot Maven of Shade#1858: Oh, I think it was one of the enumerations. I had to use an int on serverside instead.
Vinyl Boot Maven of Shade#1858: Yea
cheese3660#8641: That's fair, it has been a while since you worked on that
Vinyl Boot Maven of Shade#1858: It's hard to remember.
Vinyl Boot Maven of Shade#1858: Or a clientside interface in the serverside data was causing it.
Vinyl Boot Maven of Shade#1858: I think I tried changing what was in component data. And something wasn't available to the client or something.
cheese3660#8641: And I'm mostly copying what you did and modifying it
cheese3660#8641: That's what I'm assuming ... but I just can't figure out whats wrong
Vinyl Boot Maven of Shade#1858: I'm trying to remember. I think it happened mostly when I was working on server/client comunication.
cheese3660#8641: Could I ask what you did to fix it?
Vinyl Boot Maven of Shade#1858: Yea
cheese3660#8641: <@!377717131556552708> have you had similar problems to this when making your display mod?
cheese3660#8641: Should I add the ability to save ram to a file as well?
cheese3660#8641: And the logs aren't helpful in any meaningful way
cheese3660#8641: The most annoying crashes in modding are crashes where like LW just freezes at the world load screen
cheese3660#8641: I added file loading to my RAM!
Ecconia#4929: But else it sounds too powerful for my usecase but also not helpful, since it is still only Harmony.
Ecconia#4929: I wonder how they fix the console which Unity breaks. <[newline]> Sounds like a good thing to investigate.
Ecconia#4929: Sounds good, gonna have a look at it tomorrow. <[newline]> I got at the limit of harmony when trying to patch generic methods.
StartForKiller#0001: that game has a poor network protocol security(and a bad network protocol in general, 2000 packets per second sometimes, consuming network and a lot of cpu)
StartForKiller#0001: i have experience doing harmony/bepinex plugins, i came from valheim, and created some security integrations for my server patching the entire network loop and hooking my analisys methods(ej: logging chests loot and logging breaked structures to prevent people to break specific things)
StartForKiller#0001: it works on any unity game
StartForKiller#0001: https://docs.bepinex.dev/articles/dev_guide/plugin_tutorial/index.html
StartForKiller#0001: but makes more easy some things
StartForKiller#0001: it uses harmony anyways (a modified fork, harmonyx: allow interop with MonoMod.RuntimeDetour)
StartForKiller#0001: https://github.com/BepInEx/BepInEx
StartForKiller#0001: try bepinex instead
Ecconia#4929: Thanks, will do when developing next time 🙂
Jimmy#8080: I think this is necessary because the C# runtime (which is killed by Environment.Exit) is different from the Unity runtime
Jimmy#8080: Use `UnityEngine.Application.Quit()`
GHXX#9078: surprising, that call by default should exit the program and return zero as an exit code.
DADp#7461: 🙂
DADp#7461: makes sense
Ecconia#4929: Oh LogicWorld/Unity does not like when I call `Environment.Exit(0);` 😄 ||Would have expected it to turn off, but it just freezes.||
Flampt#3906: Yep
Ecconia#4929: It is a thread, should be unarchived now, maybe that helps.
Flampt#3906: <:think:891661888897843200>
Flampt#3906: It says deleted-channel
Ecconia#4929: Btw, if you want to read some random stuff about this idea (since many had it), this might give you ideas: <#920991003756863508>
Flampt#3906: Not sure if it's possible to get the first component by a line connecting them
Flampt#3906: I have an idea to make a component that takes n inputs(default 8) and compress it to one line. A second component would decompress that into n outputs
Ecconia#4929: Good luck was a good one 😄 <[newline]> I tried like patching the method I intended, but that does not work, because it is a generic method. Spend some time here, but learned the truth... <[newline]> So I said "drop that" and with some failure at `GameManager` I am now having my hook at `GameNetwork.Initialize()` since that gets called, right after LW is fully done with Trigger and Context processing. <[newline]> What a journey just to get my code hooked. But now it is time for reflection and sorting triggers. Yay~
Jimmy#8080: Good luck with the harmony stuff. Custom mod triggers/contexts will be properly supported in the future, sorry it's not ready yet.
Ecconia#4929: I looked into it. <[newline]> So what I want, is to add a new trigger - for my new function. <[newline]> But for LogicWorld to use this new trigger, it must be in specific MHG contexts. <[newline]> Now, FancyInput reloads all the context data, whenever someone registers a new namespace. <[newline]> In this reload, it gets all the context data, but shoves them into a dictionary, this process deletes all duplicates. <[newline]> That means defining a context twice, does only bring destruction. (Could I attack a MHG namespace this way, as a mod?) <[newline]> But I also cannot overwrite nor extend the official MHG context. I must inject my trigger into the official MHG context. And the API does not allow that. <[newline]>  <[newline]> So my current low-effort idea is, to use Harmony, to hook myself into the context-data loading process. <[newline]> And once that is done, I gonna get all triggers from my context, and shove it into the MHG context. <[newline]> I have to use Harmony, and not just Reflection, because another mod could at any time regenerate the context data. <[newline]>  <[newline]> FancyInput is a very nice framework, because of its capabilities, but this is one lacking aspect. <[newline]> I am also not sure, if it is really required to load the context data over and over again, and not just the newly added context values. <[newline]> (Plugin priority should take care of order). <[newline]>  <[newline]> - I will now do a test, to see if my words are actually true. Just looked at code for this text. <[newline]> -> Apparently the dictionary does not like adding an existing key. <[newline]> I am getting an exception which at this point does not make sense. It fails iterating over the Enum class, it should not.
GHXX#9078: btw, <@154964593397989376> any news on the docs?
Ecconia#4929: I tried that, gonna look into it more and report back. My last resort will be to use Harmony to patch the trigger getter.
Jimmy#8080: In the meantime, <@!151293812675706880> , add a `FancyInput/ContextMetadata.succ` file to your mod. Use the MHG one as a template. This file is used to assign triggers to contexts.
Jimmy#8080: FancyInput is a work in progress. The API will change significantly before it's officially ready for mods.
Ecconia#4929: Oh boy, my level of annoyed fighting this API really just rose a notch or **10**!! <[newline]> `InputTrigger inputTrigger = CustomInput.WhichIsDown<Context>(Context.FirstPersonInteraction);` <[newline]> LogicWorld has this absolutely nasty habit of only checking for LogicWorld contexts. <[newline]> (A contaxt is a group of InputTriggers, aka key bindings - <:MHG:568324671477383178> registers a lot of them with prefix `MHG`, and I cannot add something to their context. Because `FancyInput` is either not fancy enough, or I am stupid). <[newline]> This means, that LW has dedicated contexts for some purpose, example: Interaction with world and BuildingOperation (delete rotate...)) <[newline]> And I just want to write my own BuildingOperation. But like this game tries so hard to stop me from not using Harmony. <[newline]> I am about to modify `CustomInput.WhichIsDown` so that it looks at the context's of all mods, this is just madness. <[newline]> If I try to add a custom trigger to a <:MHG:568324671477383178> context, it tells me that it is already there. Because it assumes I want to create it - NOPE. <[newline]>  <[newline]> But now I am really fed up. I gonna go ice skating. Bye. <[newline]>  <[newline]> Jimmy if you read this, please tell me how to add a custom trigger to a <:MHG:568324671477383178> context. Or make `FancyInput` more fancy.
Ecconia#4929: What a ride, but here it is, my first added key binding.
Ecconia#4929: For this specific case it would be better, to split properties to edit into different interfaces, which are actually implemented by the component code and not by the component data. And having an editor which can modulary support different set of features - I falsely assume that this was already the case.
Nik#1011: I think even if the issues with display types are properly fixed, examples like that will prolly always exist 🤔
Nik#1011: good information tho.
Nik#1011: I feel like I had a hunch this exact thing would happen with using an API instead of breaking the game open completely
Ecconia#4929: <@!859806257774723102> Hey, the <#910673109164638239> is archived 🙂
Ecconia#4929: I just found a real good example where the modding API destroys my ideas so so so hard: <[newline]> What I want: <[newline]>    A custom display with fixed input count. But with custom configuration. <[newline]> How LogicWorld denies my intention: <[newline]>  - To allow a component to change its color it must be a Display  so the data must implement `IDisplayData`, that however is only available in the Client-Libraries and thus the server denies that - I have to copy my data structure and let only the client copy implement this interface. (Actually works). <[newline]>  - All Displays (things implementing `IDisplayData`) in LogicWorld for some reasons also can have their input count edited, which breaks my component hard. <[newline]> Whatever LogicWorld just froze as soon as the edit window opened.
Ecconia#4929: Hmm another thing which I think is a problem with the current API, is that the API does not tell you which custom data field changed. <[newline]> You only get: "Btw your data changed, figure out the rest". <[newline]> For example each display has to store its previous size and display configuration. And the size only to check if it has changed. <[newline]> Waste of runtime memory. If the API would be like: "Hey, I am about to switch your current data with this data, please update." we had less of this overhead. And only a temporary duplicate of the state. <[newline]>  <[newline]> So this is another request I would have for the modding-update. <[newline]>  <[newline]> (Even better would be, if one could [using annotations] define methods to be called, if a certain field has changed.)
GHXX#9078: i think mods should have dependencies such as <[newline]> LoadAfter: (if any of the mods are installed, this mod gets loaded after them) <[newline]> - mod 1 <[newline]> - mod 2 <[newline]>  <[newline]> RequireAfter (like above, but the listed mods need to be installed, crash otherwise) <[newline]> - mod 1 <[newline]> - mod 2 <[newline]>  <[newline]> in any case a cyclic dependency should lead to a crash
Ecconia#4929: <@!437296986593427458> <@!487609645549223941> <[newline]> So I did look into the issue with `Path is null`, which happened whenever Gnogs and my mods had been deployed. <[newline]> And it got worse for me. <[newline]>  <[newline]> The root is quite easy, as soon as a single mod which uses Harmony is loaded, Harmony creates an assembly which is not marked as dynamic (hence LW does not filter it). This assembly `HarmonySharedState` however and of course has no location, because it was generated and injected. Which means that when LogicWorld intends to collect the meta-data for the compiler it breaks. <[newline]>  <[newline]> <@!154964593397989376> this means, mods can inject assemblies which have no `Location` (and are not dynamic), which the LogicWorld compiler crashes on. <[newline]> (I wrote 2 solution suggestions in the issue - I expect this bug to be extincted in 0.91 *grin*). <[newline]>  <[newline]> Now for us modders there is actually only two solutions: <[newline]> - Modifying the compiler, to skip assemblies which have no location (level: easy). <[newline]> ^I gonna do that. (Added `!String.IsNullOrEmpty(o.Location)` to the filter) <[newline]> - Only ever compile one harmony mod, and give that harmony mod while developing priority 98, so that it compiles first. <[newline]>  <[newline]> But for everyone else this means: Only compile (even Harmony mods) while no other Harmony mod is in the `GameData` folder. <[newline]> Until the LW compiler is fixed. <[newline]>  <[newline]> Btw the ticket is this one: <https://logicworld.net/tracker/308> <[newline]> Gonna update it now with the newly learned knowledge. <[newline]>  <[newline]> Oh what bliss. Finally compiling all mods at once! And better: I can now develop with all other mods active! <[newline]> If Jimmy does not mind, I can share the modded `LogicWorld.Modding.Compilation.dll` here. I would delete it as soon as LW fixes it. <[newline]> (If you are a modder and also have this issue, DM me for the patched DLL, community members can be trusted.)
InCrIpTiOn#8028: priority shouldnt really matter otherwise
InCrIpTiOn#8028: I mean, dependencies shouldn't be loaded until they are needed
Ecconia#4929: Well, and there we have the reason why such poor design decisions have been made: <[newline]> `[SceneAndNetworkManager] going to error screen with message: "Mod RandomDebugCollection depends on lwharmony, but it hasn't been loaded yet. Make sure their priorities are right"` <[newline]> -> Seems that the whole priority system is not thought well. <[newline]> Since the cases "I need something with lower priority" and "Is it okay for my mod to load at any time" are not properly decided/discussed. <[newline]>  <[newline]> Dependencies should ignore the priorities and move things with lower priority to the front. <[newline]> But we lack more situations. This was just one. But this is something we modders should pay attention to when the big modding update comes. <[newline]>  <[newline]> -> Current concept: If you depend on something, your priority MUST be lower. <[newline]> Well also kind of interesting. But who defines which priority is correct. Why must <:MHG:568324671477383178> load (almost) first? <[newline]>  <[newline]> I will set my mods on priority `0` from now on, which I declare as `neutral` means, they do not care what happens before or after them.
Ecconia#4929: But its gets worse, for weird reasons FalsePatterns mods also have very high priorities. <[newline]> I think there is something wrong here. As I think the MHG mod should have rather a priority of 0. <[newline]> Like that's the middle of all priorities. (They go from -100 to 100).
Ecconia#4929: Lol. <[newline]> I was like: Yeah my mod should be loaded before other mods, cause then it helps them. <[newline]> So lets give it a high priority, but not a too high one. Lets go with 90 for now. <[newline]> Nobody with sane mind would use something higher anyway, and if then it is definitely their problem. <[newline]> *Looks at <:MHG:568324671477383178> base mod: 99*
Ecconia#4929: I announce my new mod: `SimulationControl` <[newline]> Description (Short):  <[newline]>       Adds the `tps` command, which allows you to `Pause`, `Resume`, `Step` the simulation and ofc **set the simulation speed** (without `server"<command>"`). <[newline]>  <[newline]> You can ofc find it in my GitHub-Mod repository: <[newline]> <https://github.com/Ecconia/Ecconia-LogicWorld-Mods/tree/master/SimulationControl>
Flampt#3906: <:smort:829712632960778272>
Ecconia#4929: (When you got tired of `server "simulation.rate 123"`) <[newline]> => Actually you can resume with `tps <number>`, did not know that. And ofc it also prints error messages.
Flampt#3906: ok
Ecconia#4929: `LogicWorld.ClientCode.dll : LogicWorld.ClientCode.CircuitBoard` it is there
Flampt#3906: yeah
Flampt#3906: it has it
Flampt#3906: ``` <[newline]> CircuitBoard: <[newline]>     column: "Miscellaneous" <[newline]>     category: "Structural" <[newline]>      <[newline]>     # This will be resized appropriately by the clientCode. <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 material: Board <[newline]>                 colliderData: <[newline]>                     type: Box <[newline]>                      <[newline]>     clientCode: LogicWorld.ClientCode.CircuitBoard <[newline]>     placingRules: <[newline]>         allowWorldRotation: false <[newline]> ```
Ecconia#4929: ~~Yes, a board is special and not in that packet. ClientCode only has logic components,~~ a board has no logic. While it does have shared data though. <[newline]> OHH its client code.... second
Flampt#3906: I mean the ClientCode
Flampt#3906: I can't seem to find this `LogicWorld.ClientCode.CircuitBoard` with dnSpy
Ecconia#4929: It is the successor of the `.tung` file format (as written there). <[newline]> Means that it ~~`.tung`~~ got replaced.
Flampt#3906: why does it say ".tung" if I see only .succ and .logicworld ?
Ecconia#4929: It would be quite easy for me to write a tool for save file editing. <[newline]> However when it comes to understanding the save file, I am not able to reconstruct positions/rotations of components relative to each other. <[newline]> Means I cannot get the shape of the world right. <[newline]> Else I would have wrote one or two nice tools by now.
StartForKiller#0001: yeah, a test that i made i changed the way that the code actually behave and the data saved on the component crashed the game, so i actually undo the change remove the component and continue, but it would be useful a tool for removing all the mod components from a save
Ecconia#4929: For sure. Actually removing the whole mod, if none of its components is used anywhere.
StartForKiller#0001: or a component is broken and crash the game
StartForKiller#0001: like when you remove a mod
StartForKiller#0001: it would be cool a tool for deleting invalid entries from save files
Ecconia#4929: Uff Just renamed my component. Now by all means I can not undo it to restore my save.... <[newline]> Its probably faster to just edit the save file :/ <[newline]> No I just fully broke my mod... <[newline]> Ahh okay get it. No documentation sucks.
Ecconia#4929: I made this with code, but here is basically which properties there are:
Flampt#3906: I couldn't find anything in the MHG component succ
Flampt#3906: oh ok
Ecconia#4929: Afaik no. You can modify the length of an input at least. <[newline]> Did not look that much into it though
Flampt#3906: like it's not thin like the input
Flampt#3906: the d latch has a bigger output peg
Flampt#3906: actually it's an output
Ecconia#4929: What do you mean with "wide input"?
Flampt#3906: like the one the D latch has
Flampt#3906: is it possible to use those wide inputs with custom components?
Flampt#3906: lol
Flampt#3906: ok
Ecconia#4929: You can undo the input count and remove it - or start a new save.
Flampt#3906: yeah that makes sense
Flampt#3906: probably
Ecconia#4929: Try loading a new save, if that works your old world does have an older version of your component
Flampt#3906: shi
Flampt#3906: ohh like placed ?
Flampt#3906: not sure if it had an older version
Flampt#3906: I was loading a world yes
Ecconia#4929: Did it happen while you loaded a world, which has an older test version of your component in it?
Flampt#3906: not sure what it means and what I should do to fix it
Flampt#3906: has anyone else gotten this error? `System.Exception: Component of type Numeric ID 31 had the wrong number of inputs - 1, should be 2`
Flampt#3906: ok
Ecconia#4929: Relays and fast_buffers don't do anything with either input. <[newline]> What they do is that they link the two clusters of the pegs. <[newline]> Jimmy named these things "phasic link" or so.
Flampt#3906: except outputting
Flampt#3906: oh but it doesn't do anything with the other one
Ecconia#4929: It has two input pegs. Same as the relay.
Flampt#3906: but how does the fast buffer do it ?
Ecconia#4929: An output peg always has 1 tick delay.
Flampt#3906: yeah.. it didn't really help since it's using two inputs, but I need it to connect an input to **output peg**
Flampt#3906: ok
Ecconia#4929: `Server/Server.dll` In there: `LogicCode.Relay`
Flampt#3906: which file do I need to open with it?
Flampt#3906: k
Ecconia#4929: I use `dnSpy` works for me.
Flampt#3906: what decompiler
Ecconia#4929: *Have a look at the source code of Relays* <[newline]> (Given you have a decompiler at hand)
Flampt#3906: it's just forwarding it
Ecconia#4929: Depends on what it has to do. If it is *conditionally just forwarding signals between two pegs, yes. If you want to modify that signal, no.
Flampt#3906: oh ok
Ecconia#4929: Yes, since the game (and server) compile mods on start.
Flampt#3906: is it possible to make a custom component with zero ticks? like the fast buffer
Flampt#3906: is relaunching the game the only way to reload a mod?
Flampt#3906: ok thanks
Ecconia#4929: Create a language file in `<yourMod>/languages/English/your_components.succ` and put `zipper.ZipperInput : MyEbbicComponentName` there. (wrote this from memory, no gurantee, look at <:MHG:568324671477383178> mod)
Flampt#3906: why can't I change the logicCode? an error occures everytime I remove the "zipper." part
Ecconia#4929: [LINUX] <[newline]> For now this command will grab the latest log print it and keep printing it on console: <[newline]> ```bash <[newline]> tail -f -n +0 $(find logs/log-*[0-9].txt | sort -r | head -n 1) <[newline]> ```(I dumped it into a `latest.log` file which I can execute, lol)
Erikbot#6368: faster than light travel is the only acceptable way
Limón#7879: this is the best message ever ❤ 💕
Jimmy#8080: This is intended behavior but I'm probably going to change it before the 0.91 release.
Ecconia#4929: No judge, but <@!154964593397989376> I am not sure if you want to enforce spacing on lines without other content... <[newline]> These things are invisible and a perfect error source. Some funky editors might even remove spaces without something behind. <[newline]> Not sure if this is intended or an error too.
Ecconia#4929: Btw does anyone know why LogicWorld prints nothing to console?
Ecconia#4929: OKAY my suggestion above only works for the server!!! <[newline]> Because on the client you will get following bug: <[newline]> `Invalid file structure on line 20 of languages/English/English_settings_graphics.succ: multi-line string lines must all have the same indentation level` <[newline]>  <[newline]> Because: See image. <[newline]>  <[newline]> I downloaded these files as-are directly from Steam. So I didn't break them. But the SUCC definition seems to change with LW 0.91. <[newline]> Well I just looked this up, the Wiki does not (yet) say anything about this in the string section.
Ecconia#4929: Fun fact, it is only and only ever the class name that breaks when I do SUCC stuff. And I do not think that this error message is appropriate. Would expect something like: "Could not resolve/find class 'blablabla'".
Ecconia#4929: Btw, if any of you wants to update SUCC to get better error messages in console on SUCC errors. <[newline]> Use the `netstandard2.0` version. <[newline]> Why? Subtle different: <[newline]>  <[newline]> Old SUCC: `[SceneAndNetworkManager] going to error screen with message: "Error getting data of type LogicWorld.SharedCode.Components.ComponentInfo from node: "` <[newline]> New SUCC: `[SceneAndNetworkManager] going to error screen with message: "Invalid file data on line 33 of MemoryReadOnlyDataFile_e5a89ccf-fa26-4919-9de8-da48ef4a2bdc. Expected data of type System.Type, but couldn't interpret data as that type: Ecconia.FirstDisplay.Client.FirstDisplay"`
Verlio_H#0201: sarah racer the beth strikes back when
Verlio_H#0201: inb4 jimmy makes a networked real-time video game made that uses TCP for networking
Vinyl Boot Maven of Shade#1858: I thought that some things, like special effects that don't affect game state, are sent non reliable for worst case performance reasons. <[newline]> O nvm, I see jimmy said "should be OrderedUnreliable."
GHXX#9078: ||so yeah, seems that effectively tcp wasnt this slow afterall then 😛||
GHXX#9078: but not for important stuff
GHXX#9078: for player positions i'd use udp
Jimmy#8080: I'm talking about player positions specifically
Jimmy#8080: yes of course
GHXX#9078: imagine a missing board or something
GHXX#9078: a missing packet could cause damage
Ecconia#4929: Currently every packet is sent over `OrderedReliable` Channel # 1 (of that type)
GHXX#9078: for build updates for example
GHXX#9078: but reliable seems very important
Jimmy#8080: oh those should be OrderedUnreliable, I guess I forgot to change it
Ecconia#4929: (That means, that soon Jimmy will send other player movements over another channel, which does not have the type `OrderedReliable`)
Jimmy#8080: I am not an expert at networking so I can't answer the specific detailed questions. But I *do* trust the experts, and I follow their advice/best practices.
Jimmy#8080: Not to mention every single other network game programmer. You will not find a networked real-time video game made by experienced professionals that uses TCP for networking.
Ecconia#4929: TCP does a bit more though, like validation bits afaik
Jimmy#8080: I promise you that Michael Lidgren knows what he's doing
GHXX#9078: are you sure this implementation is faster, because from what <@!151293812675706880> saw, its essentially tcp implemented onto udp, and everything is piped through a channel tagged with "reliable, check ordering", so it seems that it would do everything that tcp would do, just in software instead of hardware
BitorBit#6268: gg
Jimmy#8080: Lidgren uses a UDP socket. *TCP* is terrible for games networking because it's slow as balls
Ecconia#4929: I was super confused just now cause of that
GHXX#9078: 😂
Jimmy#8080: oh sorry, I had it backwards haha
GHXX#9078: it specifically uses a single udp port
GHXX#9078: and logicworld uses udp to communicate as far as i could tell?
GHXX#9078: udp is faster than tcp but unreliable
Jimmy#8080: among other reasons
Jimmy#8080: UDP is terrible for games networking because it's slow as balls
Jimmy#8080: The networking is done through the Lidgren library. Lidgren uses a TCP socket, I'm not sure why you think it's UDP.
Ecconia#4929: (at)*Whoever is annoyed that **noclip** does not automatically turn on when you **start flying***, but it turns off, once you stop. <[newline]> Well fools, there was a setting all along! **`MHG.Flying.Secret.AutoEnterNoclipOnStartFlying`** in `settings_master.succ`. <[newline]> But clever you, you knew this and also knew that you get a `StackOverflowException` when using it, hence its worthless. <[newline]>  <[newline]> Fear no more! My latest LogicWorld Mod stops the StackOverflowException from happening. Check out my GitHub repository to get it <#910673109164638239>.
nemerod#0256: file <[newline]> ``` <[newline]> %LogicWorld\setting_master.succ <[newline]> ```
nemerod#0256: you know the game have setting for get the last state and keep with last state, after enter on chair or the noclic state after join the map
Ecconia#4929: Nice! Reflection+Harmony allows me to detect what the old flying and what the new flying state will be. <[newline]> And it lets me stop changing the flying state. <[newline]> Means I now have all the tools to prevent a StackOverflowException. Soon a new mod is ready for public.
GHXX#9078: thing is, tcp does exactly that, and emulating the exact tcp behaviour via udp cannot lead to a performance increase, especially since tcp will most definitely be partially implemented in hardware
Limón#7879: if I know stuff correctly
Limón#7879: maybe because lower byte count?
GHXX#9078: <@!154964593397989376> is there any reason why logicworld uses a framework that uses udp an then ensures packet ordering aswell as integrity which then should literally be tcp (but with more overhead)?
Ecconia#4929: I successfully managed to "decompile" the Logic World Server. And am now able to run it from my IDE. <[newline]> I only decompiled `Server.dll` which is already a whole lot of code. <[newline]> To read the whole story and details about it, here is a thread for it: <#943859087572103168>
GHXX#9078: since it has been a bit more than two weeks, and the docs page is still down, id like to ask again if there is any news, since the docs were quite helpful and very easy to access 🙂
Flampt#3906: Ok thanks
Ecconia#4929: Check the pinned message. <[newline]> Look at other mods in <#910673109164638239>. <[newline]> The official documentation by <:MHG:568324671477383178> is down though.
Flampt#3906: How to make a mod?
GHXX#9078: lets chat in the thread
Ecconia#4929: Good point! <[newline]> I have not yet tried to provide all dependency. Gonna try that. <[newline]> Yeah if that still does not work, would be cool to fiddle with it tomorrow.
Ecconia#4929: For now, here is my documentation <just check threads of this channel>
GHXX#9078: but we can chat tomorrow
GHXX#9078: im assuming you are lacking some dll
GHXX#9078: ah
Ecconia#4929: brushing teeth rn...
GHXX#9078: could attach a debugger
GHXX#9078: ah
GHXX#9078: or does it also die
Ecconia#4929: no
GHXX#9078: does that work?
Ecconia#4929: yes
GHXX#9078: can you build it and then run it without the ide?
Ecconia#4929: nonr
GHXX#9078: any exceptions?
GHXX#9078: hmmm
GHXX#9078: I'm sure there is some resources on the internet regarding accessing embedded stuff
Ecconia#4929: No worry, btw could I interest you in figuring out why the LogicWorldServer in my IDE always shuts down after full boot?
GHXX#9078: oh my bad
Ecconia#4929: Indeed, but I did not need that for a mod :)
GHXX#9078: i think using the Files property of the basemod class you can access local files of the mod. That is likely better than embedding resources <@151293812675706880>
DADp#7461: YAML <:bobby_sob:692807893023588363>
Ecconia#4929: As in, this code: `Assembly.GetExecutingAssembly().GetManifestResourceStream(string <name>)` has to find it. <[newline]> -> Oh a YouTube tutorial showed me, that I have to set the build-action to "embedded resource". Then it gets embedded. <[newline]> However still have to figure out how to put it into its right path. <[newline]>  <[newline]> And no, there is no reason, that `yaml` got used in LWS.
Ecconia#4929: Talking about that, how do I add "manifest resources" to a C# project. I literally cannot find good documentation for that...
Limón#7879: <:bobby_sob:692807893023588363>
Ecconia#4929: While digging the server, I found the `config.succ` file. <[newline]> But check out that file ending... SUCC just trying to be YAML...
nemerod#0256: i see your original message 🙂
GHXX#9078: the reason why we can't use fancy attributes us because all attribute args need to be compile-time constants, i.e. they must not change afterwards
GHXX#9078: and then tell harmony to patch that
GHXX#9078: the idea is simply to get the type via reflection
GHXX#9078: this approach should work, but instead of a transpiler use a prefix
GHXX#9078: <@151293812675706880>
GHXX#9078: https://steamcommunity.com/workshop/filedetails/discussion/1625698528/1744483505468499171/
GHXX#9078: I'm wondering though
GHXX#9078: i think you are right
Ecconia#4929: Strings seem to default to method names.
Ecconia#4929: And that works for classes? I was not able to find any example.
GHXX#9078: inside the harmony attribute
GHXX#9078: what i meant was that you would use "some.lw.namespace.PlayerController" as a string instead of the typeof
Ecconia#4929: My problem is that the whole class is `internal`. <[newline]> That means I must not use the class name/type at all. <[newline]> Because then the LW compiler won't compile it, because it detects access violation. <[newline]> So you suggest that I replace `typeof(TheClass)` with `"TheClass"` for example? Or probably `typeof("TheClass")`? <[newline]> But it seems that `typeof` is resolve at compile-time. Which would be a problem. Well, idk. <[newline]> I might be able to use the non-internal interface instead... Not sure if I can patch that though.
GHXX#9078: e.g. <[newline]> lwbla.blabla.PlayerController
GHXX#9078: i think what might work is supplying a string that represents the name of the class
GHXX#9078: <@151293812675706880>
GHXX#9078: this should also be of use, but i dont know how well it would play with patching setters <[newline]> https://github.com/pardeike/Harmony/wiki/Target-Method-Annotations#annotation-types
GHXX#9078: how to access private fields during a prefix: <[newline]> ```Parameter names starting with three underscores, for example ___someField, can be used to read and write (with 'ref') private fields on the instance that has the same name (minus the underscores)```
GHXX#9078: im sure there are resources on patching non-public methods
GHXX#9078: i think you can supply a string instead of the typeof thats just the fully qualified name
GHXX#9078: 👍
nemerod#0256: <@!151293812675706880> <[newline]> Nothing 😉 ||i reply with my message inside the screenshot 🙂, just my point or view, you can use this version if you want||
nemerod#0256: i read your code and i see several line with the IF
nemerod#0256: you love the `IF` ?
nemerod#0256: Heu....., i have small question for you
Ecconia#4929: Btw <@!109262887310065664> the PlayerController is `internal`, no clue how to access that with Harmony. <[newline]> Or rather, how to compile that using LogicWorld.
Ecconia#4929: -> DisableCollision version 2 is released. You can now clip wires too. **DO NOT DO THAT!**.
Ecconia#4929: Btw thanks to <@!109262887310065664>'s help I go my IDE for LW set up 🙂 <[newline]> And soon this boy gonna be on GitHub for you to grab your mods from it.
Ecconia#4929: (Not a question, just mumbling stuff) <[newline]> In LogicWorld you can use `Logger` from `LogicLog` or `LConsole` from `LICC`. <[newline]> One is ofc a logger, the other one just writes to console (which also gets logged). <[newline]> So far I am using `LConsole` just as "user feedback in console". <[newline]> The logger does not seem fitting for that.
Dragon Lord#6944: That would work too, but I really like the simplicity of the Korean writing system
Dragon Lord#6944: ^^
DanielGJ44#4557: or even just have non-serif font with a proper looking I
DanielGJ44#4557: Instead of the the Korean writing system, we should adopt a serif font
DanielGJ44#4557: I would argue the initial introduction of the capital I was not confusable with a lowercase l, it falls on the shoulders of font creators
Dragon Lord#6944: It's so frickin intuitive
Dragon Lord#6944: We should adopt the Korean writing system or something of similar style for every language lol
Dragon Lord#6944: Let's be real, the guy who decided that capital I and lowercase l should look identical is the real idiot
GHXX#9078: sure
Ecconia#4929: <@!109262887310065664> if you do not mind to voice chat, it would be very nice to ask you about .NET stuff
Ecconia#4929: Oh. Seems that the poster of this message is also an idiot, since l and i are very close. But well it answers my question.
Ecconia#4929: ....goes to urbandict...
GHXX#9078: ecconia, if you need some help lmk 🙂
GHXX#9078: because those type mistakes then lead to runtime errors
GHXX#9078: fast prototype is hindered however by python not doing any typechecks before execution
Erikbot#6368: fast prototyping, although data scientists use lots of languages for different purposes and even often create new ones.
GHXX#9078: but who knows what's to come
GHXX#9078: it was a bit weird because it wasnt a library, but more of a dialog you would click through and choose what you want and it would do it for you
GHXX#9078: that being said, c# does move in that direction, as they have added some sort of an easy machine learning builder half a year ago or so
GHXX#9078: i hope c# will be that lang :P
Limón#7879: I hope someone makes a language designed for machine learning
GHXX#9078: data science/ai *
Limón#7879: why does data science use python
Limón#7879: but that's just a bias
Limón#7879: I hope it doesn't use C++
GHXX#9078: hopefully data science slowly moves to c++/c# in the future
GHXX#9078: fair point, but still, in a compiled language setting you wouldnt have this issue
GHXX#9078: c# actually has an implementation of Torch, but sadly at university we have to use python 🤮
GHXX#9078: there is numba which compiles your py code, but it seems that it is far from able to compile any arbitrary py function
Limón#7879: I still trying to work on a rust neural network lib
Limón#7879: or use a compiled language
Limón#7879: save data constantly
GHXX#9078: this is especially frustrating when you train a neural net for a long time and afterwards some error occurs and it's all for nothing
Limón#7879: isn't there compiled versions of python
GHXX#9078: also a lot of runtime errors could be found by a compiler
Limón#7879: it's error messages are bad and unhelpful
Limón#7879: python for me is hard to debug most of the time
Limón#7879: that just happens to be everything
GHXX#9078: the implicit declaration is a flaw imo, as you might introduce a very bad bug that can be awful to track down
Limón#7879: but it can be annoying
Limón#7879: not necessarily a flaw
Limón#7879: that just seems like a quirk of having everything as mutable
GHXX#9078: i try to only use py when i know that this will be a very small project which wont go anywhere, e.g. the tcp test server for the tcp bridge lw mod
Limón#7879: most of my small projects grow into that and then I either suffer with python or switch to rust
GHXX#9078: splitting up work is definitely worth it
Limón#7879: I used it for learning opengl since C++ is annoying to me and OOP is fun, which I guess could be game development
GHXX#9078: its just about the creation, having it sit around is fine. This means you shouldn't keep creating and destroying threads
Limón#7879: I thought it would be cheaper since splitting up work
Limón#7879: wait spawning a thread is expensive?
GHXX#9078: the gil provides no advantage, its just there likely because of the fact that the python lang devs didnt want to spend time to make their code threadsafe, hence why this lock was put in
GHXX#9078: i wouldnt say this is subjective, there are things in py that are objectively bad in the python interpreter too, such as the GIL
GHXX#9078: implicit declaration is dangerous, unless if your script is very small, which isnt the case in machine learning <[newline]> efficiency and speed are terrible, matters especially in datascience <[newline]> the package dependency issues i described may arise in any project that makes use of several packages <[newline]> the lack of backwards compatibility between minor py versions affects all scripts
Erikbot#6368: well the aspects of python that you consider to be bad are pretty subjective and matter differently in different situations.
GHXX#9078: its not just speed, pretty much everything that makes up a language is flawed there
GHXX#9078: spawning a thread is considered expensive in programming terms, spawning a process is much worse. But the actual issue with multiprocessing is that returning a value requires it to be serialized as processes dont share memory, which is a big issue in processing training data. In my test, a multiprocessing solution was like 10 times as slow as running it singlethreaded, very likely to the serialization that takes place. Additionally there is also a limit to how much data you can serialize and return. <[newline]> In c# you would just spawn a couple threads and write the results into a concurrent queue or bag or something
Flampt#3906: Yeah
InCrIpTiOn#8028: what are you even arguing about
InCrIpTiOn#8028: anyone knows arguing over python speed is useless
GHXX#9078: If you didnt know, python has a global interpreter lock, meaning only one line of code can run at one given moment. <[newline]> using the threading library, or making it async does not bypass that
Erikbot#6368: I know that multiprocessing and multithreading are distinct, but multiprocessing still allows for concurrent execution of code.
GHXX#9078: asp.net is the base thats used for websites
Flampt#3906: Or just make everything async
GHXX#9078: no, thats not multithreading
Erikbot#6368: this is solved with the **multiprocessing** library
Flampt#3906: Lol
Flampt#3906: node.cs
GHXX#9078: oh yes, webservers, discord bots, neat programs, web crawlers, anything really
Flampt#3906: Is c# even used for anything other than game development
GHXX#9078: yeah but during each training iteration py code runs, locking it to being singlethreaded essentially
Flampt#3906: Ik
GHXX#9078: in c# you would do <[newline]> var a = "test" <[newline]> .......... <[newline]> var a = "4" <--- error, a has already been defined in this scope
Flampt#3906: Pro spelling
Flampt#3906: Not necceserily
GHXX#9078: thats why i said implicit declarations are bad
InCrIpTiOn#8028: tensorflow uses gpu
GHXX#9078: exactly
Flampt#3906: That is one flaw
Flampt#3906: Well yeah, not in this case since its assigning is the same as changing the value
GHXX#9078: but yeah this would print "test1111111111", but now prints 4
GHXX#9078: as this may be a proper use
GHXX#9078: no warnings in pycharm im sure
GHXX#9078: a = "test" <[newline]> for i in range(10): <[newline]>    a+="1" <[newline]>  <[newline]> #some copied in code <[newline]> a = 4 <[newline]> for i in range(a): <[newline]>    print("test") <[newline]> #end of the snippet <[newline]>  <[newline]> print(a)
Flampt#3906: I use it
Flampt#3906: It would
GHXX#9078: it wouldnt
Flampt#3906: Its like a precompiler
Flampt#3906: Pycharm would tell me anyway
GHXX#9078: python threading != concurrent multithreading
Flampt#3906: Hell naw
GHXX#9078: it does, because with every new line you are more likely to define a new variable, and you might pick a name you used before
Flampt#3906: `import threading`
Flampt#3906: You can make 30 lines into one
GHXX#9078: machine learning also uses python by the way, which is a very sad fact, as multithreading would be very useful there
Flampt#3906: Amount of lines doesnt matter bruh
GHXX#9078: but it in no way is a good language for dealing with tons of data. I personally thing, if a py script is more than 50 lines, its best to use a proper language
Flampt#3906: Its great for solving challenges
GHXX#9078: i agree, python is a neat lang for small scripts that glue stuff together, or solve small tasks
Flampt#3906: I use it for making bots and backends
Erikbot#6368: it will be fine if it isn't a lot of data.
Flampt#3906: Well I'm not one of those people
GHXX#9078: exactly
InCrIpTiOn#8028: thats python main use case
GHXX#9078: And it absolutely baffles me why
GHXX#9078: Ha, thats what i thought, but people do it. They use exactly python for exactly that
Flampt#3906: You're not gonna use python for iterating big data and similar since its slow in that
GHXX#9078: in what tasks is c# slow?
Flampt#3906: ^
GHXX#9078: no, tens of thousands of times faster
Flampt#3906: It is slow in certain tasks, but thats why its not used for such things
GHXX#9078: numpy is pretty neat, as it does store stuff efficiently, but unfortunately you cannot get any multithreading going
Flampt#3906: Yea 0.0001 ms faster
Erikbot#6368: I think it is a good prototyping tool, if I really want something quick I would write it in assembly/c.
Erikbot#6368: python isn't necessarily particularly slow if you use the correct libraries for it, but then you are mostly running code written in another language.
GHXX#9078: its also such a joke that python 3.7 scripts may or may not run on 3.8
GHXX#9078: Its perfectly fine to compare languages, and python has massive problems, whereas c# is pretty well thought out, when it comes to package management, the c# language itself, (maybe not sooo much the fact that there are different framework kinds, but a) this will be unified with .net5 and .net6 and b) there are valid reasons for going this path), and c# is also a lot faster than python pretty much in all aspects. <[newline]> C# seems like this project of people that think through decisions before publishing, <[newline]> and python seems like a duct tape fest, but the people behind it are somehow able to convince people that its good
Erikbot#6368: ~~more data = more efficient~~
Flampt#3906: While you did make solid arguments, you still can't say that it's worse than other languages because it's stupid to compare languages
GHXX#9078: this is NOT efficient
GHXX#9078: its 5 times as much!
Flampt#3906: oh no 20 bytes instead of 4, will your pc crash
GHXX#9078: wrong, python uses like 20 bytes for a 4 byte integer which is disgusting as the overhead is much larger than the actual data you are using. Python also isnt compiled making it slow as hell, and most errors in python are runtime errors that could have been detected by a compiler. Because of those runtime errors, development speed is greatly reduced. <[newline]> Likely the biggest efficiency problem is the fact that python does not support concurrent multithreading, which is a huge problem, especially nowadays. <[newline]>  <[newline]> As far as beginner friendlyness goes, while it might be easy to read seemingly at first, the indentation block-seperation has its problems when you copy around chunks of code as they may end up on the wrong indentation level, which then changes execution flow, and may be undetected by the ide. <[newline]> Another big issue are implicit variable declarations. If you accidentally reuse a variable name, it will simply be overwritten. In c# this cannot happen, as redeclarations are not allowed and you will get a compile-error. <[newline]> Lets move onto objects. If you define a variable inside a class, but outside of the constructor function in python, then these values are semi-shared between all instances, specificially, the values are shared as long as you do not reassign them. Modifications are fine and keep the linkage going. This can be very counter intuitive, especially to new programmers, so this is very beginner unfriendly.
GHXX#9078: python has massive dependency problems. By default, all packages are globally installed, and backwards compatibleness is ignored by packages often, thus some packages rely on specific versions of other packages, but if you have two packages that both require a different version of one specific package then this is an unresolvable conflict, meaning you cannot install it. This is only made worse by the fact that python is a language that heavily relies on importing packages to solve problems, which is a good idea generally speaking, but starts to go bad fast because of the dependency issue i was talking about. <[newline]>  <[newline]> Additionally, due to the globalness of packages, updating them could actually break other projects, which is terrible. In c# you do not have this issue as all nuget packages are per-project (not even per solution)
Flampt#3906: <a:what:800658730525392906>
Flampt#3906: 
Ecconia#4929: Ever had this problem, when refactoring or taking something apart, that your wires break? <[newline]> Well I don't. ||..anymore. **DisableCollision Version 2**||
Flampt#3906: <:vote_yes:772150563470049291>
Ecconia#4929: Sorry, I was referring to the python dependency system. <[newline]> That I consider still better than what I encountered with .NET (yesterday and while lifetime). <[newline]> Python is a fine language, ignoring its inconsistencies, but every language has its problems. <[newline]> And there are no languages which are worse than others, if you do not provide a use-case. <[newline]> But lets separate languages from their dependency systems and libraries and runtimes (cause the later 3 are mostly the problem).
Flampt#3906: Python is like the most beginner friendly language ever made
Flampt#3906: It is definitely efficient
Flampt#3906: It is easily readable
Flampt#3906: There are like at least 50 languages that are worse than Python
Flampt#3906: Strongly disagree
CrispyBacon7#9048: yeah i tried python once, it was confusing as hell
Ecconia#4929: I will have a look at it again soon, and see if your words help me sort it, they already should. <[newline]> (I really hope I could sort this mess, but the lack of support and downloads is simply still there. And the mess in an application by itself, as in one uses different version of the same dependency.)
Ecconia#4929: Seems like we are talking about two different things. Since what I saw was already worse than python (Edit: *Dependencies*). Interesting.
GHXX#9078: the 2.0 2.1 and 3.1 versions are very likely netcore or potentially netstandard but definitely not netframework btw
GHXX#9078: Python is an actual mess. Probably the worst language i have seen so far when it comes to efficiency, speed, reliability, package management, backwards compatibility, language backend (GIL), and the amount of thought put into it. To sum it up, python is an absolute shitshow and the py language devs should be ashamed of making such a broken language. So claiming c# is almost as bad, or even worse than py in ANY of those aspects is just very upsetting to me.
GHXX#9078: so just because it might seem a bit unintuitive at first does not at all mean that its trash and nobody put thought into it.
GHXX#9078: and the reason why netstandard is a thing is because this can be referenced by BOTH netcore and netframework, making it ideal for libraries
GHXX#9078: the reason why there is .net framework is because orignally it used to be win only, and then they added a cross platform framework, called net core, BUT the reason why this does not replace .net framework is because netcore does not include all features that netframework offers, as some of those features rely on windows-only features, such as performance counters
GHXX#9078: in .net framework, netstandard AND netcore, any older code can be compiled with any higher framework version, because the c# language version never decreases as versions increase, and c# language versions are backwards compatible
GHXX#9078: in python, even minor version number changes do not guarantee backwards compatability
GHXX#9078: also, versions are not worse than python, in fact, versioning is MUCH BETTER
GHXX#9078: <@!151293812675706880> there are three categories of runtimes for c#: <[newline]> .net framework (windows only) <[newline]> netcore (including .net 5 and .net 6) <[newline]> netstandard (acts as a library for both net framework and netcore) <[newline]> make sure you pick the proper version and edition of the framework, likely you will need netcore, and not the .net framework
Ecconia#4929: So I do need help again. <[newline]> I wish to get somehow a modding development whatever-ish running **ON LINUX**. <[newline]> That means I need some version of .NET and some version of Mono. But which? <[newline]> Some pretend there does not exist any other version than 4.X, and other docs claim that all exist but 4.X. I am so honestly confused. <[newline]> Like there is not even an official **LINUX** download for 4.X, uff. <[newline]> I will use the Rider IDE. That one seems to do the job. But it does not take care of installing .NET/Mono, it only supports up to .NET 4.8 and I think Unity also uses .NET in that version range. <[newline]>  <[newline]> Can someone with Unity/LW experience tell me which .NET version I need? <[newline]>  <[newline]> Using DNSpy, I was able to figure out that: <[newline]> - LW-Server: 3.1 <[newline]> - LogicWorld.SharedCode: 3.1 <[newline]> - LogicAPI: 2.0 (Cannot install this) <[newline]> - LogicScript: 2.1 <[newline]> ^Does this make any sense? Is this comparable to using different Java versions in the same program? <[newline]>  <[newline]> Yeah seems that I am out of C# development for a lifetime. This version mess cannot be dealt with. How can a system by Microsoft be so typical Microsoft. <[newline]> I mean the language yes. But this framework what the heck mess? Worse than python, and that means a lot.
kipieslim#4366: sadly not
Erikbot#6368: take a look at existing mods
mitolegy#5916: i have an idea for a mod but i have no idea where to start. anyone got any advice?
GHXX#9078: but dunno if logicworlds docs page is back
GHXX#9078: path is empty is probs cuz it couldn't find a dll, iirc you should put the required dlls into the lib folder inside your mod so it doesnt break
Ecconia#4929: Then you now know how to handle it in future :)
cheese3660#8641: I was trying to figure out which reference caused it
cheese3660#8641: It was that error
Ecconia#4929: But then there should be an error like "Path is empty"
Ecconia#4929: Compilation fails, if there are more than 4 or 5 mods. You need to compile them in smaller groups. <[newline]> (maybe it was that bug)
cheese3660#8641: I might start work on a text display mod
cheese3660#8641: I reinstalled all of it and it suddenly worked
GHXX#9078: did you install the other mods it comes with? dllloader and harmonylw?
GHXX#9078: likely because of the fact that the loadaccelerator depends on harmony
cheese3660#8641: The problem had to do with harmony not having a path somewhere, but removing other mods fixed this
Moojuiceman#5661: That's the path where it would be after building, looking at those other ones. They each have a mod name and the cache location of the built dll. Error while building that mod means no dll. At least I think all of that is right. Clean test would still help and give info there
GHXX#9078: maybe that one dll that doesn't have a path next to it can't be found
Moojuiceman#5661: Not sure about the later errors, feel like maybe it's not your mod breaking it but something else. So maybe try fresh world and remove other mods
Moojuiceman#5661: https://discord.com/channels/401255675264761866/901659878869844048/940606466631561236
Moojuiceman#5661: Did you do this via editing the dll? Because I had crashes doing that. The "correct" way is to put it in a config file
cheese3660#8641: my mod loads on its own...
GHXX#9078: maybe just download the dll
GHXX#9078: ooh the path is gone
cheese3660#8641: ``` <[newline]> 2022-02-11T15:56:32Z | INFO  | [ModCompiler]   DisableCollisions, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null  C:\Program Files (x86)\Steam\steamapps\common\Logic World\cache\b45ac8658fdb939bf04adca1c213a048\DisableCollisions.dll <[newline]> 2022-02-11T15:56:32Z | INFO  | [ModCompiler]   HarmonySharedState, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null   <[newline]> 2022-02-11T15:56:32Z | INFO  | [ModCompiler]   loadaccelerator, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null  C:\Program Files (x86)\Steam\steamapps\common\Logic World\cache\e6ad9e05dfabfa5d97cfbdb5dbc68624\loadaccelerator.dll <[newline]> ``` <[newline]> HarmonySharedState is the problem reference
GHXX#9078: hm?
cheese3660#8641: the crash is in the linq in the compilation creation
JPM-Baroque Spaceship#6542: there is any mod which changes the background? I would like a dark one like night even if light remains
cheese3660#8641: It fails when creating the compilation...
cheese3660#8641: 
cheese3660#8641: imma just manually convert traces to infos where i need them
GHXX#9078: 🤔
cheese3660#8641: ``` <[newline]> NullReferenceException: Object reference not set to an instance of an object <[newline]>   at LogicWorld.SharedCode.Logging+LiccLogReceiver.Log (System.String source, System.String msg, LogicLog.LogLevel level) [0x000a1] in <7066e2d6534345ebb3871235af1e8e84>:0  <[newline]>   at LogicLog.LogicLogger.Log (System.String msg, LogicLog.LogLevel level) [0x00023] in <2576baf8a91647ab889224c2df703059>:0  <[newline]>   at LogicLog.LogicLogger.Log[T] (System.String msg, T arg0, LogicLog.LogLevel level) [0x00027] in <2576baf8a91647ab889224c2df703059>:0  <[newline]>   at LogicLog.LogicLogger.Trace[T] (System.String msg, T arg0) [0x00000] in <2576baf8a91647ab889224c2df703059>:0  <[newline]>   at LogicWorld.SceneLoader.<InitializeObjectsInScene>g__RecursivelyInitialize|19_0 (UnityEngine.GameObject go, LogicWorld.SceneLoader+<>c__DisplayClass19_0& ) [0x0002d] in <72bcb3b5813c4948b8fbde7f78138b1d>:0  <[newline]> UnityEngine.DebugLogHandler:Internal_LogException(Exception, Object) <[newline]> UnityEngine.DebugLogHandler:LogException(Exception, Object) <[newline]> UnityEngine.Logger:LogException(Exception, Object) <[newline]> UnityEngine.Debug:LogException(Exception) <[newline]> LogicWorld.SceneLoader:<InitializeObjectsInScene>g__RecursivelyInitialize|19_0(GameObject, <>c__DisplayClass19_0&) <[newline]> LogicWorld.SceneLoader:<InitializeObjectsInScene>g__RecursivelyInitialize|19_0(GameObject, <>c__DisplayClass19_0&) <[newline]> LogicWorld.SceneLoader:InitializeObjectsInScene(Scene, LoadSceneMode) <[newline]> UnityEngine.SceneManagement.SceneManager:Internal_SceneLoaded(Scene, LoadSceneMode) <[newline]> ```
GHXX#9078: a different crash?
cheese3660#8641: Oh yeah, setting it to trace still causes a different crash
cheese3660#8641: No I got it
GHXX#9078: should be described somewhere in this channel i think
cheese3660#8641: aight
cheese3660#8641: I'd need to remember how but sure
GHXX#9078: coulr you set your loglevel to trace?
cheese3660#8641: yes
GHXX#9078: does the game launch properly without your mod?
GHXX#9078: odd, that should be fine
cheese3660#8641: ``` <[newline]> cheeseutil <[newline]> - components <[newline]>   + displays.succ <[newline]>   + memory.succ <[newline]>   + utility.succ <[newline]> - languages <[newline]>   - English <[newline]>     + English_components.succ <[newline]> - src <[newline]>   - client <[newline]>     + CheeseUtilClient.cs <[newline]>     + etc... <[newline]>   - server <[newline]>     + CheeseUtilServer.cs <[newline]>     + etc... <[newline]> + manifest.succ <[newline]> ```
GHXX#9078: of your mod
GHXX#9078: what's your file structure like?
GHXX#9078: i don't think so
cheese3660#8641: wait, was the entry point file renamed to Init.cs
GHXX#9078: or more precisely, the path it is looking for is empty
GHXX#9078: seems like it cannot find a mod file that probably goes into conpilation
GHXX#9078: oh sec
GHXX#9078: im assuming logs are unhelpful. try setting the log level to trace
cheese3660#8641: player.log
GHXX#9078: ahhh
cheese3660#8641: on startup
cheese3660#8641: it goes to the black screen
GHXX#9078: does your game crash on startup, or does it crash when you load a map?
cheese3660#8641: no, but it hasn't been updated in 3 months
GHXX#9078: did you change anything?
cheese3660#8641: my own mod is crashing the game on load now lol
Ecconia#4929: The only other problem with this currently is, that each display/component has 1025 meshes. And if the outlining code runs on these (looking at the component), your 60FPS quickly become 13...
Ecconia#4929: Well I decided to just not make that data persistent. So loading from save can cause a small data loss. But it does not matter. <[newline]> Here you can see me testing a few of these displays being toggled by a 1-tick clock. That means every tick all of the displays are sent to the client: `4*8*128` bytes (4Kb) and then drawn there.
Ecconia#4929: I am currently writing a mod (see <#940522396501295114>) and there I have a component with custom data. <[newline]> But just like delayers, it has data which is totally useless on the client side and should not be transmitted. <[newline]> And I recall Jimmyboy saying something about having attributes which prevents the server from sending them over. <[newline]> However the official delayer code has none of that. Was that future talk or is that actually a thing? <[newline]> Cause if it is not, I will have to send about 30 extra bytes over to the client on each pixel change...
Ecconia#4929: (Nah, I want it comfy and native - I just do not want to dump too much effort on it.)
GHXX#9078: is spinning up a vm with gpu-passthrough an option ?
Ecconia#4929: Okay let us just drop this topic, until someone has a good solution. <[newline]> I will try my best using JetBrains Rider eventually. Thanks for your help. <[newline]>  I do have another question though
Ecconia#4929: I am not much of a wine user. Mostly because it is major league glitchy and lacks performance with many other unforeseen disadvantages.
GHXX#9078: i read that VS runs when using wine, but the compiler used to break, but that info might be as of before the netcore era
Verlio_H#0201: what if you just like use wine
Ecconia#4929: Because mono itself runs on Linux. And that just seems to be a set of libs/tools for it. Which (by description) are ported over from the MacOS version of VS, probably cause: Useful. <[newline]> (And prolly inofficial)
Limón#7879: logic
GHXX#9078: why would they provide stuff vs depends on when vs is not a thing?
Ecconia#4929: Nah thats only libs/tools - just checked
GHXX#9078: <@!151293812675706880> check this out one <[newline]> no guarantees tho
Limón#7879: so it might be
Limón#7879: it was a while ago
Limón#7879: I don't remember
GHXX#9078: or is that actually the one you are referring to? <@!859806257774723102>
GHXX#9078: https://aur.archlinux.org/packages/mono-visualstudio
GHXX#9078: except for this one, which seems to be just some additional packages or something?
GHXX#9078: seems like its all vscode
Limón#7879: I mean visual studio not code
GHXX#9078: so it should be available on any distro
GHXX#9078: vs code is available for linux officially iirc
Limón#7879: it's the only thing that keeps me from ditching arch
Ecconia#4929: Hmm I only have VSC on AUR - so rip
Limón#7879: arch user repository
GHXX#9078: whats AUR?
Limón#7879: but not everyone uses AUR/arch so idk
Limón#7879: it's on AUR last time I checked and it you have to compile it yourself if I remember correctly
Ecconia#4929: And it keeps me from windows software/frameworks 😄
GHXX#9078: its like one of the few things that keep me on windows
GHXX#9078: and vscode != vs
Limón#7879: there is visual studio for Linux but I could not get it to compile
Ecconia#4929: Would have been my first choice indeed, but well they do not support Linux yet, sadly.
GHXX#9078: vs is not on linux!
Limón#7879: visual studio is good for this
Ecconia#4929: Lol, what do you mean with bad SUCC errors??? <[newline]> Plenty ebic
Moojuiceman#5661: monodevelop is what comes bundled with unity anyway, so it def supports the level of c# used. Not sure about the IDE itself on Linux though, since I've only built on Windows
GHXX#9078: dunno if they support netcore or netstandard
GHXX#9078: maybe try that though
GHXX#9078: https://www.monodevelop.com/
GHXX#9078: if you want to see compile errors in real time you could actually make a script that continuously compiles it :)
Ecconia#4929: **Again, I am asking for an IDE on Linux for LW modding. Nothing more nothing less.** <[newline]> Not for scripts not for compilers. Just an IDE, which does what any normal IDE does.
Erikbot#6368: Automate your tests.
GHXX#9078: within one or two seconds. and it would tell you any errors
Ecconia#4929: I want an IDE. Maybe someone here uses Linux and has experience in this field.
GHXX#9078: you could install netcore and then compile the project using command line
GHXX#9078: actually
GHXX#9078: but yeah any ide should work
GHXX#9078: oof
Ecconia#4929: Figured 😛 <[newline]> (JetBrains Rider works on Linux, but well... But they want money, or me being a student...)
GHXX#9078: thats a very good Advantage xD
GHXX#9078: yeah
Ecconia#4929: It would at least stop me from making Syntax error and hence not letting me run LW 100 times but only 80 times per day, and thus saving me a great deal of time.
GHXX#9078: as far as i can tell you should look for any c# ide
GHXX#9078: at the end of the day though, the ide makes coding easier, but doesnt add anything you couldn't do with a text editor as the game compiles the code anyway
GHXX#9078: VS community/professional/enterprise lets you add dlls but its not on linux as you found out
Ecconia#4929: That was not my question nor answers it... But okay 🙂 <[newline]> I pretty much am able to create mods (see <#940522396501295114>). <[newline]> But I would like to use an IDE for that (on Linux).
GHXX#9078: <@151293812675706880>
GHXX#9078: you just add a line at the top specifying the namespace you want to import e.g. <[newline]> using System.IO <[newline]> using Logicworld.Something.SomethingElse
GHXX#9078: all mods use LW dlls
Ecconia#4929: **On Linux** <[newline]> Hmm, did any of you manage to write plugins in an IDE which somehow is able to use local DLL files (the LW ones) as dependency? <[newline]> Cause that would probably increase the workflow of creating mods. <[newline]> I have however no clue which IDE is fitting nor which steps to do. <[newline]> (Do I use the latest Visual Studio for that? Does that even run on Linux... - RIP no.)
kipieslim#4366: oh, thank you so much!
Ecconia#4929: Yes. Set your *loglevel* to *trace*. That prints compile errors. <[newline]> To do that open the `licc` folder in the LogicWorld folder and edit the file in it. <[newline]> Content should be `loglevel "trace"`. Do not forget to remove it again after you are done. Since it will spam your console.
kipieslim#4366: it states this, plus a line saying i'm online, and then the game is stuck on a black screen
kipieslim#4366: yes
TheWildJarvi《THE SEMI SEER》#1337: is that from the logs?
kipieslim#4366: Is there a way to get more detailed info than  <[newline]> `[SceneAndNetworkManager] going to error screen with message: "Failed to compile scripts"` <[newline]> when making a client mod. <[newline]> the game shows a black screen, so i really can't figure out what i'm doing wrong.
Ecconia#4929: But I already saw the request before about a 1³ cube which things can be attached to. This would be one! <[newline]> (No resizing however).
Ecconia#4929: Given that the game starts with rounding errors after just 10-15 stacks, I am not sure about that.
ThaCuber#5611: this would actually be pretty useful
Ecconia#4929: VOXEL TIME YEAH! <[newline]> (Just a cursed image for you...)
Ecconia#4929: Imma start a short modding adventure here.
FalsePattern#7777: iirc i used this one: https://github.com/pardeike/Harmony
Ecconia#4929: I will have to look into, where the harmony file comes from though and see which license they use. Never worked with it before.
Ecconia#4929: Okay nice, then I will just add them to my mod repository eventually. Thanks. <[newline]> Yeah I like that mods get compiled, makes it easy to just look at them and check them before usage.
FalsePattern#7777: all of the zips have the original .cs files, and they're compiled by lw during loading, so the zips themselves are the source code too
FalsePattern#7777: i was too lazy to do any form of version control, i made those mods in notepad++ <[newline]> i only have the files on my site, but you're free to rehost it anywhere, you can consider them public domain
Ecconia#4929: Hi <@!437296986593427458>, <[newline]> Do you have your `LWHarmony` and `DLLUtils` mods on GitHub? <[newline]> That kind of does not seem the case to me, or I am just bad at finding them. <[newline]> In future, I will have to link to downloads of them. <[newline]> I could link to your website, or host them myself. But my preferred way would be to link to a GitHub repositories release page.
Narianer#7527: Saver version conversion would fix that.
TheWildJarvi《THE SEMI SEER》#1337: <:upsidedown_cry:662482791153270804>
TheWildJarvi《THE SEMI SEER》#1337: will it mess up old saves?
Jimmy#8080: we're planning to add a checksum for the next save file format version
GHXX#9078: lol
DanielGJ44#4557: And then the account doesn't have it lmao
GHXX#9078: have been around on discord for like 1.5 years now or someting
DanielGJ44#4557: Well typically what I see is the "hey I bought extra have a link"
GHXX#9078: but yeah those nitro links are a pain in the ass
GHXX#9078: HEY I GOT NITRO BUT IM GREEDY
GHXX#9078: it would be even more ironic if it came from an account that already has nitro
DanielGJ44#4557: I can confirm they were banned
GHXX#9078: well
DanielGJ44#4557: Literal proof it doesn't work
GHXX#9078: ill put my money on "someone banned them"
DanielGJ44#4557: I like when the free nitro scams come from accounts without nitro
GHXX#9078: well it wouldnt have to look exactly like this, or be perfectly sound, just in that direction
GHXX#9078: classic, yeah, the idea is: when you fall for the scam and enter your details, it goes through all active channels (open dm channels, but only sometimes) and all channels of the servers you are in, and then the message gets sent in all of those channels. And if anyone clicks it, the scam goes on
TheWildJarvi《THE SEMI SEER》#1337: yea it was a free nitro link lmao
GHXX#9078: "GET YO FREE NITRO TODAYY!!!!!!!!!!!11111111111"
GHXX#9078: im guessing it was a nitro scam link?
GHXX#9078: only bans delete messages
GHXX#9078: no, timeout doesnt delete anything. The user is just unable to join any VC and can also not send messages
TheWildJarvi《THE SEMI SEER》#1337: <:woke:796822508148883486>
DanielGJ44#4557: Well, kids, remember to always use 2FA
DanielGJ44#4557: Yeah fair enough
TheWildJarvi《THE SEMI SEER》#1337: ive never used it before either. usually i used dyno for mutes/timeouts
DanielGJ44#4557: Or you can set it to? Idk I've never had to use it lol
DanielGJ44#4557: I think timeout does delete messages up to X amount of hours
TheWildJarvi《THE SEMI SEER》#1337: okay that makes more sense i was confused af
TheWildJarvi《THE SEMI SEER》#1337: oh <a:KEKWgif:829851650717909094>
DanielGJ44#4557: No, another mod deleted them before I got to it lol
TheWildJarvi《THE SEMI SEER》#1337: ah, timeout deletes their messages? :0
DanielGJ44#4557: That's why I went to time-out instead of insta-ban
Erikbot#6368: global illumination is typically very expensive especially when the lighting is indirect from emission, however it can be baked given that the world is static and the wires themselves do not move. however it would require a lot of memory to store the light contribution from every wire cluster.
TheWildJarvi《THE SEMI SEER》#1337: so odd that they do it now
TheWildJarvi《THE SEMI SEER》#1337: that user never has spammed before
TheWildJarvi《THE SEMI SEER》#1337: but like
TheWildJarvi《THE SEMI SEER》#1337: i watched it happen in real time
Ecconia#4929: Fast acting, good jobu 🙂
DanielGJ44#4557: This is so sad
DanielGJ44#4557: I clicked timeout and the user was already gone lol
Ecconia#4929: (Prank link, use at your own risk) <[newline]> <@&579246303901384704> Call for you, who bans first? Top, Daniel won it seems.
GHXX#9078: i wonder if someone could make a mod do the world looks like this <[newline]> https://media.discordapp.net/attachments/401255675264761868/911709042659950622/lw-16b-02g.png?width=1202&height=676
Ecconia#4929: Am using that.
GHXX#9078: e.g. typeof(SomeType).GetProperty("somename", BindingFlags.Private|BindingFlags.Static); iirc
GHXX#9078: could also use normal reflection 😛
Ecconia#4929: Oh it does not. But clearing the history and clearing the assembly cache needs reflection. And Harmony provides Utility classes for reflection.
GHXX#9078: and running the gc shouldnt need any harmony stuff
GHXX#9078: running the garbage collector manually with GC.Collect() does have an impact when i tested loading up that tetris map, as it didnt crash anymore.
DADp#7461: can we get a mod to toggle the rendering of wires?
DADp#7461: probably some really obscure thing that the devs dont even know about
Ecconia#4929: The results of my test disappointingly point towards, that none of these contributes to RAM usage. <[newline]> So that is one thing we can scratch from the list. Maybe devs know more.
Ecconia#4929: I just hope that this will touch the memory usage somehow... And boy this was a reflection and harmony hell.
Ecconia#4929: So wrote some toolset which lets me attempt to clean some memory somehow. <[newline]> Basically clearing the subassembly cache (its always empty anyway). <[newline]> Clearing the history (good one, who needs history anyway). <[newline]> And manually running the garbage collection, yeet da memory.
Erikbot#6368: why isn't there a checksum to check for corruption instead of checking for a specific header/footer? would that be too expensive/unnecessary? Maybe corruption checks/error correction should be handled with the OS instead of the game though.
Limón#7879: just added it
Jimmy#8080: Should probably be added to <@!859806257774723102> 's pinned message
Jimmy#8080: <@!296694221031604226> https://gist.github.com/JimmyCushnie/bebea37a21acbb6e669589967f9512a2 :)
MichaelBot#9291: maybe not modding directly, but do we have documentation on save file format?
Ecconia#4929: Didn't someone on this server write a tool to frequently ping LW servers? <[newline]> I wonder how that project went.
Vinyl Boot Maven of Shade#1858: The hexrom is designed very simply. The address points to the 2nth character in the text. That character and the one after is converted into a byte. <- Added to description to hopefully lessen confusion.
StartForKiller#0001: maybe it would be good if you can have a component that can be configured the output size and and auto adjust the contents of the rom
BolkeDer#6969: if you give it an input of 0 then output is 00, if input 1 then the output is 15, if input 10 then the output is ff.....
peterp70#0612: Thanks! Works. Perfect.
BolkeDer#6969: Example: 0015ffdd443472
peterp70#0612: Hi, thanks for this hint! It works. But what is the data format for the Hex-ROM? I tried a lot, but is it adress:data or only data seperated by ,?
Vinyl Boot Maven of Shade#1858: There, maybe that will help.
Ecconia#4929: That is one. But that still makes me open all the mods in my browser, before knowing what to choose. <[newline]> So maybe a list of components in the message in <#910673109164638239> would give users with not much clue (like me) a good overview. Without opening the folders on GitHub to know what is inside.
Vinyl Boot Maven of Shade#1858: What's a good way to deal with mod descriptions? I put mine in the readme.md for the github.
Erikbot#6368: `curl` all links and grep them for display
Ecconia#4929: HAIL MOD DESCRIPTIONS. <[newline]> I wonder if the people sending things in <#910673109164638239> want their mods to actually be used...
Erikbot#6368: `It has a refresh rate of 10 fps.`
Erikbot#6368: it is just randomly hidden at the bottom
Ecconia#4929: Oh wait, it has a `PixelDisplay`
Ecconia#4929: Does not seem to contain displays
Erikbot#6368: (I haven't used it)
Erikbot#6368: might be this one https://github.com/ShadowAA55/HMM
Ecconia#4929: Where can I find the Display mod everybody uses? (Who made it?) <[newline]> I have to mod that thing to mimic my vanilla display.
BolkeDer#6969: Hi, i use this mod: https://discord.com/channels/401255675264761866/910673109164638239/911459427004063765It has HexRom and Asm Rom.
Erikbot#6368: There is a thing called logicscript, which is the intended way of adding relatively simple components, although there are ways to do it with c# where there aren't any limits to what you can do. I haven't done either myself. I have built program memory for my CPU, it isn't necessarily a big problem. Look in this thread for mods that are already made: https://discord.com/channels/401255675264761866/910673109164638239
peterp70#0612: Hi Logic-Fans, I have a simple question: Is there a possibility to add a self defined block which behaviour is defined by a script? Why? Would be very useful for testing and very, very useful as program memory for a self-designed CPU. Otherwise we have to build a program memory bit for bit. Which is fine for the CPU itself, but not very useful for writing a program.
ThaCuber#5611: a ok
GHXX#9078: <@358990534619955200>
GHXX#9078: no, it broke according to jimmy, and he said <@128545421579517952> will look into it soon
Erikbot#6368: was removed until the mod api is finalized.
ThaCuber#5611: https://docs.logicworld.net/articles/intro.html does not lead anywhere
GHXX#9078: someone could make one using harmony probs
Erikbot#6368: you could use a circuit to time your circuits, i have done that.
LOOPS#1372: Is there a mod that adds a tick stopwatch? With a start and stop signal inputs? I'm trying to time circuits
gnog#2259: or tries to cache with other mods
Ecconia#4929: Yeah just starting it with your mod and then adding mine back does the trick. <[newline]> So weird.
gnog#2259: if it tries to cache more than 3 mods on start, it crashes, something like that
gnog#2259: some stuff with caching
Ecconia#4929: That must have done the trick yesterday too. Any idea why this happens?
gnog#2259: and then put everything back
gnog#2259: without libraries
gnog#2259: without anything
gnog#2259: try put the other mod alone and start the game
Ecconia#4929: Uff <@!487609645549223941> it happened again. <[newline]> ``` <[newline]> 2022-02-03T10:18:36Z | INFO  | [DLL Util] Initializing DllUtil... <[newline]> 2022-02-03T10:18:37Z | INFO  | [LWHarmony] Loading 0Harmony.dll <[newline]> 2022-02-03T10:18:37Z | INFO  | [DLL Util] Loading 0Harmony.dll <[newline]> 2022-02-03T10:18:37Z | INFO  | [DLL Util] Successfully loaded 0Harmony.dll <[newline]> 2022-02-03T10:18:38Z | ERROR | [SceneAndNetworkManager] going to error screen with message: "Path is empty" <[newline]> ```If both of our mods are used... Got any idea? I will play a bit with removing one and starting then.
gnog#2259: yeah, sure
Ecconia#4929: <@!487609645549223941> Can you release your mod in <#910673109164638239> too? It is quite important and I don't want to `Control+F` it each time. Additional cause I cannot search for file-names in Discord. Would be amazing, thanks. Good mod!
GHXX#9078: ty
Jimmy#8080: agreed. Pipe will have a look soon I'm sure
GHXX#9078: thats good at least, but having it hosted properly would be much better since navigating the git repo is a pain and not nearly as easy as navigating the website was
Ecconia#4929: <@!487609645549223941> <@!437296986593427458> <[newline]> So I made a LogicWorld mod, which depends on `lwharmony`, just like the recent `loadaccelerator` mod by <@!487609645549223941>. I basically looked as his mod as inspiration. It is very simple also only one CS file. <[newline]> However if I run his and my mod alongside, I get the error screen with "Path is empty". <[newline]> Each of the mods itself standalone (with <@!437296986593427458>'s two mods) works. <[newline]> Do you have any idea? <[newline]>  <[newline]> -> Okay NOW IT WORKS. So sorry for the ping. So weird. I hope it does not fail again. Thanks anyway. <[newline]>  <[newline]> Edit: Oh no, now it happens again...
Jimmy#8080: I think the data is still available at https://github.com/MouseHatGames/LogicWorld-Docs
GHXX#9078: but very helpful
Jimmy#8080: To be clear, those docs were always unfinished/early
Jimmy#8080: I don't know; <@!128545421579517952> any insight?
CrispyPin#1149: especially in a technical community like this where most people can code
CrispyPin#1149: trust no-one
Limón#7879: me when server trusts client
KyleRokuKyu#6975: That said, plugs would probably start having issues if the hitboxes were shrunk. <[newline]>  <[newline]> So, they'd probably need their raycast ranges (Or however it's handled) increased
KyleRokuKyu#6975: Since the game is grid based <[newline]>  <[newline]> Unless you're a psychopath playing in the grassy field
KyleRokuKyu#6975: So...  if you want to fix things like the "Can't paste because the game things this is hitting" <[newline]> It seems to almost always be due to floating point precision issues. <[newline]> Which means, rather than disabling hitboxes <[newline]> They could be shrunk by a very small amount
KyleRokuKyu#6975: turning off all hitboxes while in place mode actually would be super easy <[newline]> But ignoring the anti collision bool is way more elegant and performant
Ecconia#4929: For good purposes, when the game refuses pure actions. <[newline]> Not for some to misuse it to clip things into each other.
Ecconia#4929: I do not want to remove hitboxes! <[newline]> I want to temporary remove collision on demand.
GHXX#9078: the server does more than that
nemerod#0256: the server just here for internal logic, not for world check 🙂
nemerod#0256: you see jimmy, i saying on long time, someone want remove all hitbox
GHXX#9078: -1 rep to jimmy for not doing serverside validation 😦
Ecconia#4929: No more collisions on placement, damn yeah
Ecconia#4929: Proof of bloody concept!
Erikbot#6368: logic world is an undocumented feature
GHXX#9078: <@!154964593397989376> what happened to docs.logicworld.net ? 🤔  <https://docs.logicworld.net/articles/intro.html> used to exist, but it seems the dns lookup fails now
GHXX#9078: 5d chess with multiverse timetravel is another c++ example, in fact, thats the example where point c) came from
GHXX#9078: which is definitely the preferred way of doing it as this wont even break when the game updates (unless the functionality of the method changed in a way where our modifications break some logic, but this is not an issue with compilation, its just an issue that our modified returnvalues dont make any sense anymore. But it wont break directly)
GHXX#9078: but in LW's case we can easily load harmony and have harmony add a prefix or postfix to any method we want to alter
GHXX#9078: meaning you are effectively dealing with c++ and thus cannot make use of harmony easily i think
GHXX#9078: among us uses il2cpp
nemerod#0256: like among Us
GHXX#9078: the point is, the instructions themselves may change in the c++ case, and it might be similar in c#'s jit case im assuming
nemerod#0256: specialy for mod game on not supported game, in any version
nemerod#0256: but if you made good job, you can add mask byte for search the part of code
GHXX#9078: c) is especially true for c++ compilers which do excessive optimization (to the point where xor rax,rax, inc rax, shl rax, 2 is preferred over simply loading the number 4 aka mov rax,4 since this saves you 1 byte of memory space iirc)
nemerod#0256: with raw method
GHXX#9078: a) updates will break method addresses, in fact, even a restart might break it due to JIT potentially doing stuff differently <[newline]> b) because of a), you would need to rediscover the function all the time, <[newline]> c) the function contents might differ between compilations
nemerod#0256: i never love add more DLL 😉
GHXX#9078: there is quite some downsides to this approach though
nemerod#0256: it's very simple for return true and false in assembler 😉
GHXX#9078: and yeah, its sketchy, especially when other mods also want to tinker with it
GHXX#9078: in assembly its not as easy as that, since im assuming its not a simple return true; thats in there right now
GHXX#9078: uhhh
Limón#7879: that's a bit sketchy
nemerod#0256: if you hot for edit the DLL, you can disassemble and search the part of code and edit the last opcode for set true or false with
GHXX#9078: harmony is farily new, was a thing since like ~~2019?~~ 2017
GHXX#9078: mixin was probs before harmony
Limón#7879: https://falsepattern.com/lw/
PseudoGoose#2841: and then came Mixin (idk which was actually first) that does the same thing for Java, it's fantastic for MC modding
GHXX#9078: modifying code at runtime before was such a pain, but still doable
GHXX#9078: 😂
GHXX#9078: and now its all over the place
GHXX#9078: then people in ksp used it
GHXX#9078: (it actually was made for the game Rimworld)
Ecconia#4929: Nice documentation~
GHXX#9078: ngl, the creation of harmony was such a big step forward in modding
Dragon Lord#6944: ~~neither do most world powers~~
GHXX#9078: its `__result`, not  __return 🙂
GHXX#9078: https://harmony.pardeike.net/articles/patching-postfix.html
GHXX#9078: 
Limón#7879: I know someone was doing something with harmony
Limón#7879: I would say a command would be the best idea
GHXX#9078: or a static config file?
GHXX#9078: like, would that be done using a command?
GHXX#9078: how would toggling work though?
Ecconia#4929: Boys, I know how programming works, but I have no clue how to work with Harmony
Limón#7879: ```cs <[newline]> // not toggle because if it's on then we allow overiding <[newline]> return !toggle```
GHXX#9078: just do  <[newline]> __return &= enableBarrier
Ecconia#4929: I never did Harmony, I could try that, but yeah, I see this task as very possible.
GHXX#9078: my bad
GHXX#9078: ooh
Limón#7879: they want a toggle
GHXX#9078: i mean, unless if im wrong
GHXX#9078: no 😛
Ecconia#4929: If that works, we have the concept done. Then it only needs a way to intercept like the chat to edit the flag thus change if we override the result or not.
Limón#7879: it's probably a bit different than that
GHXX#9078: simply add a postfix that sets __return (i think) to false
Limón#7879: your code is done
Limón#7879: there you go
GHXX#9078: that should be very ez then
Limón#7879: ```cs <[newline]> return false <[newline]> ```
Ecconia#4929: So the DLL to modify for this mod should be `LogicWorld.Building.dll` in there we have `LogicWorld.Building.Intersections : CollidersIntersectingSomething` which returns a `boolean`. <[newline]> If we use Harmony to let that return `false` I think this mod is as good as done 🙂
Limón#7879: I feel like you guys don't understand what they are asking for
nemerod#0256: you have the file from me man
BitorBit#6268: i have something similar to that
Limón#7879: WHAT
Limón#7879: HOW
nemerod#0256: but the server no have the mod 🙂
nemerod#0256: and already used on my server
nemerod#0256: i already made the mods 🙂
Ecconia#4929: **Mod-Request:** [Client-Only-Mod] <[newline]> -> Mod which allows you to toggle to ignore build restriction. <[newline]> Red outline no placement? With this mod it places anyway. <[newline]> -> Should have the ability to be toggled on/off. <[newline]> **Reward:** Most LW users would kiss the feet of whoever creates this mod, me included. ||Please shower first though||
GHXX#9078: but the result would be weird id assume
GHXX#9078: i suppose at that point you could do bitwise math
GHXX#9078: but it would still be represented using an exponent
GHXX#9078: <:thonk:808797080713035787>
GHXX#9078: double cannot be cast to a byte array implicitly, but there are easy ways to convert it i think (BitConverter.ToBytes(double a) iirc)
Dragon Lord#6944: wait... if you were to type pun it to an array of uint8_t, you could do the mantissa separately...
GHXX#9078: and bitwise math wont work well with the exponent notation that floats/doubles use i bet
Dragon Lord#6944: like i said, not terribly useful lol
GHXX#9078: exactly
Dragon Lord#6944: ¯\_(ツ)_/¯
GHXX#9078: at what point is it false?
GHXX#9078: is 1e-12 true?
GHXX#9078: saying "at least one bit is true" isnt very expressive for floating point values
Dragon Lord#6944: yee
Dragon Lord#6944: it's essentially 'if at least one bit is true'
GHXX#9078: e.g. for nullchecks in c++
GHXX#9078: and its also often used like this
GHXX#9078: e.g.  <[newline]> if(a){} <[newline]> where a can be anything really, not just a bool
GHXX#9078: in c++ and c you can do a lot of wacky stuff
Dragon Lord#6944: ;n;
GHXX#9078: also c# thankfully is not c/c++
GHXX#9078: and you cannot implicitly convert double to bool
Dragon Lord#6944: and you can also do type punning
GHXX#9078: a&&b probs only exists for (bool a, bool b)
Dragon Lord#6944: in c/c++ 230 is true and 0 is false for uint
Jimmy#8080: not in c#
GHXX#9078: double cannot be implicitly casted to bool tho
Dragon Lord#6944: all values are interpreted as bools when passed into boolean operators
GHXX#9078: but thats & not &&
Jimmy#8080: (from https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/operators/operator-overloading)
GHXX#9078: not even bitwise
Jimmy#8080: you might be able to fake it?
GHXX#9078: well, &&, || and ^ are purely meant to be logical operators
Dragon Lord#6944: that's weird... i think it works in c/c++ and in hardware
Dragon Lord#6944: really?
GHXX#9078: i dont think it is in c#
Dragon Lord#6944: it's defined, it's just not terribly useful XD
GHXX#9078: nor is double || double
GHXX#9078: double && double isnt exactly defined though
GHXX#9078: 😂
EmergencyTemporalShift#0001: I’m pretty sure all you have to do is search and replace all Boolean with Double.
TheWildJarvi《THE SEMI SEER》#1337: yeah it locks up on me when i have like 6 op amps cascaded lmao
EmergencyTemporalShift#0001: Here's a good circuit simulator that's open source: https://www.falstad.com/circuit/circuitjs.html
GHXX#9078: old computer
Limón#7879: mechanical computer
TheWildJarvi《THE SEMI SEER》#1337: <:Troll:830028645510021140>
TheWildJarvi《THE SEMI SEER》#1337: i prefer it heavy
Limón#7879: light computer
TheWildJarvi《THE SEMI SEER》#1337: how about domino computer
nemerod#0256: wanna water computer ?
TheWildJarvi《THE SEMI SEER》#1337: <a:KEKWgif:829851650717909094>
GHXX#9078: AnalogWorld 😂
TheWildJarvi《THE SEMI SEER》#1337: its very specific maths where values matter at different timescales
TheWildJarvi《THE SEMI SEER》#1337: i use it, its still all cmd line based whcih they slap a gui on lol
GHXX#9078: you should check out LTSpice <@121786044197765131>
TheWildJarvi《THE SEMI SEER》#1337: ¯\_(ツ)_/¯
TheWildJarvi《THE SEMI SEER》#1337: but it is super accurate
TheWildJarvi《THE SEMI SEER》#1337: really technical, and its really all command line based
TheWildJarvi《THE SEMI SEER》#1337: its not user friendly lmao
TheWildJarvi《THE SEMI SEER》#1337: but like, have you ever used spice?
TheWildJarvi《THE SEMI SEER》#1337: yeah what im saying is the simualtor engine would need to incorperate spice
Limón#7879: but re-engineering the wheel is fun
TheWildJarvi《THE SEMI SEER》#1337: Analog simulators don't have the same abilities digital sims have. In an analog sim you have steady state and transient analysis that has to be performed to model the circuit. Most of this work is done by an engine called spice. It would make 0sense to re-engineer the wheel if you know what I mean.
StartForKiller#0001: because it can have variable resistence or something, etc
StartForKiller#0001: i store voltage becaus the components apply the voltage drop based on their resistance
StartForKiller#0001: for simpler wires
StartForKiller#0001: i don't store resistence in wires
Saltypretzel#0321: https://en.m.wikipedia.org/wiki/Fan-out
Saltypretzel#0321: Although I think you might be trying to refer to something called fan-out
Saltypretzel#0321: Can’t calculate amperage unless you have voltage and resistance
Limón#7879: impossible without basically rewriting a lot of existing code I would say
StartForKiller#0001: no, i mean, a new type of wire that holds voltage and amperage
Limón#7879: but I think the vertices are defined in code
Limón#7879: you can have custom models
Limón#7879: probably
BitorBit#6268: colored wire?
StartForKiller#0001: Well it could be added a new type of wire? Or is that impossible?
StartForKiller#0001: Currently all wires has zero resistence and all the components, so no voltage drop
StartForKiller#0001: Gane is designed on digital logic not in analog logic
BitorBit#6268: ok
BitorBit#6268: also, what game is that?
BitorBit#6268: i can make models
BitorBit#6268: gud idea
BitorBit#6268: you gave me an idea
BitorBit#6268: do you have the multiplier?
BitorBit#6268: ey
BitorBit#6268: xd
BitorBit#6268: i have 20 555 timers here
BitorBit#6268: ik the datasheet
BitorBit#6268: ok
BitorBit#6268: what is INSIDE microShiP
BigMintyMitch#1620: Thanks :)
RegularRuby670#0941: have a good sleep
RegularRuby670#0941: thankyou
BigMintyMitch#1620: <@!183769618131845120> <@!258769251547086849>  got it fixed now. Tested it and it works fine. Thanks for letting me know
BigMintyMitch#1620: I'll just fix it rn
BigMintyMitch#1620: I do
ThePiGuy24#0369: i dont know enough about LW modding to know exactly what broke it
BigMintyMitch#1620: It's fine I was playing Knockout City
BigMintyMitch#1620: Actually it might be a quick fix give me a second
RegularRuby670#0941: shit sorry for the ping then
BigMintyMitch#1620: Tomorrow ofc it's like 2:30 am lol
BigMintyMitch#1620: Damn. Ok I'll take a look at it. Sorry <@!258769251547086849>
ThePiGuy24#0369: as to how this slipped through testing, dont know
ThePiGuy24#0369: reverting `components.succ` (or the whole mod) to the previous commit works fine
RegularRuby670#0941: thanks
RegularRuby670#0941: ok
ThePiGuy24#0369: yes the latest commit broke it
RegularRuby670#0941: <@!197434850771337228> have you got a sec <[newline]> im trying to use your mod and it keeps throwing the error `Value cannot be null. <[newline]> Parameter name: key` <[newline]> do you have any clue on what it could be and is this a known issue?
Stenodyon#8192: we have a thread for that :) https://discord.com/channels/401255675264761866/910673109164638239
TheKolyian4ik#3151: Hey! Where can i find a list of cool mods?
gnog#2259: how do you draw some text on screen with mod?
EmergencyTemporalShift#0001: Technically, TCP can display anything, just not in game
C4io#2688: https://github.com/ShadowAA55/HMM
GHXX#9078: i dont 😂
TheWildJarvi《THE SEMI SEER》#1337: It is lol
Limón#7879: unless it's HMM I can't find it
TheWildJarvi《THE SEMI SEER》#1337: <#910673109164638239>
Limón#7879: I can't find the link though
Limón#7879: I think
Limón#7879: I was wrong it was <@377717131556552708> that had the display mod
RyanT#1426: can u link gh?
Limón#7879: so you should check that out
Limón#7879: <@109262887310065664> has a display mod
RyanT#1426: what should I do?
RyanT#1426: the only issue is that I don't know how the display component's work lol
RyanT#1426: I've decided to try to do this
RyanT#1426: hello
RyanT#1426: Tho I have a question: Should I add more complex components (like a TV in 1 component or a VHS tape like thing), or keep it to simple components?
RyanT#1426: As shown above, I am making a mod with components to make a TV system. here is a vid of what I've got so far. https://drive.google.com/file/d/18eqAb25nhxBMbrxRNMUL5a2uCaxCroN9/view?usp=sharing
GHXX#9078: he does store it bitwise
GHXX#9078: check ryan's code
Ecconia#4929: Seems that I misunderstood you earlier. It most certainly does not do that. <[newline]> Regardless. Using a byte array only becomes more efficient if you store bools bitwise. <[newline]> I think most things in LW convert between 1 bool and 1 byte only.
GHXX#9078: so LW compresses bool arrays by storing 8 bools in a byte? <@!151293812675706880>
Ecconia#4929: Not with logic worlds implementation...
GHXX#9078: but yeah a byte array 8 times as efficient as a bool array
GHXX#9078: i suppose jimmys code cannot serialize a bool array then
RyanT#1426: use a byte array instead of a bool array and just use `Convert.ToByte` and `Convert.ToBoolean`
RyanT#1426: I got it working!!!
RyanT#1426: tho HMM has persistent arrays, so idk?
RyanT#1426: maybe it's something to do with arrays?
RyanT#1426: I reverted the `DelayLineAndBuffer` component to using a normal variable, and everything works now, and the other component's persistent data works fine
GHXX#9078: but it is surprising that it does shout out the name of the missing key
ieee 802.11ac#6337: i was looking at the wrong source file oops
GHXX#9078: when you do dictionary.get(KEYHERE), then KEYHERE wasnt in dictionary im pretty sure
GHXX#9078: no its an error from the dictionary type
RyanT#1426: 
ieee 802.11ac#6337: > the given key 'System.Boolean[]' was not present in the dictionary. <[newline]> maybe try including System?
RyanT#1426: 
RyanT#1426: after I placed the component, it got borked
GHXX#9078: maybe it expects the data to be there already
GHXX#9078: what you can try though is making a new map
GHXX#9078: like, thats very fishy
GHXX#9078: it seems odd that it would try to load a non existent key caled 'System.Boolean[]'
RyanT#1426: IE, array of type bool
RyanT#1426: `bool[]`
GHXX#9078: 
GHXX#9078: whats the type of Data.mem
RyanT#1426: it references `Ryan.TV.DelayLineAndBuffer.SetDataDefaultValues()`, but I see no issues with that function
RyanT#1426: but what does that mean???
RyanT#1426: 
GHXX#9078: thats probs your error
RyanT#1426: here is this in text
RyanT#1426: the other log has basically the same things as this
RyanT#1426: here is what is in the console
GHXX#9078: what about the other log? (server, or client)
RyanT#1426: no. the only thing that has changed since the last time I opened the save was this code
GHXX#9078: are you possibly loading up an old save, where you placed this component when the input or output count of the component block was different from now?
RyanT#1426: this is the only other code file
GHXX#9078: are there other code files?
RyanT#1426: The main code file ^^^
RyanT#1426: 
GHXX#9078: what does your c# code look like?
RyanT#1426: yes, there are no errors reported <[newline]> ``` <[newline]> 2022-01-29T21:21:19Z | WARN  | [Server] Running in unverified mode, player identities will NOT be verified. To turn on verified mode, edit config.succ. <[newline]> 2022-01-29T21:21:19Z | INFO  | [Server] Loading mods... <[newline]> 2022-01-29T21:21:19Z | INFO  | [Mod manager] Loaded mod 'Base game' with 31 components, no logic scripts and no hooks <[newline]> 2022-01-29T21:21:19Z | INFO  | [Ryans Television Mod] mod initialized <[newline]> 2022-01-29T21:21:19Z | INFO  | [Mod manager] Loaded mod 'Ryans Television Mod' with 2 components, no logic scripts and no hooks <[newline]> 2022-01-29T21:21:19Z | INFO  | [Server] Loading save 'TV Test'... <[newline]> ```
GHXX#9078: did you check the log files?
RyanT#1426: can someone help me. I was making a LW mod, tried to add persistent data to a component, and even tho there is no error in the C# script, the game still crashes
StartForKiller#0001: a word
TheWildJarvi《THE SEMI SEER》#1337: a byte
Jimmy#8080: *a bit janky
Jimmy#8080: Lol
DanielGJ44#4557: When the janky is big 😳
Nik#1011: ur a big janky
Jimmy#8080: There does exist a "server-only" customdata system, which is used for the tick counters in Delayers. However it's a big janky to use.
Vinyl Boot Maven of Shade#1858: Could you provide some way of regulating what customdata is sent to client or server, and a means to save and load persistent data independent of replication? It'd be nice to specify a property in custom data as either server->client, client->server, or both, as well as possibly non-necessary, so it can be skipped if needed to lower traffic impact.
Ecconia#4929: But mostly the game does not know the origin of the issue itself... Also try to click the message, sometimes there is a stacktrace attached.
Ecconia#4929: `loglevel trace` in console. Or in the file in the `licc` folders.
ThePiGuy24#0369: ok, latest commit to gates galore breaks it
ThePiGuy24#0369: is there any way to set an actually useful loglevel?
ThePiGuy24#0369: and no actual error on the server side
ThePiGuy24#0369: *very helpful*
ThePiGuy24#0369: sometimes this, sometimes it just "Error was so bad that there wasn't even an error message. So you have this instead. (Sorry)"
ThePiGuy24#0369: after going though each, it seems to be gates galore that is causing the error
ThePiGuy24#0369: is there any way to force the logs to actually be useful rather than just stating the obvious?
ThePiGuy24#0369: nice, some mod is causing an error and the game is being incredibly unhelpful as to which, not even a stacktrace or something
ThePiGuy24#0369: found the mod sharing thread, but a proper list would be better
ThePiGuy24#0369: is there a list of mods, and if there is, it could do with being pinned
MS#5409: what about the ability to have it write a sequence of bits (in game rom) to a file and and link a id to it for use
Ecconia#4929: Good point, I mean yeah, mods can implement both types of ROM. <[newline]> But if you for example have each ROM choose a binary file to link to, instead of an ingame editor. <[newline]> All the ROM stores then is the reference to the "external" file. Sounds quite valid for a mod to do.
GHXX#9078: i could see the eeprom deduplication work, although it does come with some extra work. e.g. splitting data upon modification, threadsafety
PseudoGoose#2841: So it quickly  becomes more efficient to store a reference to a shared config object as the number of input pins grows. Even with a 2-pin display. And the loss of a single-color display is pretty negligible, a few bytes per display component
GHXX#9078: there it should be an advantage
PseudoGoose#2841: But displays can have up to 256 colors (8 input pins)
GHXX#9078: a reference is 4 bytes if its an integer or 8 if its a pointer on a 64 bit machine
PseudoGoose#2841: So if you select a bunch of displays and configure them together, or if you clone displays, they share the same underlying config object, and that is stored once per world
GHXX#9078: the interesting part is that an rgb color only takes 3 bytes to store, do just s reference to a color costs more than that
PseudoGoose#2841: Especially the ones with more pins, that would be a lot of color data being stored many times over
GHXX#9078: afterall it does help the user so they can pick the same color
PseudoGoose#2841: Well, imagine having a massive 2D display with a bunch of display components that all have the same color configuration
GHXX#9078: well that does make sense
GHXX#9078: ooooh
PseudoGoose#2841: It was either in a LWW or Jimmy said so somewhere else
GHXX#9078: this seems inefficient
PseudoGoose#2841: Yep
GHXX#9078: are you sure?
GHXX#9078: because then modifying one means you need to split it up, and each time you modify one you need to check if there is eeprom data stored already thats matching
PseudoGoose#2841: Vanilla Logic World already does this kind of deduplication for color settings on displays
GHXX#9078: it seems odd not to split it up
PseudoGoose#2841: Concurrently accessing the same code ROM
GHXX#9078: ah
PseudoGoose#2841: Like, if there are several separate computers in the same world
GHXX#9078: and also, why wouldnt you re-use the eeprom then?
PseudoGoose#2841: Which I don't think is done, currently
GHXX#9078: then savefile compression would take care of that
PseudoGoose#2841: Sure, but what if you have lots of EEPROMs that share the same data?
GHXX#9078: eeprom would be a component, therefore one should just save a byte array using component data, which is hopefully supported already
StartForKiller#0001: for example, an eeprom can have his data stored onto word data
Ecconia#4929: complex data such as images, or raw binary data <[newline]> These rather have their own file type. <[newline]>  <[newline]> Given there is a need for binary on world level <:bobby_thinking:692790276938399835> <[newline]> I feat that such things appear probably after the mod support launch. So just keep it in mind, preserve the possibility or so was my thought.
GHXX#9078: Here is my take on things: I think mods should be able to store <[newline]> 1) custom data per world (ideally any type, but as long as a string can be saved, json can be used to save ANY object) <[newline]> 2) custom data per component (again here, ideally any type) <[newline]>  <[newline]> once this is fulfilled, i dont see anything that couldnt be done <[newline]> saving data per circuit board for example can be achieved using world-data, thus adding the ability to save per-circuit board data may be neat in some cases, but can easily be emulated, thus isnt that important imo <[newline]>  <[newline]> so yeah, if customdata lets you achieve 2) and extradata provides point 1), then i dont see anything that should be added. (i have not looked at customdata or extradata, but i outlined the requirements above)
Jimmy#8080: What are some examples of mod data you'd want to save that can't go in the `CustomData` field of a component or in the `ExtraData` system?
GHXX#9078: ^^
StartForKiller#0001: and be more compatible with loading a world with mod components not present, just deleting them from the file, or if a mod fails to just load the save with the mod unloaded
StartForKiller#0001: yeah, that's needed
Ecconia#4929: <@154964593397989376> reminds me now that I see it. Support for mod data in saves, compatible with the hub. <[newline]> In case that is not yet a TODO on your mod update list.
GHXX#9078: of course!
StartForKiller#0001: oh, ok, but you can cancel the connection and start a new one?
GHXX#9078: check the readme file
GHXX#9078: yes you can do this
StartForKiller#0001: so then you could attach it to a computer and send data to any ip in a dynamic way
StartForKiller#0001: i mean, to set the ip with pins
StartForKiller#0001: i'm not saying that
GHXX#9078: <@!207164528222404608>
GHXX#9078: see the readme in https://github.com/GHXX/LogicWorld-TcpBridge and/or <#934507275459104839>
GHXX#9078: it can be
StartForKiller#0001: and the port
StartForKiller#0001: it could be a good resource if the ip can be selected from the game itself
GHXX#9078: but yeah, check the thread also, <@!282927907947544588>
GHXX#9078: fixed
GHXX#9078: oh, good catch
EmergencyTemporalShift#0001: Also, the last line in the readme is "Once this is written, you must enable the enable-pin, to start the connection. Writing additional unexpected bytes wi"
GHXX#9078: Tcp Bridge help
GHXX#9078: kk
EmergencyTemporalShift#0001: I'm kinda a tinkerer, it helps if I start with something
GHXX#9078: there is documentation on the git repo if you want to tackle it yourself
GHXX#9078: just a shift register feeding data
GHXX#9078: but it's pretty simple
GHXX#9078: i have an example world
GHXX#9078: well
EmergencyTemporalShift#0001: https://logicworld.net/search?q=tcp doesn't have any results
EmergencyTemporalShift#0001: Are there any example worlds for the tcp mod?
EmergencyTemporalShift#0001: That did it
Vinyl Boot Maven of Shade#1858: For tcpbridge you'll want the folder called mod. The mod folder should have a manifest.succ file in it.
Vinyl Boot Maven of Shade#1858: And you put it in the gamedata folder? That's where mods go.
EmergencyTemporalShift#0001: The TCP mod
GHXX#9078: i always threw mine into the content folder iirc using a symlink
GHXX#9078: the game has a mods folder?
Vinyl Boot Maven of Shade#1858: That should be right. Which mod?
EmergencyTemporalShift#0001: Is there something I'm missing about installing mods? I extracted the zip and dropped its contents in the mods folder.
GHXX#9078: at the end of they day, you could always hook any function using harmony, although this goes into very advanced c# territory, since ideally when doing that you know what happens exactly to avoid any terrible issues
GHXX#9078: but yeah i mean
GHXX#9078: neither ModEventHandler nor ModHookHandler exist in LogicAPI, nor in LogicAPI.Server nor in LogicAPI.Client
GHXX#9078: but ModHookHandler should be called ModEventHandler then, and thats not a thing
Nano#8786: Everything seems much easier now that i see you can just browse the dlls
Nano#8786: It would make sense
GHXX#9078: maybe its called Events instead?
GHXX#9078: 
GHXX#9078: 
GHXX#9078: however the logicapi dll doesnt contain any hooks iirc
GHXX#9078: https://docs.logicworld.net/api/LogicAPI.Hooks.html
GHXX#9078: because i did look through game dlls, but i couldnt find a trace
GHXX#9078: <@!154964593397989376>
GHXX#9078: are hooks impemented yet?
Nano#8786: like just loging on a component placement for example
Nano#8786: So how would i get a simple listener on a server side world event ?
Vinyl Boot Maven of Shade#1858: Np
Nano#8786: I really don*t know much about csharp so sorry if my questions are really basic and noobish
Nano#8786: thx for the info
Nano#8786: oh so i can directly reference the dlls
Vinyl Boot Maven of Shade#1858: Add references to the lw dlls?
Nano#8786: But how would i go about setting up auto imports from the namespaces from the LW api ?
Limón#7879: you can use visual studio
Nano#8786: And also zhat ide do you guys use ( i use vscode ) but i get frustrated from not having auto imports and my namespaces keep just being wrong
Nano#8786: Hey can someone quickly help me ? How would I the WorldHookHandler events like OnPlacedComponent for example ?
EmergencyTemporalShift#0001: Aah, thanks
Vinyl Boot Maven of Shade#1858: See threads.
EmergencyTemporalShift#0001: Is there a master list for mods like there is for worlds?
Limón#7879: True <:ferrisPensive:857440844549324851>
MetalQueer#2283: + ratio
Stenodyon#8192: We have been more than patient with you
Stenodyon#8192: You have shown time and time again an unwillingness to listen to other people's arguments
Stenodyon#8192: You demand professional-level competency from a bunch of hobbyists who are just here to have fun
Stenodyon#8192: It's the nth time you start shit because you want to be pedantic
Stenodyon#8192: If you continue being a dick you will get a timeout
MetalQueer#2283: i love how everyone here teamed up to ratio this man
MetalQueer#2283: gpu moment
CrispyPin#1149: can someone rewrite particle physics in C?
Saltypretzel#0321: Yeah why can’t we just send electricity without electronics
CrispyPin#1149: why must everything use that bloated pile of garbage
CrispyPin#1149: oh true
Verlio_H#0201: well we already know that some subatomic particles run electron
Verlio_H#0201: lmao
CrispyPin#1149: subatomic particles run nvidia drivers, quantum mechanics make so much sense now!
DanielGJ44#4557: Or alternatively, it's all GPU? Always has been.
DanielGJ44#4557: GPU-ception
KyleRokuKyu#6975: The subtle irony (Can't wait for the definition of irony to be argued) is that people are getting heated arguing about pixels displayed by a GPU as being or not being a GPU themselves.  What renders the GPU? (Be it or not a GPU) It's a GPU.  What renders that? <[newline]> Is it GPUs all the way down? <[newline]>  <[newline]> I guess these questions have just as much resolution (lol) as the rest of the argument.  None, that is. <[newline]> There is no resolution here, only people, until the end of time, discussing the definition of a GPU instead of playing games or building them. <[newline]> Given, though, that it's an endless cycle of back and forth over whether or not it's a GPU until time stops........ <[newline]> I guess the answer really is that it's GPUs all the way down.
DanielGJ44#4557: That is me-level trolling, I appreciate it lol
circuitgamer77#0377: (joke, not arguing :)
circuitgamer77#0377: But if you put a boiler on top...
DanielGJ44#4557: Sad!
TheWildJarvi《THE SEMI SEER》#1337: calling a firepit an engine would be
DanielGJ44#4557: That way our technical explanations in a server about a circuit simulation game can have peer-reviewed and approved definitions
DanielGJ44#4557: Discord should add footnotes to messages so we can define in an appendix what the jargon we are using is, top tier feature
DanielGJ44#4557: I do think it's important to have a standardization but I felt at least that the term GPU was broad enough to encompass the aforementioned project, just kinda seems like a "mine is better therefore yours isn't this thing" type deal
DanielGJ44#4557: So I was just trolling afterwards with a parallel situation lol
DanielGJ44#4557: Of all that person posted of their project literally three letters were taken from it with the rest of it ignored, and the three letters that WERE USED were used to diminish the project
DanielGJ44#4557: I don't really care about the semantics of it
commanderguy3001#6660: _looks up `geriatric partitioning unit`_
Vinyl Boot Maven of Shade#1858: I agree with standardization and defining terms well to enhance communication and understanding. Particularly, I very much like precise language, like German, and Japanese for pronunciation. But English is not so much a precise language, and context can play a large role as well. When talking about atmospheric physics, I may call a hurricane a heat engine, as it describes the thermodynamic processes it undergoes. It is by no means the colloquial manor of referencing an engine, but in the context, it helps pinpoint the topic of discussion. GPU as an acronym, could mean graphics processing unit, general processing unit, or geriatric partitioning unit. Under context, it helps further describe a given topic. Calling the orderly staff at an old folks home the geriatric partitioning unit might come off as a bit odd. But, if it helps fine tune a conversation, I think the use of an acronym in a given context should not be discouraged, even if a particular group of people prefer to explicitly use it for a different or more precise definition.
DanielGJ44#4557: YUGE
DanielGJ44#4557: calling a single cylinder 2 stroke engine  an engine is disingenuous to those of us who are working on megachad V16 4 stroke engines, therefore the former is not an engine because my engine is more complex
TheWildJarvi《THE SEMI SEER》#1337: Okay noted, I'll say 'jinkies' instead.
TheWildJarvi《THE SEMI SEER》#1337: Because, that's a yikes
TheWildJarvi《THE SEMI SEER》#1337: Uhm why isn't it? It's not being cruel lmao. Does a yikes really trigger people?
Stenodyon#8192: It doesn't matter what the yikes was for, it is not an appropriate way to express disagreement however strong it may be
TheWildJarvi《THE SEMI SEER》#1337: The yikes is referring to being okay calling anything a computer. For exactly the issue jimmy just stated
Jimmy#8080: At the same time, terms -- especially technical terms -- need to have agreed-upon meanings, otherwise effective communication is impossible. I do think this discussion is an important one, but we need to have it in a civil manner (rule #1)
Stenodyon#8192: people call stuff wrong names all the time especially in hobbyist communities, it's not hurting anyone
Ecconia#4929: I assume the yikes referred to the amount of text 🙂 (Since it was reacted very instantly) <[newline]> [Btw, for me discussion over, bed be calling. I pretty much got my point(s) delivered anyway.]
Stenodyon#8192: > gets told they come across as condescending <[newline]> > reacts with "yikes" to a differing opinion
Ecconia#4929: > my question still holds why not call it a rectangle processing unit if thats all it does? <[newline]> You can call a computer: Clever bit flipping device CBFD <[newline]> Totally fine! <[newline]> But you might as well also call it computer. You can call a GPU even if it only draws rectangle: Graphic Helping Hardware GHH, but GPU is just as fine. <[newline]> You may in general use any short you want to. But, it is helpful if you use terms which other people already know. <[newline]> Let us take GPU. When someone says "I am building a GPU for ..." everybody (in this field - us) knows: "He is building a thing which makes images to display them, in a context of computing." Which is in most cases (the ones on this server) the correct meaning. <[newline]>  <[newline]> So just, because you found some specification somewhere. For example the earlier GHH, that does not mean, that it is the correct specification/definition. <[newline]> Now you might argue, that it would destroy the purpose of such abbreviations, but sorry, that is not correct. You can short anything with any meaning like that. <[newline]> And when most of us, on this server (and most Minecraft players) say: GPU. We mean the hardware, which helps to create images, by being a unit that processes graphics in one or another way. 🤔 Might match the definition of the GPU we know. <[newline]>  <[newline]> Personally I do not quite understand your point of why it is a problem calling a simple GPU, or something not quite a GPU a hurtful thing to the ones working on that. <[newline]> Cause if I would work on GPUs and there are younger people showing interest into them, I would be happy and trying to share the joy by helping/teaching them.
TheWildJarvi《THE SEMI SEER》#1337: Look at my original comments
TheWildJarvi《THE SEMI SEER》#1337: Once again that's fair. But don't be upset when I try to bring this issue up respectfully at first
Stenodyon#8192: I'm pretty sure they don't care
TheWildJarvi《THE SEMI SEER》#1337: But it's disingenuous and misleading to people working on those legitimate things.
TheWildJarvi《THE SEMI SEER》#1337: That's fair, I am a dick. But don't lie about what a machine does by calling it something it isnt
Jimmy#8080: <@!121786044197765131> your perspective is legitimate, but your tone comes across as condescending. Using terms like "quite cringe" and "lmfao" about other people's statements makes you sound like a dick.
TheWildJarvi《THE SEMI SEER》#1337: okay btw i made a CPU <[newline]> > points to an inverter <[newline]> see... it computes the not function therefore its a computer. <[newline]>  <[newline]> nah mate
TheWildJarvi《THE SEMI SEER》#1337: im trying to be serious here
GHXX#9078: just a  <[newline]> "x,y,z,a,b,c,d,e processing unit"
TheWildJarvi《THE SEMI SEER》#1337: with programmable shaders
TheWildJarvi《THE SEMI SEER》#1337: its a gp-gpu
GHXX#9078: rtx3090 not actually a gpu
GHXX#9078: maybe then call a gpu not a gpu but "**insert feature list here** processing unit"
TheWildJarvi《THE SEMI SEER》#1337: you are free to assert that naming conventions dont matter, but to people working in that field, its hurtful.
TheWildJarvi《THE SEMI SEER》#1337: my question still holds why not call it a rectangle processing unit if thats all it does? especially if it doesnt do general geometry.
TheWildJarvi《THE SEMI SEER》#1337: im going to stick by this. calling it a gpu is disingenuous to people actually working on legitamate gpus
Ecconia#4929: <@!121786044197765131> Just cause you do not like something, that does not make it wrong. <[newline]> A GPU is a piece of hardware that helps to generate an image, they are even used to fancily transport the image to a display. <[newline]> Due to the nature of LogicWorld GPUs can be included inside a display for a compact build style. <[newline]> Drawing lines drawing rectangles or anything like is already a type of graphic. Which gets processed and displayed in an image (also a graphic). <[newline]> And you are free to deny whatever you want, but keep that to yourself. That does not make the opinion and knowledge of other people wrong. <[newline]> So please stop insulting some here, when they use the right term for something, except that it is just a simple but proper version of it. <[newline]> -> And that goes in general, you keep doing this over and over. Broaden your horizon, understand why others think the way they do.
TheWildJarvi《THE SEMI SEER》#1337: besides the fact that you dont get the name recognition of GPU, but atleast its more honest
TheWildJarvi《THE SEMI SEER》#1337: why not call it rectangle processing unit lmfao
TheWildJarvi《THE SEMI SEER》#1337: actually, its quite cringe
TheWildJarvi《THE SEMI SEER》#1337: seems disingenuous to call something that draws rectangles a GPU.
Ecconia#4929: So now that it is ambiguous we can even choose which to use. Perfect. Anyway, most of the time GPU is the right term. No denying that.
TheWildJarvi《THE SEMI SEER》#1337: ``` <[newline]> The term was first used by Sony in 1994 with the launch of the PS1. That system had a 32-bit Sony GPU (designed by Toshiba). The acronym was used before and after that referring to a geometry processing unit—GPU. TriTech introduced the Geometry Processor Unit in 1996 and Microsoft licensed it from them in 1998. It was part of a multi-chip solution and used the OpenGL API. <[newline]> ```
TheWildJarvi《THE SEMI SEER》#1337: https://www.computer.org/publications/tech-news/chasing-pixels/is-it-time-to-rename-the-gpu
TheWildJarvi《THE SEMI SEER》#1337: if you research it didnt stand for graphics processing unit
Ecconia#4929: 1970s are pretty much fine with calling it like that 🙂
TheWildJarvi《THE SEMI SEER》#1337: ( i did it in a MC video title for clickbait views tho) <a:KEKWgif:829851650717909094>
TheWildJarvi《THE SEMI SEER》#1337: its def misleading to call it a GPU, im really only bringing this up as someone seriously working on rendering hardware and even I am reluctant to call my system a GPU
Ecconia#4929: But nevertheless it is still a GPU. Look it up Jarvi: <https://en.wikipedia.org/wiki/Graphics_processing_unit> <[newline]> Basically anything which is so slightly composing an image or helping to alter memory to more quickly create an image with dedicated hardware is a GPU. <[newline]> It is so easy. Yes ofc these days GPUs do so much more, but that does not change their origin. <[newline]> ||But yes, how you call it is up to you. You guess the rest.||
TheWildJarvi《THE SEMI SEER》#1337: rectangle drawing is very primitive. would probably be more appopriate to call it a graphics adapter or accelerator, but its not doing any form of matrix math
Macrohard Onfire#0662: and it's not really just a display
TheWildJarvi《THE SEMI SEER》#1337: still, def woulndt call it a gpu
Macrohard Onfire#0662: Nono, i mean a gpu <[newline]> Well a crappy one at least, it's a recreation (to reduce lag) of one me and my friends built on a server and with correct inputs it can draw rectangles onto its vram and when you power a certain input it serially sends all of its vram data to the display
TheWildJarvi《THE SEMI SEER》#1337: please dont confuse a display with a real GPU <:please:917038438824411146>
GHXX#9078: if i understand your message correctly, then yes. <[newline]> Basically, your logic component gets an update if: <[newline]> a) you called this method in the last tick <[newline]> OR <[newline]> b) any inputs change (unless they are marked as ones that do not trigger an update)
Macrohard Onfire#0662: Just wanna make sure i understand but if it works like that then it's just what i need. Thanks a lot
Macrohard Onfire#0662: So every tick i check if it has outputed its whole vram and if not i call this function to update it next tick?
GHXX#9078: <@!413079257254723584>
GHXX#9078: simply call this function during your logic-update
GHXX#9078: that way it gets updated again in the next tick
GHXX#9078: in your c# code mark the gate as dirty
Macrohard Onfire#0662: how would i make a component update multiple ticks in a row with just 1 external update (powering 1 input once). If there's no other way i'll make an input that just gets powered/unpowered every tick just to update it but if there's a better way i want to use it <[newline]> i'm making a gpu and i want it to output serialy the whole image when a certain input gets powered and i need it to update hundreds of ticks to output its whole vram
MS#5409: Interesting that excessively calling the cleanup call makes it load
MS#5409: While true...
MS#5409: Ah
GHXX#9078: no, a mod
MS#5409: Were you using the console?
GHXX#9078: but thats not a proper fix to the loading issue
GHXX#9078: so yeah, turns out you can infact decrease memory use by aggressively calling GC.Collect()
GHXX#9078: as it used to crash
GHXX#9078: i "fixed" the loading of the tetris world
MS#5409: 👍
GHXX#9078: <@!327048348303622145> 😄
GHXX#9078: im sure some of you are familiar with the huge-map issue, so im wondering if maybe we could repeatedly call GC.Collect() using a mod 🤔 to maybe fix that
Limón#7879: or maybe both on one display
TheWildJarvi《THE SEMI SEER》#1337: <@!377717131556552708> can you add a display to your mod that instedad of RGB is in HSV? it will allow me to do anti aliased lines easily
TheWildJarvi《THE SEMI SEER》#1337: make sure its AWGN
GHXX#9078: then people can customize how aggressive the pulsing is
GHXX#9078: two inputs: <[newline]> CLK: a rising edge performs a pulse on a random peg <[newline]> MODE: 1 = global; pulse is applied on a random peg on the map, 0 = local; pulse is applied within a certain distance, e.g. 25
GHXX#9078: could be a block which pulses random wires or pins near it
Dragon Lord#6944: I think I suggested this a while back... I called it the signal noise mod, and the amount of noise was determined by the length of the wire
GHXX#9078: should make a cosmic radiation mod, where some wires randomly get pulsed (very rarely) <[newline]> (lets vote on this one actually)
Limón#7879: that's an amazing emoji
GHXX#9078: <a:pins:907098101821616178>
Limón#7879: can we get a check pins emoji
GHXX#9078: check pins, might be on the docs page
Funky Egg#5652: is there a good modding guide for logicscript
Limón#7879: 🚒
TheWildJarvi《THE SEMI SEER》#1337: engifars
Ecconia#4929: engineers when good at nothing: ?
GHXX#9078: cuz its gonna be heavily integrated with the backend.
Limón#7879: probably
GHXX#9078: about the mod manager though, ideally jimmy would throw that in
GHXX#9078: im 😈 then :P
Limón#7879: engineers when good at engineering: 😄  <[newline]> engineers when good at programming: 😭  <[newline]> engineers when good at programming and engineering: 😈
TheWildJarvi《THE SEMI SEER》#1337: <:xqcA:898264214152560660>
TheWildJarvi《THE SEMI SEER》#1337: <a:KEKWgif:829851650717909094>
TheWildJarvi《THE SEMI SEER》#1337: my software skills are dog shit
GHXX#9078: that's like 15 lines of code in total
GHXX#9078: make a mod <[newline]> use Harmony to add a prefix to the method that gets the message and in there modify the argument and prefix it with the timestamp
TheWildJarvi《THE SEMI SEER》#1337: i mean, even the server should have timestamps
TheWildJarvi《THE SEMI SEER》#1337: xD
TheWildJarvi《THE SEMI SEER》#1337: pls make the mod <3
Limón#7879: editing client side is *so* easy
GHXX#9078: yeah
GHXX#9078: that seems easy
TheWildJarvi《THE SEMI SEER》#1337: a mod that adds timestamps to chat would be dank too
GHXX#9078: automated error reports could also really help mod devs
GHXX#9078: but it could be interesting to keep a record of crashes to automatically detect conflicts
GHXX#9078: i suggested that in <#910673109164638239>
circuitgamer77#0377: Has anyone suggested a mod that allows you to download other mods in-game?  Could also add functionality to detect/resolve conflicts?
Vinyl Boot Maven of Shade#1858: I was thinking of doing something like that with an int and bit shifts.
Limón#7879: and every tick the array gets shifted to the left and the last value gets read
Limón#7879: [1, 1, 0, 0, 0]
Limón#7879: and you give a 2 tick pulse
Limón#7879: so 5 ticks would be [0, 0, 0, 0, 0]
Limón#7879: that holds a buffer of inputs then pushes them out
Limón#7879: also I was thinking of making a better delayer mod
Limón#7879: if they change it to have a phasic link add/remove the same tick there would be no problems
Vinyl Boot Maven of Shade#1858: Well. You'd at least have to detect infinite loops.
Limón#7879: but it would probably be a bit of changing for the other thing
Limón#7879: for the inverted one
Limón#7879: you could probably just extend the phasic link and just invert the output
Limón#7879: I doubt it
Vinyl Boot Maven of Shade#1858: Thought so. Yea but that would require an overhaul of the simulation design.
Limón#7879: because phasic inverter could be used for 0 tick everything
Limón#7879: and if you could change the links in 0 ticks
Limón#7879: if there was an inverted version of a phasic link it would be possible
Limón#7879: not possible
Limón#7879: nope
Vinyl Boot Maven of Shade#1858: Limon, you tried making 0 tick gates right? Did you get any to actually work? Besides or of course?
Limón#7879: also if you check pins you can see community resources for C# modding
Vinyl Boot Maven of Shade#1858: I'm at work on break, so I can't look up code.
Limón#7879: 0 tick connections
diffi#2137: i don't exactly know what phasic link is, could you explain it please?
Vinyl Boot Maven of Shade#1858: Phasic links allow signals to pass between input pegs in 0 ticks. But it takes 1 tick to create and remove them.
diffi#2137: hey do you guys know how do I implement 0-tick custom gates into a mod?
spidunno#6969: lmao it must be pretty broken for the creator to say not to use it
cheese3660#8641: I got burnt out around the point I was gonna update it
cheese3660#8641: Same, I havent worked on it in months
TheWildJarvi《THE SEMI SEER》#1337: https://discord.com/channels/401255675264761866/401255675264761868/929472100052373556
TheWildJarvi《THE SEMI SEER》#1337: i used 4 of those displays to make a 512x512 display
TheWildJarvi《THE SEMI SEER》#1337: np :)
TheWildJarvi《THE SEMI SEER》#1337: 256x256 displays 8-8-8 RGB, clock, and floodfill pins
spidunno#6969: thanks!
TheWildJarvi《THE SEMI SEER》#1337: https://discord.com/channels/401255675264761866/910673109164638239/911459427004063765
TheWildJarvi《THE SEMI SEER》#1337: in the cheeseutils mod, the display skips pixels
TheWildJarvi《THE SEMI SEER》#1337: the display updates at a fixed 10 FPS regardless of simulation speed
TheWildJarvi《THE SEMI SEER》#1337: and not tick limited
TheWildJarvi《THE SEMI SEER》#1337: its way better
TheWildJarvi《THE SEMI SEER》#1337: so if you want addressable displays download the HMM mod
spidunno#6969: well lucky for me I don't really care about this save
TheWildJarvi《THE SEMI SEER》#1337: and the display is tick limited
TheWildJarvi《THE SEMI SEER》#1337: it breaks my saves
TheWildJarvi《THE SEMI SEER》#1337: uhm id reccomend not using that mod
spidunno#6969: Sorry if that's not phrased well it's my first time asking anything.
spidunno#6969: In CheeseUtilMod, how do the addressable displays work? For example the 4x4 addressable display there is 6 inputs, what do those pins do?
Vinyl Boot Maven of Shade#1858: When I go on a server with no mods but with mods locally installed. I get a client crash about ID missmatch.
GHXX#9078: could likely make a mod for it lol
Ryan#9918: Mods aren't entirely supported so I'm not surprised some weird behavior sprouted up
Ryan#9918: Not sure what was going on then, might've been a weird fluke.
GHXX#9078: e.g. when a mod is uninstalled or changed in a way which the game cant handle
GHXX#9078: there should really be a feature that removes invalid modded blocks
Ryan#9918: The server didn't have any placed though, at least I dont think there are. They might be ghosted though in case we didn't properly remove them.
GHXX#9078: then installing the new mod version
GHXX#9078: what should work is simply removing all modded blocks from the map
Ryan#9918: Thanks for the help
Ryan#9918: Guess the best way to clean it up is to load it in single player and then load it back fresh into the server again.
Ryan#9918: Its possible he tested the mod before we added the other component so the map still expects it in some way.
Ryan#9918: That's really peculiar.
Ryan#9918: Yeah that worked.
Ryan#9918: Huh
GHXX#9078: that should 100% work if it works in singleplayer too
GHXX#9078: with the new mod version
Ryan#9918: Yep doing that now
GHXX#9078: okay, still though, try making a new map on the server
Ryan#9918: Nope
GHXX#9078: did you change the input or output count of any part that was previously defined?
Ryan#9918: Going from 1 to 2 modded components.
Ryan#9918: Right so before the mod only had one component. Later we added the additional script and updated the component file for the new block.
GHXX#9078: you said it works when you only use one component (originally you said only just one mod)
Ryan#9918: They both show up in the column titled "Arithmetic"
Ryan#9918: How do you mean?
GHXX#9078: i am wondering though, how could you switch from just using one component to two?
GHXX#9078: with the mod installed
GHXX#9078: try making a new world on the server
Ryan#9918: I viewed it as a one folder group with two mods, being the two new components.
Ryan#9918: I guess it *would* be viewed as that.
Ryan#9918: Ah, more miscommunications on my part. Sorry, that's correct.
GHXX#9078: so its 1 mod, but two modded components
Ryan#9918: because both blocks show up under the same column
Ryan#9918: Yeah its under the same folder
GHXX#9078: you only sent one
Ryan#9918: I just sent em as a dm
GHXX#9078: or just upload them here actually
Ryan#9918: Yeah sure
GHXX#9078: can you just send me both mod zips?
Ryan#9918: But the block data shares the same component file
Ryan#9918: The scripts are different
Vinyl Boot Maven of Shade#1858: I would think so too
GHXX#9078: maybe the file content is the same, but then ids would clash i think?
GHXX#9078: two mods shouldnt be able to use the same file, since each mod comes with their own file
Vinyl Boot Maven of Shade#1858: You mean the same component.succ file in different mods? Cause the components are referenced by ids declared in that file.
GHXX#9078: what do you mean with that exactly?
TheWildJarvi《THE SEMI SEER》#1337: nopee
Ryan#9918: Do your mods share the same component file?
GHXX#9078: in minecraft there are mods for claiming chunks, and if a chunk is claimed then others cannot modify it
TheWildJarvi《THE SEMI SEER》#1337: ?
GHXX#9078: chunk claiming in LW?
TheWildJarvi《THE SEMI SEER》#1337: till i do some op sec
TheWildJarvi《THE SEMI SEER》#1337: but its not open to the outside network yet
TheWildJarvi《THE SEMI SEER》#1337: yessir
GHXX#9078: are you running a server?
GHXX#9078: i dont see a reason why not
Ryan#9918: Are you able to join/host a server with more than 1 mod?
Ryan#9918: We didn't try with just the second mod solo
Ryan#9918: I'll be able to answer that question later most likely.
GHXX#9078: and im assuming server and clients had the same mods previously?
GHXX#9078: can you reproduce the error with installing just the second mod?
Ryan#9918: We had none placed
GHXX#9078: or did you have a lot of modded blocks placed?
GHXX#9078: ah, that might be a different issue then
Ryan#9918: Yeah, but we removed the mods so we could play.
GHXX#9078: are you playing right now?
Ryan#9918: Our world is at 4mb
Ryan#9918: I'm not hosting though.
Ryan#9918: I'm sitting around 2.4gb rn
GHXX#9078: and does the memory use exceed 4GB ?
Ryan#9918: Yeah, it takes a while.
GHXX#9078: does your client load for a while when you go into the world?
Ryan#9918: This is all we would get to.
Ryan#9918: ``` <[newline]> **2022-01-07T06:59:03Z | WARN  | [Server] Running in unverified mode, player identities will NOT be verified. To turn on verified mode, edit config.succ. <[newline]> 2022-01-07T06:59:03Z | INFO  | [Server] Loading mods... <[newline]> 2022-01-07T06:59:03Z | INFO  | [Mod manager] Loaded mod 'Base game' with 31 components, no logic scripts and no hooks <[newline]> 2022-01-07T06:59:03Z | INFO  | [Mod manager] Loaded mod 'Arithmetic' with 2 components, 2 logic scripts and no hooks <[newline]> 2022-01-07T06:59:03Z | INFO  | [Server] Loading save 'Stuff!'... <[newline]> **```
GHXX#9078: im wondering if it might be the huge-world issue
Ryan#9918: lemme find one
Ryan#9918: There's nothing interesting in our client logs
Ryan#9918: Sorry, didn't realize I worded that wrong lmao
Ryan#9918: OH my bad
GHXX#9078: and is there anything interesting in your client logs?
GHXX#9078: im assuming you and your friend are on windows?
GHXX#9078: ah thats different from what you mentioned
Ryan#9918: Server stayed up, just a client crash
GHXX#9078: does the server crash or does the client crash?
Ryan#9918: The components share the same component file, which shouldnt be an issue
Ryan#9918: Yes, mods can be played locally
GHXX#9078: can you play with both mods locally?
GHXX#9078: ok
Ryan#9918: Logs didn't have anything yes, pretty sure the console output just said that we disconnected
GHXX#9078: im assuming you checked the logfile instead of the console output?
Ryan#9918: Just shits the bed
Ryan#9918: It says nothing
TheWildJarvi《THE SEMI SEER》#1337: whats the console log say about the error
Ryan#9918: And the components load fine at game load as well.
Ryan#9918: It works fine in single player is the thing
GHXX#9078: is there any errors in the server log? <[newline]> have you tried running just the second mod? maybe the second mod is broken
TheWildJarvi《THE SEMI SEER》#1337: im able to
Ryan#9918: Me and a friend are able to run fine with 1 mod but the moment we introduce another one the server just always crashes.
Ryan#9918: Has anyone run into an issue with using more than 2 mods in a server?
Limón#7879: discord threads auto archive and you can unarchive them
White Laurent#5414: forums are not only a discussion forum, sometimes they also function as some kind of archive, or library you could say :)
White Laurent#5414: yes, but it's still pretty clunky if you compare it to forums
Limón#7879: some servers I have seen have done that
Limón#7879: you could just make a standard of making threads
Limón#7879: threads :p
Vinyl Boot Maven of Shade#1858: We might have to wait for modding to be officially supported.
Darkhog#8724: Exactly. And I meant it for both mod development and mod listing.
White Laurent#5414: But it's kinda hard to search for discussions on discord, while in forums you could help many people with let's say one discussion
Limón#7879: but that might be just a me thing
Limón#7879: and I think a logical step would be to join the discord to ask for help for this game
Limón#7879: and not everyone uses the forums while basically everyone uses discord
Limón#7879: which means questions get answered faster
Limón#7879: discord is more active than forums
Limón#7879: otherwise I wouldn't like it to be asking for help
Limón#7879: if you mean to share mods than yes
Limón#7879: that sounds bad tbh
GHXX#9078: quite complicated code, but here is an example of what you can do xD <[newline]> https://github.com/GHXX/LogicWorld-TcpBridge <[newline]> could also be worth taking a look at tbe Format of some files :)
Darkhog#8724: I feel like there should be a forum section for modding
White Laurent#5414: Thanks a lot!!
Vinyl Boot Maven of Shade#1858: The mod sharing thread has some good examples as well. <[newline]> One thing to note, the game compiles the c# on startup, so no need to build libraries or anything. Though making a project and including the libraries in something like Visual Studio helps alot with autocomplete and what not. I also use Ilspy to decompile the dlls.
Vinyl Boot Maven of Shade#1858: https://github.com/LonnonDev/LW-Modding
Vinyl Boot Maven of Shade#1858: Sure, just a sec
White Laurent#5414: couldn't find anything reliable in the net
White Laurent#5414: do you have any information that could bring me further in my modding journey?
White Laurent#5414: oh nice, let's start learning C# xD
Vinyl Boot Maven of Shade#1858: I think most people use c#. The logiscript system is very touchy.
White Laurent#5414: anybody knows the easiest way to make an OR gate with the logiscript system?
BlueSquare#0307: ah
Vinyl Boot Maven of Shade#1858: UI isn't featured yet for modding. It basically has to be done from scratch with unity API.
VigilanteHobo#1873: the main use case being decoders where they will be stacked a lot
VigilanteHobo#1873: its a working solution but will up component counts :(
Tape#8369: draw out the truth table for a switch between buffer and inverter, then draw out the truth table for xor and xnor
KyleRokuKyu#6975: Yea xor/xnor would actually be better there lol
BlueSquare#0307: is there a mod that adds descriptions to parts?
Tape#8369: yeah use the xnor connected to a switch to control the behaviour
VigilanteHobo#1873: pretty much only for the application of faster decoder programming
VigilanteHobo#1873: I mean switching between the components instead of a behavior switch
Tape#8369: wouldn’t an xor/xnor gate work for that
KyleRokuKyu#6975: I never said it wouldn't 😛 <[newline]> Just that it's a thing you could do
Limón#7879: and maybe even 1 tick when not inverted too
Limón#7879: it would make the relay 1 tick when inverted
Limón#7879: impossible
KyleRokuKyu#6975: But a mod for that is also a damn solid idea
KyleRokuKyu#6975: Could do a switch on a relay that switches the signal between buffered and inverted
VigilanteHobo#1873: If I had a mod that allowed me to quickly switch between a buffer and inverter without rewiring then it would save a lot of time
VigilanteHobo#1873: I set them up so that I can swap them out, but rewiring them after switching takes some precision and time that adds up quickly
VigilanteHobo#1873: I don't know if this is how many people are doing decoders, but my decoders are lines of buffers and inverters
GHXX#9078: the api support should be there. can you elaborate on this further?
VigilanteHobo#1873: I don't know if there is good enough API support yet though
VigilanteHobo#1873: A lot of hassle from programming decoders could be eradicated with a mod that switches between buffers and inverters
MS#5409: It has busybox with a "limited" implementation of vi
Vinyl Boot Maven of Shade#1858: An update to HMM has been uploaded. Word D Latches and Relays have been added, and the code has been adjusted for organization purposes. A folder for previous versions has also been added. As Mod support is not official and some changes to mods can result in significant errors and possibly even break world saves, my hope is that in such cases, one can roll back to previous versions and recover.
PseudoGoose#2841: though you'd have to build a completely new system image to install them
PseudoGoose#2841: It looks like you're using buildroot, I'm pretty sure it has a vi package, and maybe nano/pico?
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Well that's useful but I mean on LW
Orionater#6345: WHY ARE YOU USING SOO MUCH MEMORY?
TheWildJarvi《THE SEMI SEER》#1337: https://github.com/hneemann/Digital
TheWildJarvi《THE SEMI SEER》#1337: use digital
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Of course, X can vary too
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: With X inputs on one side, X output on the opposite side and a enable input on top or another side
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: How can I make a custom truth table module? With an edit window where I type the outputs for each input
TheWildJarvi《THE SEMI SEER》#1337: its a well proven arch
TheWildJarvi《THE SEMI SEER》#1337: mips is used in a lot of things
MS#5409: <@!121786044197765131>do you know a editor i can push onto it that works on mips? (os is android based)
MS#5409: 😎
TheWildJarvi《THE SEMI SEER》#1337: <:pog:567801496440143903>
MS#5409: its my mp3 player
MS#5409: _talking about mips_
TheWildJarvi《THE SEMI SEER》#1337: working on a mips32 style cpu
Guardian9978#4039: Has anyone thrown together a W65C02S IC in Logic World?
GHXX#9078: what could also be cool: a block that pauses simulation and lets you process a single tick for every click
GHXX#9078: name idea: chaindelayer
TheWildJarvi《THE SEMI SEER》#1337: i agree 100%
KyleRokuKyu#6975: That's exactly what I mean, yea <[newline]> It'd be SO useful
TheWildJarvi《THE SEMI SEER》#1337: which i would love
TheWildJarvi《THE SEMI SEER》#1337: unless thats exactly what you mean
TheWildJarvi《THE SEMI SEER》#1337: imagine a 50 tick delayer that you can input 1010101010 etc in(alternating every tick) and 50 ticks later the output does that
TheWildJarvi《THE SEMI SEER》#1337: 1 tick pipelineable delay owuld be better imo
KyleRokuKyu#6975: So I can send a 1 tick pulse into a 30 tick delay and get a 1 tick pulse after 30 ticks of delay?
00asdf#7469: 1x not + 1x and gets you a 1 tick pulse, no matter the length of the input pulse
totobono4#5551: That make sense.
Verlio_H#0201: because us bedwars redstoners are limited by the low tick rate in minecraft restricting our ability to build fast cpus while playing bedwars
totobono4#5551: Why not just playing bedwars in minecraft ?
LFFB#5600: and it would be extremely hard to do that because its such an unrelated idea to the main game that you would basically have to do a game from scratch
LFFB#5600: i understand your idea but like, just building logic is kinda the whole point of the game
Nyoom#9922: Hey, wanted to give a mod suggestion. I really enjoy bedwars on minecraft and I think it would be a good idea to implement a bedwars mod in logic world to add a little spice to the game and something to do on the side besides building logic. Just 2v2 and 4v4 is good enough, and maybe some custom weapons like guns.
KyleRokuKyu#6975: Also a delay that delays any tick length input rather than requiring a minimum of the delay length
TheWildJarvi《THE SEMI SEER》#1337: having it as a modded component with selectable pulsewidth(like the delayer) would be op
TheWildJarvi《THE SEMI SEER》#1337: most peoples monostable designs here only work if you hold the button for more ticks than what you want
TheWildJarvi《THE SEMI SEER》#1337: a good monostable takes any input pulse length and converts to exactly what you want
TheWildJarvi《THE SEMI SEER》#1337: nah
GHXX#9078: thats like two blocks tho in vanilla <@!121786044197765131>
TheWildJarvi《THE SEMI SEER》#1337: also a monostable mod would be dank
TheWildJarvi《THE SEMI SEER》#1337: ah
TheWildJarvi《THE SEMI SEER》#1337: 1 peg for lamp input, 1 for button
GHXX#9078: cuz a lamp can have N pegs
GHXX#9078: technically 1+N right?
TheWildJarvi《THE SEMI SEER》#1337: 2 pegs
GHXX#9078: a lamp that you can click
TheWildJarvi《THE SEMI SEER》#1337: lamp with a button on it
HomelikeBrick42#1173: what is a button lamp?
TheWildJarvi《THE SEMI SEER》#1337: lol
GHXX#9078: could probs steal code from lamp and button
GHXX#9078: if anyone feels like making it
GHXX#9078: 
ThePiGuy24#0369: 0 bit 0hz 0 channel audio
jackson535#1361: inaudible audio
DADp#7461: analog 😍
Ecconia#4929: transmit as digital audio?
Limón#7879: not currently
Stefan#5422: Does anybody here think it would possible to send sound over wires
TheWildJarvi《THE SEMI SEER》#1337: Can I request a monostable mod? Lol. Pretty simple and light mod request compared to my previous
GHXX#9078: added but not tested
ieee 802.11ac#6337: i am an idiot
GHXX#9078: looking at your name, yes
TheWildJarvi《THE SEMI SEER》#1337: OH SHIT REALLY?????
Limón#7879: and you can reuse it next tick/frame
Vinyl Boot Maven of Shade#1858: HMM has been updated with a resizable 24 bit color display component. Link in Mod Sharing thread.
Limón#7879: just write it to a var at the end
Limón#7879: because if it is just something you can write to a var
Limón#7879: what is data
Vinyl Boot Maven of Shade#1858: Got persistent data. (Not setting to null in client) So even for 200k of data. setting the whole byte array once every 100 milliseconds works fine at 500k ticks. Will vary on other PC's of course. But it's proof that it can work.
Vinyl Boot Maven of Shade#1858: I couldn't get that to work either.
reklrekl#3271: yes, thats also the problem with my approach, but I think this isn't a big deal as I would need sth. like this for a display, that gets refreshed every few Hz. <[newline]>  <[newline]> though there is a Method in LogicComponent: SavePersistentValuesToCustomData, but I didn't get this to work as well. Maybe I'll have time tomorrow
ieee 802.11ac#6337: you think i'm smart enough for that?
GHXX#9078: make a pr
Vinyl Boot Maven of Shade#1858: Only problem now is that the data isn't persistent.
Vinyl Boot Maven of Shade#1858: I made my Display stable at 500k ticks. I just made the timer set a bool and wrote to the IData interface in DoLogicUpdate. Even without checking for null(though I still clear it on client.) with a full 256x256 screen of random colors the ticks can't keep up and it starts skipping the updates as usual. But it doesn't fall behind interactions still work fine and I can flip a switch to clear the screen and have the server go back to keeping up.
ieee 802.11ac#6337: > to the server's lan <[newline]> how to not do network security 101
GHXX#9078: can probs use the tcp bridge for that. it allows making a tcp connection to the real internet / to the server's lan from inside logicworld
VigilanteHobo#1873: The idea was to connect players to an external server so they can send eachother serial or parallel data. Not in a very sophisticated manner, just sorta like UUCP or BBS style networking
Macrohard Onfire#0662: also now i wrote some code and i can't place the component anymore. i then unlinked the code and it still doesn't place down the component. idk what's going on but i'll fix that tomorrow
Macrohard Onfire#0662: i have it on the lowest setting rn so i can join and copy the inputs and outputs to a paper
Vinyl Boot Maven of Shade#1858: Have you tried the trick of lowering render distance before joining?
GHXX#9078: be aware though, if you have a world where a modded component has A inputs and B outputs, and you then modify your mod so that it has a different number of inputs or outputs, then you will not be able to load the world. You would need to remove the modded components from the world beforehand
GHXX#9078: luckily its quite easy to make mods 🙂
GHXX#9078: that sucks
GHXX#9078: ah
Macrohard Onfire#0662: but if it's also our gpu, alu, display and everything else then i would crash for sure
Macrohard Onfire#0662: well not if it's just ram
GHXX#9078: oof
Macrohard Onfire#0662: yeah i would crash from this
Macrohard Onfire#0662: i don't want to write a mod to make my life easier and we will always build everything with regular components first but then i'll shrink it like this so we can expand the computer as much as we can, maybe creating 2 computers that can communicate, make a protocol similar to usb, ...
GHXX#9078: 
Macrohard Onfire#0662: ours is more laid out and for now most of it is deleted as it's also modular just so i can join and have a chance of not crashing
GHXX#9078: we got 256 bytes in like half a chunk space, probably 60 blocks or something tall
Macrohard Onfire#0662: i have a shit gpu
Macrohard Onfire#0662: everything is very optimized already
GHXX#9078: could try reducing the number of components in your ram
GHXX#9078: interesting
Macrohard Onfire#0662: <@!109262887310065664>
Macrohard Onfire#0662: 16 bit alu with modes: add, subtract, right bit shift, left bit shift and logic operations not, or, and, xor and it also outputs whether these expressions are true or false: =, !=, <, <=, >, >= <[newline]> me and my friends built that on a server but the whole computer (mostly because of ram and gpu which will also be shrunk to a single coponent) became so big my gpu crashes when i join so now i'm writing a mod for this
GHXX#9078: what is this supposed to do?
Macrohard Onfire#0662: i just hooked all the inputs together in case i oredered them wrong
Macrohard Onfire#0662: no freaking way after i realised my logicCode was on the wrong indentation and fixed it it now works
Macrohard Onfire#0662: damn
GHXX#9078: it even runs some code on its own thread
GHXX#9078: yeah keep in mind my mod is quite complicated
Macrohard Onfire#0662: it probably won't work right away but now i can experiment with all the time i have
Macrohard Onfire#0662: Thanks a lot
GHXX#9078: 
GHXX#9078: 
GHXX#9078: https://github.com/GHXX/LogicWorld-TcpBridge/tree/master/TcpBridge/mod
GHXX#9078: a class is specified in the component.succ file
Macrohard Onfire#0662: how do i link that code in the succ file
Macrohard Onfire#0662: it's a very big mess
Macrohard Onfire#0662: say sike right now
GHXX#9078: c# is very similar, way cleaner and easier to use 🙂
Macrohard Onfire#0662: i don't often use c#, only c++ but ig i'll try
Macrohard Onfire#0662: ok thanks
GHXX#9078: its definitely not a bad choice
GHXX#9078: sure, but its up to you
Macrohard Onfire#0662: so i should go with c#?
GHXX#9078: logicscript is a bit simpler, but c# allows doing wayyy more stuff
Macrohard Onfire#0662: i'll be making an alu and a gpu because a server i'm playing on has so many components that my gpu crashes and i have to restart my laptop so i want to simplify things
Macrohard Onfire#0662: i'm new here and i have a question. should i use lsx or c# to code components. as far as i understand (i may be wrong) i can use either but what are benefits of each? i assume c# has more functionality and is better for bigger components
GHXX#9078: that's doable using these tcp bridge
MS#5409: From what I understand he meant having a logic connection between 2 servers
GHXX#9078: what should this modem block do exactly?
Vinyl Boot Maven of Shade#1858: Oh!? Awesome. I'll give it a try.
reklrekl#3271: it actually does, just put the /shared folder into the mod root folder <[newline]> found out because i was annoyed it didn't work and looked at the ModCompiler (or ModLoader? somewhere around there) class. <[newline]> There are hardcoded strings telling the ModCompiler where to look for source files. <[newline]>  <[newline]> I think it's a bug, as /src/shared sounds more correct to me
Vinyl Boot Maven of Shade#1858: I'm excited for mod support as well. Editable menus would be awesome. And the TData interface is supposed to be in /shared rather than have a copy in both /server and /client. but that doesn't work for mods.
Vinyl Boot Maven of Shade#1858: lol, my rom uses that hack as well. Aside from the mentioned desync. It runs perfectly fine even at 100k ticks/s. I also compress the image data before sending it, and decompress after to reduce traffic. Also it only sends data if it's been changed.
reklrekl#3271: Yeah something like that was on my mind too, I just didn't have time to implement it for now. <[newline]>  <[newline]> Maybe i will tinker with it for a little, but also I wanna wait for the next update to see how mod support improves (or actually gets official 😅 ) <[newline]> Some GUI functions (or prefab instantiatiors) would be nice to add EditMenus for custom TData interfaces. <[newline]> My ROM uses the ILabelData "hack" to specify what file to load -.-
Vinyl Boot Maven of Shade#1858: Thanks. I also managed to find that out. Though, I set up a byte array that I have the server set with the data if the data if it's null, then the client reads it and sets it to null. It works for sending around 200kb's at 30 fps. but with a tick rate of 100000, It eventually stops transmitting. I'm thinking it has something to do with me using a timer to set the data on server side or something causing a desync. If I didn't have the server check for the data to be null(client recieved it) it seems to queue up the data and causes severe lag, and it would crash. Otherwise I got a resizable 24 bit color display working at around 30 fps though I'm prolly gonna limit it to 10fps.
VigilanteHobo#1873: or maybe implemented differently to avoid mitm as long as people can't get eachothers ip addresses
VigilanteHobo#1873: need: networking between LW players <[newline]> problem: servers can't support a bunch of computers at very high speeds <[newline]> solution: a mod that provides a modem for making a star network
GHXX#9078: <@!232047122868994049>
reklrekl#3271: My approach on sending partial data updates to clients is: <[newline]> I have an Integer containing the offset and a byte array with Length of 1 in the TData Interface. <[newline]> Whenever I update data in the VRAM I update first the data in the array, which does not push the update. Then I set the offset Integer and the data gets sent to the Client. This way I do not need to send the whole 8k of VRAM every update. <[newline]>  <[newline]> I know, declaring an array for a single byte is also not efficient, but if a byte gets updated a data update would also be pushed. This way I'd send the data twice every update. <[newline]>  <[newline]> Anyways, running this at > 10k ticks/s makes the Client lag, so my approach is not good. <[newline]> Probably a better approach would be to request a data update once every frame and have the server figure out what bytes have changed since last request. This way the server could still run at >10k ticks and not spam the network.
reklrekl#3271: Soooo <[newline]> that's what I've tried to figure out for like 2 weeks. (the display stuff) <[newline]>  <[newline]> Finally got it working 2 days ago. Here's how: <[newline]> LogicComponent has field WorldMutationManager, than you could use to send (partial) data updates to client. But it's declared as internal and I couldn't figure out how to access it from my Mod (probably I cant but idk how exactly C# "assemblies" work). <[newline]>  <[newline]> BUT: <[newline]> LogicComponent<TData> sets up the CustomDataManger. This Class creates getters and setters for every property of the TData Interface. Also it sets up the OnPropertySet event to call WorldMutationManager.ForceDataRefresh() whenever a property of the TData Interface gets updated. All this stuff I couldn't do manually (and probably more efficient for transferring 8k of VRAM) because WorldMutationManager is inaccessible. <[newline]>  <[newline]> A bug I had with this (actually just my stupidity): <[newline]> Updating data in an array (myBytes[i] = x) will not trigger the OnPropertySet event, probably because I'm GETting the pointer to the array and then setting some data somewhere in memory where the CustomDataManager doesn't care about. <[newline]> After taking waaaayyyy too long to understand this, this actually came in handy: <[newline]> Updating data inside the array doesn't push the data update to clients. Setting the whole array (or updating sth. like an integer) then pushes all the data to the client. This saves a lot of network bandwidth (I think) <[newline]>  <[newline]> I'm not a programmer btw so what I say might be wrong 😅
totobono4#5551: Unity version is 2019.4.17
Limón#7879: me when js
totobono4#5551: Yes that what I'm planning to do
TheDevBird#3364: Yeah, I mainly work with JS/TS so I'm used to running something many times to get it to work lol
GHXX#9078: it is a nice text editor though, but it does not come with compilers unfortunately
Limón#7879: true
Limón#7879: does it black screen or just error in game?
GHXX#9078: cuz vscode doesn't really understand c#
GHXX#9078: the 600iq move is to use visual studio community
TheDevBird#3364: My -1 IQ move is to just put the git repo inside the mod folder inside the game files. VSCode knows where it is so that's all I care about lol
GHXX#9078: always check the log, and fyi, when you change the number of input or output pins you need to make a new map
Limón#7879: and then you can do C# stuff and rewrite the game
Limón#7879: yeah
totobono4#5551: I saw that for now modding LW is only about adding files in the game to add some components right ?
totobono4#5551: Oh that's sounds good :3
Stenodyon#8192: I don't know which version though
Stenodyon#8192: Unity
totobono4#5551: What is the game engine of LW ?
totobono4#5551: Or make them look like their own symbol when you see them from above \*^\*
totobono4#5551: I think I'll also draw the gate symbols on the components.
totobono4#5551: In my mod I just want to add missing components like OR gate, and resize the most of the actual components to a 1 by 1 by 1 component, because for example : actually this is more compact to use a AND gate with the inputs joined than a buffer... So if I want to do something compact, I should use and gates instead of buffers, and I don't want to do such a thing :c
totobono4#5551: I want OR gates :c
MS#5409: i never noticed
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: It was a test. I really wanted to make registers and more complex parts, but I no longer want to
totobono4#5551: I want to make a mod but I don't have too much time, I will try to start making it this evening.
totobono4#5551: But the current can go backward, and on a OR gate, if you have 2 different pins, there is no interference between them, so to do a 2 pins OR gate in LW for now, you must place 2 buffers and join the output, because the pins needs to be individual and the current need to go in only one way.
MS#5409: They basically behave the same <[newline]> X inputs, 1 output, any of them turns it on
MS#5409: Cant you use pins for that?
MS#5409: Im curious about modding as well
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: I tried a simple OR gate and it gives me a lot of errors and I don't know why
totobono4#5551: I want to make mods too :3
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: My mod still wrong and I don't know what is wrong. I followed the guide and I can't make it work
GHXX#9078: also, 500iq move when it comes to modding using a git repository: <[newline]> you can put a **symbolic **link to the folder that contains your mod files so you dont have to keep copying it over 😛
Limón#7879: https://canary.discord.com/channels/401255675264761866/901659878869844048/901681990439428096
𝔗𝔥𝔲𝔫𝔡𝔢𝔯#2420: Hey, how do I start on modding? I mean, I have some basics on C++, but I don't know what files need and so
ThePiGuy24#0369: nice
GHXX#9078: <@!258769251547086849>
Vinyl Boot Maven of Shade#1858: Anyone know how to send data from server to client? I found this <[newline]> /// <summary> <[newline]>     /// This component's custom data. To send updates to connected clients, call <see cref="!:LogicComponent.QueueCustomDataSendToClient" /> <[newline]>     /// </summary> <[newline]>     public TData Data => DataManager.Data; <[newline]> But the QueueCustomDataSendToClient function is no where to be found.
TheWildJarvi《THE SEMI SEER》#1337: get me a ROM component and i can test out the ram by feeding it the rom lol
Vinyl Boot Maven of Shade#1858: Ok.
TheWildJarvi《THE SEMI SEER》#1337: i havent actually used it in the build yet. just tested it out by hand at low speeds
Vinyl Boot Maven of Shade#1858: <@!121786044197765131> Hey, have you used that RAM I made you on multiplayer? Noticed any lagging, especially on high tick rates?
Reese4221#8317: could we try our luck and get four?
Reese4221#8317: :O
DADp#7461: maybe 3 <:frog_happy:733352650091003955>
Reese4221#8317: thats like at least two colors
TheWildJarvi《THE SEMI SEER》#1337: 24bit color <:pog:567801496440143903>
Vinyl Boot Maven of Shade#1858: Anyone know how componentcustomdata is handled network wise? Particularly, if its sent as chunks? I'm making a 24bit color pixel display and I'm slightly concerned about how much 1.5Mbs of data will affect the network.
GHXX#9078: wouldnt tcp suffice for that?
GHXX#9078: a localhost stream?
ieee 802.11ac#6337: make a mod to get a localhost stream working <a:you_thonk_me_right_round:453669433634979840>
Verlio_H#0201: you could always pull a fundy and just use some stuff to mirror your display into lw
Reese4221#8317: you did it :O
ieee 802.11ac#6337: <@!714583473804935238> wanna port some core utils
Reese4221#8317: do it
ieee 802.11ac#6337: tempted to @ drake and say "wanna port some core utils"
ieee 802.11ac#6337: oh sick
Verlio_H#0201: https://github.com/qrush/unix
GHXX#9078: ms dos <:kekw:656631102655692811>
ieee 802.11ac#6337: someone manages to find a copy of the unix 1.0 kernel and gets it running via Tech Wizardry on a logic world computer
GHXX#9078: and then just ssh in via some reverse shell
GHXX#9078: imagine installing linux on a lw computer
GHXX#9078: exactly
Verlio_H#0201: lw in lw in lw in lw when
GHXX#9078: or some central repo
Verlio_H#0201: lmao nice
GHXX#9078: its much nicer if you can just snag it off of pastebin
GHXX#9078: because typing in programs is kinda lame xD
ieee 802.11ac#6337: cool! why
GHXX#9078: it lets you establish a tcp connection and send and receive data
ieee 802.11ac#6337: sorry the w h a t
GHXX#9078: (for the tcp bridge)
GHXX#9078: sample setup btw
GHXX#9078: <:vvPog:580599306759831582>
BigMintyMitch#1620: Alright I got it published :) I'll probably do the thing with the multiple pins next
Limón#7879: it's either client or .succ (which both are client)
BigMintyMitch#1620: Usually something is wrong in a .succ file. If something is wrong in a .cs or logic script file, the game will still load, but the components won't work in the game
GHXX#9078: check the log, maybe there is something in there
Imatsu#1843: nvm. Apparently there was something wrong with my mod because I downloaded someone else's and it loads just fine. 🤦
Imatsu#1843: Question: When loading in a new mod; is it supposed to get stuck on a black screen that just says "Logic World v0.90.3" on the lower right corner?
BigMintyMitch#1620: I will have to try that sometime
GHXX#9078: place it on a flosting board ingame on an edge and check if the bottom tex is there
BigMintyMitch#1620: Maybe...
GHXX#9078: the*
GHXX#9078: ah open bottom has to do with thr bottom texture probs
BigMintyMitch#1620: For sure
GHXX#9078: nice, i gotta admit i did it without the program, but its gonna be useful in the future
BigMintyMitch#1620: I can't figured out exactly what OriginCube is or BetterCube_OpenBottom. OriginCube looks like it is positioned at (0, 0, 0) (the origin), but I don't see why that is any different from the default cube other than positioning. And then BetterCube_OpenBottom sounds like there is no bottom? But then how is it "better"?
BigMintyMitch#1620: 
GHXX#9078: <@!859806257774723102> pretty much works now, with 1 byte width instead of 1 bit. Just gotta test it some more
BigMintyMitch#1620: That looks dope
GHXX#9078: wide version
Leonski#3180: is it not finding the folder when you try to load the mod? or is it not finding the component files after you've loaded the mod?
Leonski#3180: definitely a weird one, i'm not too sure what would be causing that
Limón#7879: it still has the same problem
Limón#7879: when I put the designer on my desktop
Leonski#3180: ah, that could cause an issue. although i can't think of any reason why it wouldn't work as long as it's not a *weird* setup
Limón#7879: my steam is automounted to a external drive and the component designer is on a separate drive as well
Leonski#3180: (feel free to ping me when you send a message my way, i probably won't see them otherwise)
Leonski#3180: yeah, i didn't have a problem in that regard. mines on the same drive that linux is installed on (in the normal place where itch throws stuff)
Imatsu#1843: Oh hey there's a whole channel for modding. lol I need to pay more attention.
GHXX#9078: <@!203706881414397952> moving it over here, but in any case, check the output log of the game as that often contains very useful info
Verlio_H#0201: also zfs is a thing on some os
Limón#7879: idk
GHXX#9078: why would any program care about the disk format type though? like, doesnt linux take care of that and abstract it away?
Limón#7879: mine is on an external drive from my SSD (where linux is installed)
Limón#7879: where was your game
Limón#7879: the problem for me is that it doesn't even load the mod
Leonski#3180: it worked fine on mine, unless i missed something? <[newline]> edit: i did only give it a quick test loading up a mod and playing around with the component, so i might have not tried saving something if that's where the problem is
Limón#7879: from: https://www.tecmint.com/linux-file-system-explained/
Limón#7879: my main computer uses ext4
Limón#7879: I think my pi uses fat32
BigMintyMitch#1620: Yeah I've never used anything other than windows so 🤷‍♂️
Limón#7879: but 99.9% are not on ntfs (from my experience)
BigMintyMitch#1620: I found a library that will fix this issue online. I'll implement it soon and then put an option to use it in the settings
BigMintyMitch#1620: Okay
Limón#7879: :)
Limón#7879: nope
BigMintyMitch#1620: Are all Linux operating systems on this type of hard drive?
BigMintyMitch#1620: I figured I'd have issues with that at some point...
Limón#7879: with any mod
Limón#7879: because I have steam on Ext4 and it doesn't load
Limón#7879: (I think)
Limón#7879: <@!197434850771337228> your component designer doesn't work on Ext4 drives
Limón#7879: it doesn't work well for when width < inputs
Limón#7879: it does not
Limón#7879: because I don't think it should be
Limón#7879: I will check now
GHXX#9078: if instert is an alias for insert
GHXX#9078: i swear to god
Limón#7879: which was a while ago
Limón#7879: it worked when I ran it last time
GHXX#9078: shouldnt it be array.insert ?
Limón#7879: yes\
GHXX#9078: does that run?
Limón#7879: ```py <[newline]> width = 1 <[newline]>  <[newline]> inputs = 4 <[newline]>  <[newline]> array = [] <[newline]>  <[newline]> for x in range(1, inputs+1): <[newline]>     if x > width/2: <[newline]>         array.insert(0, -(inputs - (width/inputs)*x)) <[newline]>     else:  <[newline]>         array.insert(0, (width/inputs)*x) <[newline]> ```
Limón#7879: let me find it
Limón#7879: I made a script for this already
BigMintyMitch#1620: Sweet :)
Sekoia#3968: it works :)
Sekoia#3968: awesome!
GHXX#9078: of course
BigMintyMitch#1620: One thing at a time lol
BigMintyMitch#1620: I agree
GHXX#9078: <@!197434850771337228>
GHXX#9078: what else would be really cool is, if one could define an area and then specify how many inputs or outputs should be on there, and then the program places them, evenly spaced out
GHXX#9078: https://tenor.com/view/money-shutup-take-gif-7953571
GHXX#9078: :OOOOOOOOOOOOOOOOO
BigMintyMitch#1620: ;)
GHXX#9078: awesome 😄
BigMintyMitch#1620: <@!723418507362041876> built it for Linux! Let me know if there are any problems :) <[newline]>  <[newline]> https://bigmintymitch.itch.io/component-designer-for-logic-world <[newline]>  <[newline]> <@!109262887310065664> starting to work on adding support for different meshes now
Saltypretzel#0321: 🍷
BigMintyMitch#1620: Lol
Limón#7879: then the WINE in that stands for WINE IS NOT AN EMULATOR and the WINE stands for WINE IS NOT AN EMULATOR and that one stands for...
Limón#7879: and wine stands for WINE IS NOT AN EMULATOR
Limón#7879: it runs native window apps
Sekoia#3968: wine is a linux compat tool
BigMintyMitch#1620: I don't think that's it
BigMintyMitch#1620: I was imaging the beverage
BigMintyMitch#1620: What is wine
Sekoia#3968: it opens and all but yeah
Sekoia#3968: right so wine *almost* works, but I can't input anything lol
BigMintyMitch#1620: Sure thing 😁
Sekoia#3968: awesome, thanks! Ping me when there's a release or if you give up, in the mean time I'll try wine
GHXX#9078: that would be incredible
BigMintyMitch#1620: If only there was a way to support custom meshes in the game...
BigMintyMitch#1620: The meshes aren't complicated, I could just remake it in blender
GHXX#9078: as in, somehow snag it from the game files
BigMintyMitch#1620: "Dump" it?
BigMintyMitch#1620: Right now you can add multiple blocks but you can't change shapes
GHXX#9078: idk if you can dump it somehow
BigMintyMitch#1620: I'll have to custom make the mesh in Blender and import it to Unity but I think I can handle that <[newline]>  <[newline]> Yeah I'll do that
GHXX#9078: but you could find some in the succ files the game uses
GHXX#9078: no idea
BigMintyMitch#1620: Is there a list of all the different types of mesh somewhere or do I need to just find them all in the source
GHXX#9078: this produces the yellow block in the center of the image
BigMintyMitch#1620: Okay I can do that
GHXX#9078: otherwise its some other mesh
GHXX#9078: if "mesh" isnt specified then its the normal block
GHXX#9078: example^^
GHXX#9078: ``` <[newline]> TcpBridge: <[newline]>     column: "Miscellaneous" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 color: c9af38 <[newline]>                 position: (2, 0, 0.5) # 0+2 <[newline]>                 scale: (2.5, 1, 2) <[newline]>             - <[newline]>                 mesh: BufferBody_Long <[newline]>                 color: c9af38 <[newline]>                 position: (0.75, 0.5, 0) # -1.25+2 <[newline]>                 scale: (1, 1.1, 1) <[newline]>                 rotation: (0,0,90) <[newline]>             - <[newline]>                 mesh: BufferBody_Long <[newline]>                 color: c9af38 <[newline]>                 position: (3.25, 0.5, 0) # 1.25+2 <[newline]>                 scale: (1, -1.1, 1) <[newline]>                 rotation: (0,0,90) <[newline]>         inputs: <[newline]>             - # data_in <[newline]>                 position: (0, 0.5, -0.5) # -2+2 <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>             - # clk_in <[newline]>                 position: (2, 0.5, -0.5) #0+2 <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.8 <[newline]>             - # enable_in <[newline]>                 position: (4, 0.5, -0.5) #2+2 <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>         outputs: <[newline]>             - # data out <[newline]>                 position: (0.5, 0.5, 1.5) #-1.5+2 <[newline]>                 rotation: (90, 0, 0) <[newline]>             - # data_ready <[newline]>                 position: (1.5, 0.5, 1.5) #-0.5+2 <[newline]>                 rotation: (90, 0, 0) <[newline]>             - # tcp_error <[newline]>                 position: (2.5, 0.5, 1.5) # 0.5+2 <[newline]>                 rotation: (90, 0, 0) <[newline]>             - # is_connected <[newline]>                 position: (3.5, 0.5, 1.5) # 1.5+2 <[newline]>                 rotation: (90, 0, 0) <[newline]> ```
GHXX#9078: simply add another block entry
BigMintyMitch#1620: <@109262887310065664> I can, but I'm not sure how to represent that in the SUCC file? I might need some help there so I can figure out how to add that. <[newline]>  <[newline]> <@723418507362041876> Unity :) I can try to find out how to built it for Linux. Never done that before though <[newline]>  <[newline]> Thanks everybody else :)
BigMintyMitch#1620: Totally fine :)
Limón#7879: added the link to pinned message if that's alright
64548#0351: finally someone did what I asked before hahahaha
Leonski#3180: looking good
TheWildJarvi《THE SEMI SEER》#1337: really cool!
Limón#7879: 🥺
Ecconia#4929: <@!109262887310065664> I wrote down my ideas for how to implement wires in <#920991003756863508> <[newline]> The biggest issues is preventing the game from treating it as normal wires. The rest should be more simple.
GHXX#9078: looks like unity to me
Sekoia#3968: and can you export it for linux pwease 🥺
Sekoia#3968: what did you make this with?
Ecconia#4929: How to implement multi-wire or bundled-cables.
GHXX#9078: <@197434850771337228>
GHXX#9078: would be useful for stuff like this
GHXX#9078: (and rotations)
GHXX#9078: another request though, could you add ways to add multiple blocks, supporting diferent meshes?
GHXX#9078: YES FINALLY
BigMintyMitch#1620: Hmm apparently you can do `placingRules: Standard`. I will have to implement that at some point
BigMintyMitch#1620: https://bigmintymitch.itch.io/component-designer-for-logic-world <[newline]>  <[newline]> Not necessarily a mod... but I think everybody will appreciate this. I made a tool to create components. I got sick of editing text and constantly reloading the game because I got the values wrong. Now you can see it as you create it! And eliminate so much repetitive reloading. I will do my best to keep this updated with the current versions of Logic World. Just DM me if something is wrong :)
GHXX#9078: so the deadlock is circumvented rn, but needs fixing, and i also need to split up the clocks into a receive and send clock
GHXX#9078: sickkk
GHXX#9078: 
GHXX#9078: 
GHXX#9078: ok worked, but the game deadlocked, ~~but i _think_ that was that one logicworld bug~~ i think its me
GHXX#9078: 350 lines of code right now
GHXX#9078: fixing bugs rn
GHXX#9078: so, no
GHXX#9078: soon™
Limón#7879: does it work
GHXX#9078: current test circuit
Limón#7879: but you can simulate it
Limón#7879: also object inheritance doesn't exist
Limón#7879: rust be cool
Limón#7879: yeah
GHXX#9078: yeah then its on the heap i suppose
Limón#7879: you have to convert it to a string to make it bigger than you can make it bigger
Limón#7879: probably
GHXX#9078: so like <[newline]> somestring 1 blabla\0some other long string\0bla
GHXX#9078: ah yeah makes sense, as they would likely be packed together, one after another (thats how c++ does it)
Limón#7879: and rust warns you if you have incorrect casing
Limón#7879: also all primitive types are lowercase
Limón#7879: strs can't be "grown" and strings can be
GHXX#9078: it would be quite uncommon to put a string onto the stack imo
GHXX#9078: c++ does that too fyi
GHXX#9078: i suppose the difference is, one is on the heap and the other is static?
Limón#7879: we don't have enough
Limón#7879: you get more strings
Limón#7879: I love it
[Pre-Scratch] le#1337: awesome language (fr)
Limón#7879: that's what the & and * is
Limón#7879: there is pointers like in c++
Limón#7879: https://web.mit.edu/rust-lang_v1.25/arch/amd64_ubuntu1404/share/doc/rust/html/book/first-edition/strings.html
GHXX#9078: <:kekw:656631102655692811>
GHXX#9078: 🙃
GHXX#9078: but no error
GHXX#9078: and i think W stands for wide and thus 16bit, so if you convert a 16bit char to two 8bit chars or vice versa by just copying bytes you will end up with some weird letters
GHXX#9078: but for some others its really annoying
GHXX#9078: string or String (idk which one lol) to char* is easy since you just do .c_str()
Limón#7879: sounds painful
GHXX#9078: especially since you cannot easily convert between all of them
GHXX#9078: whenever i work with c++ it annoys me soo much
Limón#7879: one is on heap and one is on stack I am pretty sure
Limón#7879: yeah there is only 2 strings in rust
GHXX#9078: thats probs why people came up with different types
GHXX#9078: which ist exactly the smartest way of doing it, since you cannot copy the whole memory at once
GHXX#9078: the classic one is char* aka const char*, which is a pointer to a memory area containing a lot of chars in a row, and once you encounter '\0' aka 0x00 the string ends
GHXX#9078: (source <https://stackoverflow.com/questions/4518835/how-many-types-of-strings-in-visual-c> )
GHXX#9078: ill see if i can find a list
Limón#7879: str is a primitive type and it's basically just an array of u8's (unsigned 8 bit integers)
Limón#7879: str and string
Limón#7879: there is 2 in rust
Limón#7879: what are the string types in c++
GHXX#9078: facts
GHXX#9078: 😂
Limón#7879: code in assembly for pure speed (of program not writing)
GHXX#9078: but i think the bad thing about c++ are the 15+ different string kinds
GHXX#9078: right
GHXX#9078: but i think performence is very good anyway
Limón#7879: but no one does that
GHXX#9078: if you wanna go super fast
GHXX#9078: and also alloc your own mem i think
GHXX#9078: fun fact, you can actually use raw pointers in c#
Limón#7879: so they probably have to do more stuff behind the scenes
GHXX#9078: gotta be really careful with c++
GHXX#9078: which can be a huge pain, in c++'s case
Limón#7879: rust and c++ doesn't use GC
Limón#7879: but c# uses GC and stuff
GHXX#9078: c# takes like less than once sec to compile for like 8000 lines of c# source code (when doing a complete rebuild) (that was a discord bot made in .net core 3.0)
Limón#7879: I am pretty sure with each update its compiling faster and faster
Limón#7879: but it's slower than most people want it to be
Limón#7879: it's not that long to compile
Limón#7879: it takes a while to compile
GHXX#9078: ooof
Limón#7879: **no**
GHXX#9078: cuz c++ takes ages to compile
GHXX#9078: does it compile fast tho?
Limón#7879: amazing for old
Limón#7879: weird to new people
Limón#7879: and rust has a weird system for memory
GHXX#9078: imo rust to c++ is like scala to java
Limón#7879: it's like C++ but less OOP
GHXX#9078: rust to me looks way too cryptic xD
Limón#7879: time to learn to vscode
Limón#7879: I should make that a vscode extension
Limón#7879: also that's a good idea
Limón#7879: my main language right now is rust
GHXX#9078: 😭
GHXX#9078: should have made a program to track it
GHXX#9078: i probs got way more than 1000 hours in c#
Limón#7879: I used it for Opengl stuff
Limón#7879: I have barely used C#
GHXX#9078: likely 😅
Limón#7879: you know more C# than I do
GHXX#9078: read from the file, buffer a couple bytes always using a threadsafe queue, like concurrentqueue<T>, and then in the logic update thread dequeue an element and do something with it
GHXX#9078: thats the ideal way yeah
Limón#7879: spawn a new thread to read from file
GHXX#9078: giving you a solid 2 logic updates per second
GHXX#9078: but even then, if you got a component that needs 500ms to do its logic tick, then the whole logic tick would still take 500ms
Limón#7879: 😎
Limón#7879: that would be cool
GHXX#9078: although it would be cool
GHXX#9078: i doubt that
Limón#7879: also I am pretty sure each component is on its own thread (correct me if I am wrong)
GHXX#9078: async is threaded technically, as its run by a threadpool
Limón#7879: async
GHXX#9078: because you dont really want to block your logic sim thread while reading from a file
GHXX#9078: uuuh, that also sortof needs to be threaded
Limón#7879: suggestion: read from a file instead
GHXX#9078: this is probs the first modded component thats threaded xD
GHXX#9078: with 8 inputs and 8 outputs
GHXX#9078: could make a parallel-version
GHXX#9078: and once a byte is ready, its sent
GHXX#9078: and all bits are summed up into bytes
GHXX#9078: right now you would just input it in a serial manner
GHXX#9078: but yeah i mean im open to discussion
TheWildJarvi《THE SEMI SEER》#1337: youd hate all the mods vinyl has made for me <a:KEKWgif:829851650717909094>
TheWildJarvi《THE SEMI SEER》#1337: ah
GHXX#9078: i feel like its too annoying to have 8 input pins
GHXX#9078: so its just about how it should be done in LW
GHXX#9078: well networking will be handled with bytes on the c# side
TheWildJarvi《THE SEMI SEER》#1337: im kinda talking out of my ass here because networking is not my strong suit, so idk if its possible
TheWildJarvi《THE SEMI SEER》#1337: yea, like if the mod iteself has the shift registers built in, so you could still send and recieve via serial, just the modded device breaks it out into parallel
GHXX#9078: do you mean the data_in and data_out?
TheWildJarvi《THE SEMI SEER》#1337: could your mod have all those bits in parallel on it?
GHXX#9078: where using a raw binary form would be only 8*4 = 32 bit
GHXX#9078: so 13*4=52bit
GHXX#9078: so thats 13 of your 4-bit groups
GHXX#9078: so thats 3*4 for  the numbers and then 3 for the dots
GHXX#9078: in the worst case
GHXX#9078: because one would need 3 of your 4-bit groups for each position
GHXX#9078: for ip it would be more compact to use raw binary
Limón#7879: 0000 = 0 <[newline]> 0001 = 1 <[newline]> 0010 = 2 <[newline]> 0011 = 3 <[newline]> 0100 = 4 <[newline]> 0101 = 5 <[newline]> 0110 = 6 <[newline]> 0111 = 7 <[newline]> 1000 = 8 <[newline]> 1001 = 9 <[newline]> 1010 = . <[newline]> 1011 = stop reading
GHXX#9078: for the hostname one character would also be a byte
GHXX#9078: so its 4*8 bits
GHXX#9078: an ipv4 address is 4 bytes long
GHXX#9078: depends on whether its a hostname or not
Limón#7879: you can fit the required characters into a 4 bit number (for ip)
Limón#7879: so you are doing character not number
GHXX#9078: in the worst case the first data_in bit can decide whether you provide an ip or a hostname
GHXX#9078: so its gonna be 4*8 bits for the ip
GHXX#9078: 8 bits form a number
Limón#7879: will you put in 4 bits and get a number out
Limón#7879: how will you get an ip out of it
GHXX#9078: the way enable works is: <[newline]> a rising edge starts the connection <[newline]> a falling edge stops the connection and resets the whole tcp bridge, clearing all buffers, etc.
Limón#7879: that is one solution
Vinyl Boot Maven of Shade#1858: So enable is kind of like command/data bit?
Limón#7879: I was also thinning about that problem
GHXX#9078: yes
GHXX#9078: you write in the ip or hostname, then zeroterminate it (altho that would be an issue with an ip thats zero, but we'll see) and then you set the enable pin to HI which would start the connection
Limón#7879: is it also serial
Vinyl Boot Maven of Shade#1858: Oh. Nice
GHXX#9078: ip or hostname
GHXX#9078: well
Limón#7879: how?
GHXX#9078: ip and port are provided also via the data_in
Limón#7879: probably
Vinyl Boot Maven of Shade#1858: Is the ip and port hard coded?
Limón#7879: that's how my wireless components be
Limón#7879: that is fine with me 😎
GHXX#9078: well, otherwise there would be like 8 inputs and 8 outputs just for data lol
Limón#7879: kinda slow then
Limón#7879: 😭
GHXX#9078: i suppose, yeah
GHXX#9078: yeah you write it in a serial manner
Vinyl Boot Maven of Shade#1858: On clock pulse does it simultaneously read and write?
Limón#7879: only 1 bit of data?
GHXX#9078: inputs are (top to bottom) <[newline]> data_in <[newline]> clk_in (clock) <[newline]> enable (thats used for closing connections) <[newline]>  <[newline]> outputs are (top to bottom) <[newline]> data_out <[newline]> data_ready (is enabled when data is available to be read) <[newline]> tcp_error (is 1 if there was a tcp error, that way people can detect if a connection died) <[newline]> is_connected (is 1 while the tcp connection is active)
GHXX#9078: its gonna be a tcp bridge
Limón#7879: a mux with a wrong amount of inputs?
⛄gravitowl⛄#0001: a fully working computer capable of an autonomous mission to mars where it then builds small cute robots that build a cool base there
Ecconia#4929: A mux?
GHXX#9078: what could this be <a:CS_eyesshaking:717429589810610287>
Ecconia#4929: Good to know - maybe the game just adds all the mods it knows by default into the world-text-preview 🤔  <[newline]> Cause that would be awful...
Limón#7879: it only corrupts it if you place one down
reklrekl#3271: I was able to load saves that previously contained modded components. <[newline]>  <[newline]> After removing these from world and hotbar, everyting loads fine.
Ecconia#4929: Talking about that "stupid" component list. <[newline]> The game includes all components it knows into it - always. <[newline]> And it does not load a save, if it contains components it does not know. <[newline]>  <[newline]> What does that tell us? <[newline]> -> Just having a mod in the GameData folder corrupts all your non-modded saves, so that you can no longer load it without the mod. <[newline]> But why is that so? Why not just include the components which are actually in that world :/ <[newline]> **Please tell me I am wrong!**
BigMintyMitch#1620: More bits at a time would be cool. Like 8 at a time, but no rush, I don't have anything planned. For now
km#1297: Hi! Yeah it reads 1s and 0s one bit at a time, least significant bit of each byte first by default. More info in GitHub readme. I would be up for updating it to output more bits at a time if anyone wants that let me know, haven't been playing or modding LW recently so haven't verified things still work after recent LW updates
BigMintyMitch#1620: Uhhhh yeahhh 👀  may or may not have been thinking of that
Limón#7879: if it reads character bytes than that would allow cool stuff like compiling your own assembly and then reading it in game
BigMintyMitch#1620: <@!652201352197308457> does your File Emitter mod just read 1's and 0's from a file? Or what is the format it reads from?
Limón#7879: True 😔
BigMintyMitch#1620: There should be a page for it on the forums tbh. Much easier to find that way than a discord thread
HomelikeBrick42#1173: the world has a lot of components in it but it has no id mapping
Ecconia#4929: lol, I guess even an empty world would have an ID mapping (nobody knows why that is the case though - it should not).
HomelikeBrick42#1173: the input count for the first component is `117` and then i get a buffer overflow trying to read them
HomelikeBrick42#1173: when i load the components they seem corrupted
HomelikeBrick42#1173: is it normal for the `.logicworld` file to have no component id mappings?
Funky Egg#5652: We are forgetting about unity mod manager
Funky Egg#5652: I just had a idea
Funky Egg#5652: Wait
GHXX#9078: ikr 😄
HomelikeBrick42#1173: 😆
HomelikeBrick42#1173: thanks
HomelikeBrick42#1173: yes
CrispyPin#1149: this what you are looking for?
CrispyPin#1149: https://gist.github.com/JimmyCushnie/7dae698c92a900f2e530668740c20ca2
HomelikeBrick42#1173: 😦
Limón#7879: the closest thing you got to documentation is the dll's
Limón#7879: I am pretty sure no
HomelikeBrick42#1173: is there documentation for the layout of the save file? <[newline]> for example to generate/import computers into logic world
reklrekl#3271: yes sure, i want to update the texture at every frame. <[newline]> but if the texture is made from an internal byte[], the client needs to know what gets written to the display between the frames. <[newline]>  <[newline]> This is what I think should happen server-side (at least it does for my RAM). <[newline]>  <[newline]> So my question is: how can I get the byte[] containing the bits for my texture every frame client-side to render
Moojuiceman#5661: But if it's a client side render thing like a display, then it's literally impossible to update faster than every frame, since you only see the rendered output when the frame is rendered. And it wouldn't make a difference anyway. If it updated 1000 times in a single frame, you'd still only see 1 of those states, when the rendering happens
Limón#7879: yes you can update something every tick very easily
Limón#7879: there is a thread <#910673109164638239>
TheWildJarvi《THE SEMI SEER》#1337: <a:cs:739200283435073558>
Limón#7879: I just say **no**
Limón#7879: if I don't want to
Limón#7879: I also have no problem with being asked to make a mod
TheWildJarvi《THE SEMI SEER》#1337: Length isn't an issue
TheWildJarvi《THE SEMI SEER》#1337: Wym? Vinyl had no problem. Imma ask the community.
reklrekl#3271: I'm trying to build a 320x200 monochrome Display, actually i already Built one with Vanilla components. But the savegame was about 27mb and took literally 3.5h to load after exiting the game.  <[newline]>  <[newline]> So I've tried to speed up load times buy creating "combined" components to reduce Collider Count. "byte" relays and monochrome 8x8 Displays with 64 pins. <[newline]> This reduced load times to about 4 minutes, but the simulation can't run any faster than ~1000t/s. (don't get me wrong thats still impressive for updating 8000Relays with still 64000 outputs in total) <[newline]>  <[newline]> So I've tried using CheeseUtils Displays, but these only update once per frame. so sped up simulation won't work.
reklrekl#3271: Has someone figured out how to build/code a bit/byte addressed Display that updates every TICK not every Frame? <[newline]>  <[newline]> As I understand it the updating of the "vram" needs to be in LogicComponent which is server-side. <[newline]> The generation of the texture needs to be in ComponentClientCode, but how to sync up custom Data between Server and Client?
mitolegy#5916: is there a website where all the logic world mods created so far are?
[Pre-Scratch] le#1337: plus dont ask people to make mods for you lol
[Pre-Scratch] le#1337: this is aproximately what the read part would look like for that, that would be a very long chip
TheWildJarvi《THE SEMI SEER》#1337: 16bit addr, 64bit data, can be loaded from a file
TheWildJarvi《THE SEMI SEER》#1337: anyone interested in making a ROM mod for me? lol
Ecconia#4929: <Deleted message from me - don't mind me - just doing my things>
Dragon Lord#6944: that's in the base game: use the w, a, s, d, shift, and space keys to translate, and the mouse to rotate. /s
VigilanteHobo#1873: player movement stuff implemented yet?
Dragon Lord#6944: Not with package hashing B)
BigMintyMitch#1620: The biggest challenge wouldn't even be the coding. It would be understanding how logic world works enough to do that
Limón#7879: that's a great challenge to implement I bet
Moojuiceman#5661: Mod idea (that should just be in the game eventually) is to stop you connecting to a server if your mod list doesn't match. Preferably telling you which mods you're missing, or disabling ones not on the server. In theory doable now if you have a middleman mod and override some of the server to client communication
N_58#8502: nvm, I just found the mod components
Moojuiceman#5661: There are the same mod folders on the server, which is under the server folder inside your LW install or wherever the dedicated server is if you've installed that. If you're playing on other servers though they'd need to have the same mods as your client
N_58#8502: because currently, I can't play singleplayer due to bug 😆
N_58#8502: When I add mod to the GameData folder and I run the game and have the mod in mods menu then I can use it only in singleplayer? If yes, then what how to add them to server?
WhyNot?#2534: logic world within logic world, genius
BigMintyMitch#1620: That's my mod
BigMintyMitch#1620: I'll just recreate Logic World
WhyNot?#2534: maybe unity is the modding of the future
BigMintyMitch#1620: I see
Limón#7879: so it just supports me theory
Limón#7879: I have not done any modding using unity
Limón#7879: why is it unity
BigMintyMitch#1620: Also what did you mean by this lol
Limón#7879: LA SECRET
WhyNot?#2534: i feel like its a secret
Limón#7879: I feel as if I got it right
WhyNot?#2534: 😎
BigMintyMitch#1620: It's a secret 😎
Limón#7879: is it right
BigMintyMitch#1620: Smart guess
Limón#7879: and some library mod thing
Limón#7879: my guesses are a tool to make components easier
WhyNot?#2534: you should be
Limón#7879: you have made me very curious
WhyNot?#2534: no spoilers from me though 🤫
Limón#7879: <:2706eyesstare:883073666492031096>
WhyNot?#2534: in my opinion, what hes making has a very good chance to be used by almost every modder here
WhyNot?#2534: hes doing something really cool and really special, ive had some sneak peeks of his project
Biggycheese69420#4947: you can read succ files with notepad and edit them
Limón#7879: how are you unity
BigMintyMitch#1620: After HOURS of trying to crack the code, I finally got SUCC to work. I can now read the components file... more on this later :)
TheWildJarvi《THE SEMI SEER》#1337: <@377717131556552708> could I request another mod? Lol
Sekoia#3968: 👀 hell yes
BigMintyMitch#1620: Reposting in this normal modding chat since I don’t know how many people are in that thread I posted in  <[newline]>  <[newline]> https://github.com/mtalyat/Gates-Galore Made a mod with a ton of gates, and stuff like multiplexers, encoders, decoders, more latches. I intend to add demuxes soon. If anybody is interested :)
BigMintyMitch#1620: Seems jank
Moojuiceman#5661: For anyone wanting to make analog/bundled/custom wires, there isn't an easy obvious way from what I know. But there is a very hard obscure way which would involve hijacking the peg/circuit states array to put multiple values in there as if you made multiple wires at once and each encodes 1 bit of the information you want
GHXX#9078: a bundled cable would be quite useful
BigMintyMitch#1620: I wouldn't be surprised if that isn't turned into a feature tbh
BigMintyMitch#1620: I wanted to do something like that as well. In my digital logic class, we can create Buses which are super useful, since you can put as many or few bits inside of each one as I desire. Within reason.
101#1688: The difference is probably marginal, but every little counts 😉
WhyNot?#2534: i do try to avoid ifs if i can, but this was also my first ever c# project so my goal was to make it "work"
WhyNot?#2534: thats really smart, ill have to keep that in mind
RIVAL | Quent#0001: I was looking at the modding info online a bit, and it looks like it's really just for creating new block components that do some sort of logic via input/output pins. Is it possible to create more advanced things like different types of wires through the modding api? I have an idea for a byte cable, but I would need to be able to add a new wire-like entity that you drag out from a custom component like a "byte peg" or something
101#1688: (full disclosure: not a c# person, I don't know if the compiler is smart enough to avoid the branch here)
101#1688: I'd avoid the if statement and just do something like this: <[newline]> `base.Outputs[0].On = ~(base.Inputs[0].On & base.Inputs[1].On)`
WhyNot?#2534: ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using LogicWorld.Server.Circuitry; <[newline]>  <[newline]> namespace STF <[newline]> { <[newline]>     public class NandGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() { <[newline]>             if (base.Inputs[0].On & base.Inputs[1].On){ <[newline]>                 base.Outputs[0].On = false; <[newline]>                 return; <[newline]>             } <[newline]>             base.Outputs[0].On = true; <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```this is my script for a nand gate so you can get an idea
Simonsays095#2929: cool... switching it is, then.
WhyNot?#2534: i honestly couldnt tell you bc it didnt work for me either until i switched to c#
Simonsays095#2929: Oh the script is just <[newline]> ``` <[newline]> any <[newline]>     out[0] = in[0] & in[1] <[newline]> end```
WhyNot?#2534: if its loading in its not in the succ, its the script itself
Simonsays095#2929: Here's a ss so you can see the weird syntax highlighting on line 11... But that's correct comment syntax, isn't it?
WhyNot?#2534: from what ive been told it really doesnt work well
Simonsays095#2929: logic script, like on the page
WhyNot?#2534: did you make it with logic script or c#?
WhyNot?#2534: i had the same issue, its an issue with the script most likely
Simonsays095#2929: Looked into the intro to modding page at https://docs.logicworld.net/articles/intro.html <[newline]> I followed the instructions on the page to make a custom and gate... and when I place it down, anything placed after it is a "ghost". Meaning I can't connect wires to it, and moving an existing object makes all of the "ghosts" disappear. <[newline]>  <[newline]> Is this a "not officially supported" kinda problem, or a "I have no idea what I'm doing" kinda problem?
Vinyl Boot Maven of Shade#1858: HMM has been updated. The RAM now has persistent data. The HexROM no longer wraps the address space to 0-255, and the AsmROM component has been added along with A manual. <[newline]> https://github.com/ShadowAA55/HMM
Vinyl Boot Maven of Shade#1858: Ok, my AsmROM seems to properly assemble code.
Limón#7879: we be doing a little assembling
TheWildJarvi《THE SEMI SEER》#1337: its assembling lol
TheWildJarvi《THE SEMI SEER》#1337: by defintion
TheWildJarvi《THE SEMI SEER》#1337: uhm
Vinyl Boot Maven of Shade#1858: I guess it's called assemble, though by definition it is a compiling algorithm.
zplilpz#9574: yea, assembles
TheWildJarvi《THE SEMI SEER》#1337: Do you mean assemble?
zplilpz#9574: i kinda cheated and built my assembly rom with customasm, now it compiles jus about anything 🙂
TheWildJarvi《THE SEMI SEER》#1337: Wym by compile instructions
TheWildJarvi《THE SEMI SEER》#1337: Very nice!
Vinyl Boot Maven of Shade#1858: My Assembly ROM can now compile Instructions with or without operands. Only thing left is Labels. Fun fun.
Vinyl Boot Maven of Shade#1858: Ok, setting something in Label.IData via code does do it...
Vinyl Boot Maven of Shade#1858: Rather, changes to Label.IData via the 'x' menu does it.
Vinyl Boot Maven of Shade#1858: Argh, I'm so close to having my Assembly ROM working, but I can't for the life of me find out how to request the server to update customdata from client. Any changes to the Label.IData does it somehow. But QueueDataUpdate does not. Anyone have any idea?
commanderguy3001#6660: yes, mod should work
TheWildJarvi《THE SEMI SEER》#1337: Thanks a bunch limon
TheWildJarvi《THE SEMI SEER》#1337: <@669177351036469298>  okay I think this is what you did right?
Limón#7879: and put it into gamedata
Limón#7879: folder
Limón#7879: go to server
commanderguy3001#6660: after server ran the updates... (1.5 GB download, let's go)
TheWildJarvi《THE SEMI SEER》#1337: <@859806257774723102> do you possibly know?
commanderguy3001#6660: will do
TheWildJarvi《THE SEMI SEER》#1337: <@669177351036469298> try this?
Vinyl Boot Maven of Shade#1858: Not, sure, I've never done anything with servers. I would assume it's essentially the same, copy to the gameData folder for the server.
TheWildJarvi《THE SEMI SEER》#1337: <@377717131556552708> how do you add that mod to a server?
Limón#7879: to make the or gate 0 tick, make the output an input peg and then make 2 one way phasic links from the input to the "output"
TheWildJarvi《THE SEMI SEER》#1337: but idk <a:KEKWgif:829851650717909094>
TheWildJarvi《THE SEMI SEER》#1337: and sureley that can all be done on another thread instead of the main thread
TheWildJarvi《THE SEMI SEER》#1337: 10 x and y bits
TheWildJarvi《THE SEMI SEER》#1337: i mean having a 20 bit address display with 8 bit color would be insane
WhyNot?#2534: lol same here
TheWildJarvi《THE SEMI SEER》#1337: im more interested in building the hardware to drive the display, than i am in actually building the display lmao
TheWildJarvi《THE SEMI SEER》#1337: id be really interested in a component that has the display
WhyNot?#2534: almost definitely, i was thinking of making it myself but without the display part. it really depends on how small i can get with whats available in the base game though
TheWildJarvi《THE SEMI SEER》#1337: would something like a graphic ram be possible? <[newline]> basically you have a component with x/y addr, color data,  and clock inputs and on the component itself is a display?
GHXX#9078: multiplexer :P
BigMintyMitch#1620: T flip flop 🤤
WhyNot?#2534: it was literally the first thing i made in c#, if i couldnt make an or gate i have no business making mods XD
HomelikeBrick42#1173: well done <[newline]> you have made a 1 tick replacement for a 0 tick or gate
WhyNot?#2534: now that thats been corrected, made all the gates ive been wanting XD
Limón#7879: I guess a component would be considered shared
Limón#7879: I was wondering why it was shared code
WhyNot?#2534: i made that error 2 hours ago
WhyNot?#2534: omg, thank you. i cant believe i made such a stupid mistake
Limón#7879: 
Limón#7879: it was
WhyNot?#2534: ... this better not be what been crashing me XD
Limón#7879: 0.-25
WhyNot?#2534: ```cs <[newline]> OrGate: <[newline]>     column: "STF" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 scale: (1, 1, 1) <[newline]>                 position: (0, 0, 0) <[newline]>                 color: 286e58 <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (0.-25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>         outputs: <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicCode: STF.OrGate <[newline]>     placingRules: <[newline]>         gridPlacingDimensions: (2, 1)```
Limón#7879: is the problem
Limón#7879: your component
WhyNot?#2534: same error as well
WhyNot?#2534: i black screened again - and i made no changes
Limón#7879: try changing priority in the manifest.succ to 10
Limón#7879: I fixed it
WhyNot?#2534: then i "fixed" the code for it and went back to black screen
WhyNot?#2534: i messed up the succ in this attempt but it *is* there
WhyNot?#2534: so im honestly not sure
WhyNot?#2534: i have another mod installed and ive been using it for the past couple days without issue and have also managed to load into the game with both my mod and it at the same time
Limón#7879: errors resulting in black screen are only caused by client side things
WhyNot?#2534: i thought it was weird as well, but im also not familiar with modding for this game either so i thought it was a common error but i guess not
Limón#7879: is that it's about shared code
Limón#7879: the weird thing about this error
WhyNot?#2534: same thing
Limón#7879: remove using STF.server.components
WhyNot?#2534: ```ID: STF <[newline]> Name: Basic Gates <[newline]> Author: STF <[newline]> Version: 0.0.0 <[newline]> Priority: 1```
WhyNot?#2534: yes
Limón#7879: is your mod's id STF?
WhyNot?#2534: ```OrGate: <[newline]>     column: "STF" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 scale: (1, 1, 1) <[newline]>                 position: (0, 0, 0) <[newline]>                 color: 286e58 <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (0.-25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>         outputs: <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicCode: STF.OrGate <[newline]>     placingRules: <[newline]>         gridPlacingDimensions: (2, 1)``` <[newline]> ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using System; <[newline]> using LogicWorld.Server.Circuitry; <[newline]> using STF.Server.Components; <[newline]> using STF.Server; <[newline]>  <[newline]> namespace STF.Server <[newline]> { <[newline]>     public class Loader : ServerMod { <[newline]>         protected override void Initialize() { <[newline]>             Logger.Info("Gates initialized"); <[newline]>         } <[newline]>     } <[newline]> }```
Limón#7879: and the loader
Limón#7879: can you show the .succ
WhyNot?#2534: same thing
Limón#7879: ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using LogicWorld.Server.Circuitry; <[newline]>  <[newline]> namespace STF <[newline]> { <[newline]>     public class OrGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() { <[newline]>             for (int i = 0; i < base.Inputs.Count; i++) <[newline]>             { <[newline]>                 if (base.Inputs[i].On) <[newline]>                 { <[newline]>                     base.Outputs[0].On = true; <[newline]>                     return; <[newline]>                 } <[newline]>             } <[newline]>             base.Outputs[0].On = false; <[newline]>         } <[newline]>     } <[newline]> }``` try this
WhyNot?#2534: thats the whole thing
Limón#7879: is there anything more than that
WhyNot?#2534: ```using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using LogicWorld.Server.Circuitry; <[newline]>  <[newline]> namespace STF <[newline]> { <[newline]>     public class OrGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() { <[newline]>             for (int i=0; i < Base.Inputs.Count; i++) { <[newline]>                 if (Base.Inputs[i].On) { <[newline]>                     Base.Outputs[0].On = true; <[newline]>                     return; <[newline]>                 } <[newline]>             } <[newline]>             if (!Base.Inputs[0].On && !Base.Inputs[1].On) { <[newline]>                 Base.Outputs[0].On = false; <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> }```
Limón#7879: can you show what it looks like now?
WhyNot?#2534: same error - and thank you for spending so much time helping me
Limón#7879: change all `Inputs` to `Base.Inputs` and do the same with `Outputs`
WhyNot?#2534: same error yet again unfortunately
Limón#7879: instead of doing `Inputs[x].Off` do `!Inputs[x].On`
Limón#7879: and replace it with .On
Limón#7879: remove all .Off
Limón#7879: ok
WhyNot?#2534: still black screened with same error
Limón#7879: ```cs <[newline]>             if Inputs[0].Off and Inputs[1].Off{ <[newline]>                 Outputs[0].On = false; <[newline]>             }``` should be <[newline]> ```cs <[newline]>             if (Inputs[0].Off && Inputs[1].Off) { <[newline]>                 Outputs[0].On = false; <[newline]>             }```
WhyNot?#2534: same thing
Limón#7879: what's the error now
WhyNot?#2534: i definitely missed that even after checking it a few times with the guide. but its also still black screening
Limón#7879: your succ should be `logicCode: STF.OrGate` when it's actually `logicCode: STF.Server.OrGate`
Limón#7879: it makes it easier down the line/I want to make sure you have everything
Limón#7879: for the actual code I would make sure to have these usings <[newline]> ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using LogicWorld.Server.Circuitry;```
WhyNot?#2534: i was actually looking at that code literally 2 minutes ago before i saw your response XD
Limón#7879: you can trim a lot of it/change it
Limón#7879: ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]> using System; <[newline]> using LogicWorld.Server.Circuitry; <[newline]> using wireless.Server.Components; <[newline]> using wireless.Server; <[newline]>  <[newline]>  <[newline]> namespace wireless.Server <[newline]> { <[newline]>     public class Loader : ServerMod { <[newline]>         protected override void Initialize() { <[newline]>             Logger.Info("wireless initialized"); <[newline]>         } <[newline]>     } <[newline]>     public static class Connections { <[newline]>         public static LogicComponent[][] WirelessConnections = new LogicComponent[16][]; <[newline]>     } <[newline]> }``` this is my loader code
WhyNot?#2534: ```using LogicAPI.Server.Components; <[newline]>  <[newline]> namespace STF <[newline]> { <[newline]>     public class OrGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() { <[newline]>             for (int i=0; i < Inputs.Count; i++) { <[newline]>                 if (Inputs[i].On) { <[newline]>                     Outputs[0].On = true; <[newline]>                     return; <[newline]>                 } <[newline]>             } <[newline]>             if Inputs[0].Off and Inputs[1].Off{ <[newline]>                 Outputs[0].On = false; <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> }``` <[newline]> ```using LogicAPI.Server; <[newline]> using LogicLog; <[newline]>  <[newline]> public class Loader : ServerMod { <[newline]>     protected override void Initialize() { <[newline]>         Logger.Info("Gates initialized"); <[newline]>     } <[newline]> }``` <[newline]> ```OrGate: <[newline]>     column: "STF" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 scale: (1, 1, 1) <[newline]>                 position: (0, 0, 0) <[newline]>                 color: 286e58 <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (0.-25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>         outputs: <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicCode: STF.Server.OrGate <[newline]>     placingRules: <[newline]>         gridPlacingDimensions: (2, 1)```
Limón#7879: <@!342001099190042626>
Limón#7879: and .succ
Limón#7879: can you show script?
WhyNot?#2534: I'm not sure what this error means `[SceneAndNetworkManager] going to error screen with message: "Error getting data of type LogicWorld.SharedCode.Components.ComponentInfo from node: "` Im pretty sure im almost there since i have the component in game but the script was wrong so i went and fixed something i saw that was clearly wrong and now im black screening again with this error
Vinyl Boot Maven of Shade#1858: succ files cannot contain '\t' only spaces. Not sure if this is your problem, but it's why I had black screen.
WhyNot?#2534: oh no, its there just not on my desktop for some reason
WhyNot?#2534: i guess i deleted it though? thats wierd. but i do know of one that i like
Limón#7879: that's good, you are already prepared
WhyNot?#2534: i already have one
Limón#7879: as you will needing to do a little bit of dll digging for some things (but most of what you need is already community documented)
Limón#7879: also you should get a program to look at dll's
WhyNot?#2534: ive made a short list with a friend already. particularly different latches and flipflops
Limón#7879: analog wire would be one
Limón#7879: if you are looking for mod ideas
Limón#7879: yw
WhyNot?#2534: thank you for the help
Limón#7879: like the GC
Limón#7879: and you get all the fun features of C#
Limón#7879: it's much easier
WhyNot?#2534: anyway, now that i actually put it in right, its still a black screen so i guess im learning c#
Limón#7879: ah
WhyNot?#2534: i like to experiment when i make things so i always keep two seperate versions should i go down the rabbit hole and nothing works so i can just go back to the original file say i spent several days on it
Limón#7879: which are, logic script, c#, and harmony
Limón#7879: I would say logicscript is the safest modding out of the choices
Limón#7879: safe of what?
WhyNot?#2534: oh wait, i forgot to copy that last edit to the live file XD i work in a seperate directory to be safe
Limón#7879: I have a guide for C# in the pinned message
Limón#7879: all of them?
WhyNot?#2534: ill take a look into the c# bc thats a black screen as well
Limón#7879: try replacing the in
WhyNot?#2534: i thank you for the help, but your code is also giving me a black screen...
Limón#7879: and it's very hard to work with
Limón#7879: and only supports some operations
Limón#7879: the reason why people don't use logicscript is because it's outdated I am pretty sure
Limón#7879: for the `in` it's either `in[0:1]` or `in[0:2]` or `in[0..2]` or the one showed in code
Limón#7879: ``` <[newline]> any <[newline]>     if in[0..1] == 00 <[newline]>         out[0] = 0 <[newline]>     else <[newline]>         out[0] = 1 <[newline]>     end <[newline]> end```
WhyNot?#2534: lol
Limón#7879: so wrong I accidentally crashed discord
Limón#7879: it is very wrong
WhyNot?#2534: the succ and lsx
WhyNot?#2534: ``` <[newline]> OrGate: <[newline]>     column: "Logic" <[newline]>     prefab: <[newline]>         blocks: <[newline]>                 color: (0, 174, 209) # The block's RGB color <[newline]>         inputs: <[newline]>                 position: (-0.25, 0.5, -0.5) # The position of the peg, relative to the center of the component <[newline]>                 rotation: (-90, 0, 0) # The rotation of this input peg <[newline]>                 length: 0.6 <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>         outputs: <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicScript: orGate <[newline]> ``` <[newline]>  <[newline]> ``` <[newline]> input'2 a <[newline]> output b <[newline]>  <[newline]> when * <[newline]>     if a == 00 <[newline]>         b = 0 <[newline]>     else <[newline]>         b = 1 <[newline]>     end <[newline]> end <[newline]> ```
Limón#7879: show code
WhyNot?#2534: i was using those links to make it, but thank you for telling me they do work, so i just need to figure out why mine arent then XD
DADp#7461: logic script is availible, but limited (thats why people moved to c#), if you look in pins, theres a few links for logicscript
Limón#7879: real bad
Limón#7879: they suck though (suck as in they are hard to make because language is kinda bad)
Limón#7879: yes
WhyNot?#2534: do logicscript mods work? the only mods im seeing that are available are in c# so im not sure here. im just trying to experiment with making mods for the game however I dont know c# so i decided to do the logicscript thats available, but anytime its loaded the game shows a black screen with the version on the bottom right and nothing else on launch.
TheWildJarvi《THE SEMI SEER》#1337: BYTE ADDR RAM
TheWildJarvi《THE SEMI SEER》#1337: okay imma do that
Vinyl Boot Maven of Shade#1858: Probably
TheWildJarvi《THE SEMI SEER》#1337: should i make the request its own thread
TheWildJarvi《THE SEMI SEER》#1337: yeah, thats over my head <a:KEKWgif:829851650717909094>
Vinyl Boot Maven of Shade#1858: Ok, now the problem is how do manage the actual file aspect.
TheWildJarvi《THE SEMI SEER》#1337: if i had a file with the line <[newline]> ``` <[newline]> 0xaa bb cc dd <[newline]> ``` <[newline]> in little endian byte 0 is dd <[newline]> in big endian byte 0 is aa
TheWildJarvi《THE SEMI SEER》#1337: yeah so, when the user loads a file, if you could have them specify endianness, so that it can be read in either way
Vinyl Boot Maven of Shade#1858: Oh sorry, I didn't notice the part where you specify endianness.
TheWildJarvi《THE SEMI SEER》#1337: 
TheWildJarvi《THE SEMI SEER》#1337: this is little endian(graphic made by me)
Vinyl Boot Maven of Shade#1858: 32 bit address means 4 gigs of memory.
Vinyl Boot Maven of Shade#1858: I should be able to have the component load the whole file on world load, and save it when you leave the world. But with very big files it would use a lot of memory.
Vinyl Boot Maven of Shade#1858: So, what about endianness?
TheWildJarvi《THE SEMI SEER》#1337: When you load a word you load 4 bytes in parallel
Vinyl Boot Maven of Shade#1858: Yea. That's what I was thinking.
TheWildJarvi《THE SEMI SEER》#1337: (byte addressed memory)
TheWildJarvi《THE SEMI SEER》#1337: So each address points to a byte
TheWildJarvi《THE SEMI SEER》#1337: Each word is 4 bytes
TheWildJarvi《THE SEMI SEER》#1337: Nooooo
Vinyl Boot Maven of Shade#1858: The word size is 32 bits. So the address could point to a single 32 bit value, meaning incrementing it would be an offset of 32 bits. But I'm guessing you want to offset by 8 bits.
TheWildJarvi《THE SEMI SEER》#1337: Gotchyu
TheWildJarvi《THE SEMI SEER》#1337: Oh but the ram itself still has to read and write to the file
TheWildJarvi《THE SEMI SEER》#1337: It's only to save the CPU state before closing the game
TheWildJarvi《THE SEMI SEER》#1337: File reading and writing won't happen real time
Vinyl Boot Maven of Shade#1858: The file reading and writing could be tricky as LW can run thousands of ticks per second. Opening a new filestream every change in address would obviously be a bad option. And since the address could jump anywhere in the file, some sort of cache would likely be a good choice, but I've little experience in that area. If it's possible to load the entire file into memory, that would be easiest, but I'd need some criteria for when to right the memory back to the file.
TheWildJarvi《THE SEMI SEER》#1337: You have the Sign part right, but I don't understand the first part of your question
Vinyl Boot Maven of Shade#1858: Ok, I think I get it. To be certain, and increment to address is an offset of 8 bits. With SIGN any sized read is sign extended to 32 bits. That right?
TheWildJarvi《THE SEMI SEER》#1337: <@!377717131556552708> does this help? lol
TheWildJarvi《THE SEMI SEER》#1337: ______________________________________________________________________________________________________ <[newline]> **__MOD REQUEST__** <[newline]>  <[newline]> Byte Addressable RAM that can load a working ram file( .hex format) or write its contents to a file( .hex format).  <[newline]> Let the user specify Byte Endianness when writing/reading a file <[newline]>  <[newline]> ***INPUTS*** and ***OUTPUTS*** <[newline]> ``` <[newline]> PORT             | Direction | Width <[newline]> _________________|___________|__________ <[newline]> Data in(Din)     | INPUT     | 32bits <[newline]> Address(ADDR)    | INPUT     | 32bits <[newline]> Write Enable(WE) | INPUT     | 1 bit <[newline]> ADDR MODE(AM)    | INPUT     | 2 bits <[newline]> SIGN(SGN)        | INPUT     | 1 bit <[newline]> Clock(CLK)       | INPUT     | 1 bit <[newline]> Read             | INPUT     | 1 bit <[newline]> Data Out(Dout)   | OUTPUT    | 32 bits <[newline]> _________________|___________|_________ <[newline]> ``` <[newline]> __***Description of Device***__ <[newline]> **WRITE MODE** <[newline]> WE must be *true* to be in this mode <[newline]> AM defines what is being stored. 00 = word(32bits), 01 = half word(16bits), and 10 = byte(8bits) <[newline]> Data Input is stored at the location specified by the *ADDR* input <[newline]> Write mode is synchronous, Data is written on the rising edge of the CLK input <[newline]>  <[newline]> **READ MODE** <[newline]> Read must be *true* to be in this mode <[newline]> AM defines what is being loaded.  00 = word(32bits), 01 = half word(16bits), and 10 = byte(8bits) <[newline]> SIGN input determines if non word values should be sign extended <[newline]> Data Out is loaded from the location specified by the *ADDR* input <[newline]> Read mode is Asynchronous, Data can be loaded at any time <[newline]> ______________________________________________________________________________________________________
GHXX#9078: the most annoying part  (as of editor version 2018) is when you run code that is blocking, e.g. tcp connect (when it times out) in the start() method, then it blocks the thread which results in the game's ui thread to be blocked, which then for some reason results in a complete deadlock of the editor because unity runs the game ui thread in its own ui thread!!! so at that point you need to kill it with taskmanager. Then you boot the project back up and see that your changes you made to your scene didnt save. Then you go onto google and find out that it does save a backup copy when you run the game, but its destroyed when you re-open the project
Limón#7879: the most annoying part was it compiling
Limón#7879: as someone who developed with unity for more than 5 hours
Vynix#3003: The only annoying thing to do was downloading archived versions, the button doesn't work properly. I found a work around though, and works perfectly.
Vynix#3003: Lmao
Sekoia#3968: I heard that it was a pain and never bothered trying lol
Vynix#3003: From my experience with Unity, even as a beginner, it wasn't that annoying. I've heard that the newer versions might be faster, on Linux, than Windows, by a small margin though.
Limón#7879: that's really cool
Limón#7879: woah
Vinyl Boot Maven of Shade#1858: Got the beginnings of Assembly rom set up. The button will compile the program in the label portion and turn green. Changing the text will turn it back red(as well as any other changes in the components data, including moving it, but I'd rather not make a copy of the text and compare it to check if its the only thing that changed.) WIthin the label will be a section for the compilers configuration that defines what assembly directives translate to what machine code, so it can be configured to your specific instruction set.
StartForKiller#0001: Not really, you could feed it more types of packets
GHXX#9078: mod idea for the ultra computer savages among us: <[newline]> a internet card which you write to and read from bit by bit, zero-byte terminated, where triggering the clock signal advances the bit position <[newline]> so it would have two inputs and one output (data in, clock in, data out) <[newline]> i suppose you would feed it a raw http(s) request
Limón#7879: I don't think it does
Moojuiceman#5661: You can specify dependencies in your manifest. <@859806257774723102> does your doc repo include that info? Can't remember if I put it in the first file or if someone added it
JPM-Baroque Spaceship#6542: :)
JPM-Baroque Spaceship#6542: im gonna try your mod
Vinyl Boot Maven of Shade#1858: HMM has been updated, now correctly shows text in world.
Vinyl Boot Maven of Shade#1858: That happen for you as well?
Vinyl Boot Maven of Shade#1858: Argh, the text isn't showing up in world.
Vinyl Boot Maven of Shade#1858: Oh, lol, I'll fix that.
reklrekl#3271: nvm your mod is working fine. <[newline]> Either I downloaded it before the fix or I chose the wrong files from your repo. <[newline]> there's /src/ that actually contains the fix and /HMM/src/ which does not.
Vinyl Boot Maven of Shade#1858: It seems to be working for me, could you tell me what issues your having so I can try to fix them?
Vinyl Boot Maven of Shade#1858: I thought I uploaded the fix. I'll get that done soon.
reklrekl#3271: CheeseUtil (at least RAM and Displays) is fine in 0.90.3
reklrekl#3271: 0.90.2 broke HMM I think. <[newline]> I've got a working ROM mod (that can actually load binary files from disk, so u don't have to type ur 32Kb ROM) that I'm going to release sooner or later <[newline]> rather later as I have no Idea how this github sutff works...
JPM-Baroque Spaceship#6542: Oof some mods doesnt work in the latest version or im just dumb
Sekoia#3968: unity on linux is a pain
Limón#7879: How does that relate to unity
Sekoia#3968: I'm on linux, so I don't want to
Limón#7879: You can optionally deal with unity if you want
Sekoia#3968: I don't have to deal with unity!
Sekoia#3968: oh, that's awesome
Limón#7879: It uses C# reflection
Limón#7879: The game is the compiler
Vinyl Boot Maven of Shade#1858: That's awesome. Where's the compiler. Is it shipped with logic world? Cause I'd definitely want that feature in my games.
Limón#7879: Yes
Vinyl Boot Maven of Shade#1858: Wait, really? So I don't even have to use vs and build my mods? Just write the code?
Sekoia#3968: <#910673109164638239>
Sekoia#3968: ugh
JPM-Baroque Spaceship#6542: 👀
JPM-Baroque Spaceship#6542: I want to try some
JPM-Baroque Spaceship#6542: is there a list of mods right now?
Limón#7879: You can probably reference them if they are loaded first
TheWildJarvi《THE SEMI SEER》#1337: i really need it as easy as possible to load other poeples mods lol
KyleRokuKyu#6975: 
KyleRokuKyu#6975: There's also a specific folder structure, in case you weren't aware
KyleRokuKyu#6975: The game is intentionally designed not to have compiled code in mods. <[newline]> You give it the raw .cs files and it compiles it on launch
Vinyl Boot Maven of Shade#1858: Is there a way to have our mods easily deployed? If its compiled in  the game data folder with relative paths to the dlls it should be able to work right?
Sekoia#3968: 1 square delays signals an extra 10th of a tick
Sekoia#3968: to make it worse: sub-ticks
Limón#7879: And smaller compact stuff
Sekoia#3968: it's awful in as many ways as possible
Limón#7879: But it would make you want smaller wires
Sekoia#3968: I said awful for a reason
Limón#7879: Would be hard to implement
Sekoia#3968: awful mod idea: every 10 tiles of wire takes an extra tick to transfer
Vinyl Boot Maven of Shade#1858: Oh? I don't know where that is in code. How's it n^2, are they checking against all existing colliders every added component?
Ecconia#4929: Didn't Gnog figure out, its the creation of the colliders?
Vinyl Boot Maven of Shade#1858: I guess I'll just have to wait till January when Jimmy fixes it.
Vinyl Boot Maven of Shade#1858: Well, I can't seem to track down the extreme world load time problem. From the logs, It seems to be happening when a the scene with build index 1 is loaded, but I don't know what's in the scene or what functions are being called from there.
Moojuiceman#5661: Harmony in general is a way to overwrite methods at runtime. You give it a before/after/in place alternative and say patch X, then it does the hard work for you
Vinyl Boot Maven of Shade#1858: What does that harmony dll injector thing do? Would it be possible to maby intercept the world loading code and implement your own instead?
Ecconia#4929: Is there a mod, which lets you temporary disable component-component collisions? <[newline]> If not we need that. Its absolutely aweful to have obviously valid cases not working.
101#1688: Feeling smug about not using relays in my builds 🙃
reklrekl#3271: see bug #250 <[newline]> https://logicworld.net/tracker/250
101#1688: Is crashing because of relays a thing?
101#1688: When you say, crashes because of the relays, what do you mean?
Leo3065#5297: omg that's amazing
Moojuiceman#5661: https://discord.com/channels/401255675264761866/901659878869844048/911747086146482266 this mod already does something like this. Currently just an on or off, but the method could be analog too
Leo3065#5297: What I'm thinking is that, is it possible to make some sensor thing that detects how far is the player in front if it, if any
Sekoia#3968: surely, since every update needs to be sent to every player
Leo3065#5297: strange question: is it possible to get a list of players?
reklrekl#3271: i figured out how to let my ROM load .bin files from disk and adapt pin count by file size. <[newline]>  <[newline]> Worked fine in fresh save, tried it on my 6502 and server crashes cause of the Relays
Ecconia#4929: Guess we have to wait a month for the fix (or more)
Ecconia#4929: Yeah right
reklrekl#3271: #250, #251
Ecconia#4929: What was your issue again? (I didn't capture that)
reklrekl#3271: though I have the Server trace just enabled if I cant figure out by manual Logger.Info calls. <[newline]>  <[newline]> It makes the game load forever and spam the log
Ecconia#4929: Thanks a lot 🙂
reklrekl#3271: in <[newline]> <Logic World>/licc/autoexec.lsf     and <[newline]> <Logic World>/licc-server/autoexec.lsf add <[newline]>  <[newline]> loglevel "trace"
Ecconia#4929: <@!264140092833136641> Would you mind, telling me how to change the loglevel of LogicWorld? <[newline]> Cause I want to know a bit more about why my client freezes (my fault).
km#1297: carried away making themes configurable in succ file now wont end up posting it till 2morrow or so
km#1297: but I could still do stuff like color them based on their coordinates n stuff
km#1297: for wire I can already color them all individually if I wanted to, the issue is getting the user input to decide what color each wire gets to be and not sure if I have a persistant id for the wires at the place I'm modifying the color. I might, but idk if wires even have a persistent id, they are just accessed by index in CircuitStatesManager
KyleRokuKyu#6975: Yea, global isn't so bad because of the common material. <[newline]>  <[newline]> The two ways to handle individual wire colors would be either: <[newline]> a new material instance per color since rendering requires a different material for different albedo color values (You 'can' get around this with complicated shaders or compute shaders but that's a bit overkill) <[newline]> or <[newline]> Have a pallet texture and just shift the UV coords for each wire to recolor them.  The downside is a drastically limited color choice compared to unique material instances per color
km#1297: well I can def make it so you can have custom global wire color you can change with a command but with how im doing it there is no [easy] way to group them with different colors
km#1297: its not exactly efficient but keeps up well enough
km#1297: thanks yall
km#1297: 😄 will post it soon! made it cooler since then just want to modify the skybox before I post it
Limón#7879: If we have color buttons why not wires
Limón#7879: It could make organization better
Limón#7879: I need it
KyleRokuKyu#6975: Even if it's global
KyleRokuKyu#6975: I love the idea of custom wire color
KyleRokuKyu#6975: I absolutely LOVE that
km#1297: 😄 ty
Reese4221#8317: thats really cool
km#1297: not quite there
km#1297: 
km#1297: this is too fun, trying to make it look cool like some pics people posted in logic-world channel the other day
Limón#7879: deblob level
km#1297: inverting and grayscale also fun although I wasn't catching the wire color with the harmony patch
km#1297: I was thinking unicorn poop mod
km#1297: thats a good name
km#1297: 😄
Limón#7879: lsd mod
km#1297: hehe
km#1297: https://www.youtube.com/watch?v=lc9r993d6UU
km#1297: I want to add a custom shader into the mix somehow idk if harmony is right tool, going to have to learn more about unity
km#1297: yeh gives you lots of options / shouldn't need to actually add a field to a class to get whatever it is done. Haven't toyed with it ever before and I'm still a unity nub but going to try to do some crazy visual hax today
KyleRokuKyu#6975: That said, you're probably not gonna be able to add fields to the classes.  But you could have a helper/extension class that hooks directly into all (or all relevant) functions/methods of the class
KyleRokuKyu#6975: Harmony is SO gooooooood
KyleRokuKyu#6975: Ye that
km#1297: using False Pattern's harmony / dll injector mods may work for you https://falsepattern.com/lw/ I've only tried the example mod so far that patches the log method but it works and I want to try doing some crazy hax now. Harmony docs: https://harmony.pardeike.net/articles/intro.html
KyleRokuKyu#6975: <@!487609645549223941> are you doing dll injection? <[newline]> LW, at base, requires the raw .cs files and compiles at runtime
KyleRokuKyu#6975: <@!297019145659219968> yea, for now it's just handled loosely here <[newline]> Modding is still infant stage for LW <[newline]>  <[newline]> iirc, Jimmy said he wants to host a centralized mod... hoster... thing in due time
_Mpcs#0525: ohh i see there is a threa
_Mpcs#0525: Does anyone curate a modlist or something like that?
Limón#7879: maybe you can't even phasic link between other components
gnog#2259: How do I properly add fields to classes in .dll files. If i do so, it crashes without any message or with Unity's - "A scripted object has a different serialization layout when loading"
Vinyl Boot Maven of Shade#1858: Thanks for the heads up. Fixed.
km#1297: https://discord.com/channels/401255675264761866/910673109164638239/911888514050830407 updated file-emitter just posting here in case ppl dont see the mod share thread
km#1297: <@!377717131556552708> both our mods broke in last update I just noticed since we based both off the Label. To fix it I had to add null check for the text mesh in DataUpdate of client side component.
km#1297: nice ill check it out later
Limón#7879: the github is here
Limón#7879: https://github.com/LonnonDev/Wireless
Limón#7879: but if someone wants to try and get it to work
Limón#7879: I can't get it to link the pegs
Limón#7879: I think the mod is almost done
KyleRokuKyu#6975: I was still thinking in terms of component addresses but that's not particularly needed.
KyleRokuKyu#6975: I guess it could solve it fully server side, actually
KyleRokuKyu#6975: I was thinking about a static class <[newline]> But it only somewhat solves the issue.
Limón#7879: current I have an array of arrays of arrays of inputs
Limón#7879: but I think using a static class will work
Limón#7879: someone who is a pro at C# might laugh at us for not thinking of this
Limón#7879: I think I might've found the most simple solution yet
Limón#7879: `going to error screen with message: "Error getting data of type LogicWorld.SharedCode.Components.ComponentInfo from node: "`
Limón#7879: so maybe it will work
Limón#7879: like inputs
Limón#7879: I never do anything with the LogicComponent fields
Limón#7879: this should work
Limón#7879: ```cs <[newline]>     public class clock : MonoBehaviour { <[newline]>         public void Clock = new ClockComponent(); <[newline]>     }```
Limón#7879: can I not use monobehaviour on server side code
KyleRokuKyu#6975: I did something similar with my image importer Banner
KyleRokuKyu#6975: You can <[newline]> But then you'll have to add it to the Unity GameObject manually <[newline]> Which would also only be client side
Limón#7879: maybe I can make a class that doesn't extend LogicComponent but instead MonoBehaviour
Limón#7879: wait
KyleRokuKyu#6975: Which is all client side anyways
Limón#7879: 😭
KyleRokuKyu#6975: You can basically think of LW as using nothing in Unity but rendering
Limón#7879: it would be VERY convenient
KyleRokuKyu#6975: That'd be convenient 😛
KyleRokuKyu#6975: Nope
Limón#7879: does LogicComponent ever extend MonoBehaviour
Limón#7879: or something like that
Limón#7879: and just make a reference to a class in that game object
Limón#7879: I am tempted to make a gameobject
Limón#7879: which I think I can
Limón#7879: if I can use unity engine
KyleRokuKyu#6975: All references to world data, that I can find, are internal
KyleRokuKyu#6975: It's just a matter of finding a reference to it
Limón#7879: <:ferrisWeary:797313596065185792>
Limón#7879: than
Limón#7879: if you can get stuff by server side
KyleRokuKyu#6975: server side
Limón#7879: this is server or client side?
KyleRokuKyu#6975: That's our lead
KyleRokuKyu#6975: LogicAPI.Services.IWorldData
KyleRokuKyu#6975: If we can reference by component address <[newline]> Then you only need 1 client side component that reads and sends the relevant component list to the server
Limón#7879: which is?
KyleRokuKyu#6975: I have an idea tho
KyleRokuKyu#6975: I just don't see a way for server side objects to talk to each other
KyleRokuKyu#6975: But, until we find a better way, it's what works
KyleRokuKyu#6975: Sort of, yea
Limón#7879: very redudant
KyleRokuKyu#6975: yup
Limón#7879: 
KyleRokuKyu#6975: You could even go so primative as to send it a string that's "variableName|value" and parse it once you receive it
KyleRokuKyu#6975: Yea, the quickest way to get it solved would be to write a short client side script that writes custom data for the logic code to read and use
Limón#7879: this is so hard
Limón#7879: I just need the logic component 😭
KyleRokuKyu#6975: technically, not bad <[newline]> practically, you'd just have a string or string array with no compilation
Limón#7879: how hard would it be to deserialize an entire class
KyleRokuKyu#6975: So I'm gonna have to stop for now and play a brain dead game for a while
KyleRokuKyu#6975: and my brain is still fried from work this week
KyleRokuKyu#6975: I was but I don't know enough about it to know where to trace through
Limón#7879: are you looking at the server.dll to see if you can find a server side version of that client code?
KyleRokuKyu#6975: It'd take a lot of work... but like... <[newline]> You 'could' write your own Unity based connection system for that first tick lol
Limón#7879: yeah it ruins a lot of ideas
RyanT#1426: 😭
Limón#7879: don't think so
RyanT#1426: Can you connect phasic links without a 1 tick delay between when u connect them and when they work?
KyleRokuKyu#6975: Basically, make a handler that sends info to the Server Code of a Component from the Client Code <[newline]> Then, all Client Components can just talk to each other and have that mirror onto the server
KyleRokuKyu#6975: You should also have clientCode on the clock <[newline]> Then you can get the ComponentClientCode and use that to speak to the LogicCode of that component
km#1297: Yeah it is, I used this when making 1st version of file-emitter although im taking it out now
Limón#7879: 😭
Limón#7879: because server code gets compiled after client
Limón#7879: it does not work
Limón#7879: ```cs <[newline]>             foreach (ComponentAddress cool in SceneAndNetworkManager.MainWorld.Data.AllComponents) { <[newline]>                 if (Rendering.Entities.GetServerCode(cool).ToString().Contains("clock")) { <[newline]>                     (Rendering.Entities.GetServerCode(Transmitter.Address) as transmitter).Clock = (Rendering.Entities.GetServerCode(Transmitter.Address) as clock); <[newline]>                 } <[newline]>             }``` maybe this will work
KyleRokuKyu#6975: I haven't verified but I assume it would cause a lot of issues if it ever desynced
KyleRokuKyu#6975: Hopefully
Limón#7879: ComponentAddress the same for client and server?
Limón#7879: but yeah it's probably the only way
Limón#7879: it gets messy
KyleRokuKyu#6975: As much as you hate that
KyleRokuKyu#6975: It'll probably need to be a mix of both client and server
Limón#7879: all my code can be client side
Limón#7879: if it can do that
KyleRokuKyu#6975: No clue on that
Limón#7879: what about adding phasic/secret links?
KyleRokuKyu#6975: base.GetInputState(index)
Limón#7879: base.Inputs[index] I presume
KyleRokuKyu#6975: Client Code can get inputs
Limón#7879: or is that only server?
Limón#7879: can client code get inputs
km#1297: I thought it was my mod
km#1297: it was fun
km#1297: yes
Limón#7879: too much spam = crash game
Limón#7879: 👍
Limón#7879: yeah that worked
km#1297: had to remove it when I didnt need it anymore because it does cause much spam in console that slows down game
km#1297: in licc folder... or was it licc-server... crap can't remember
km#1297: you add `loglevel "trace"` to autoexec.lsf
km#1297: there is a way you can get it to say more 1 sec
Limón#7879: 👍
Limón#7879: it doesn't even tell me what failed to compile
Limón#7879: amazing
Limón#7879: `2021-11-20T23:10:14Z | ERROR | [SceneAndNetworkManager] going to error screen with message: "Failed to compile scripts" <[newline]> 2021-11-20T23:10:14Z | INFO  | [Online manager] Setting status to Online -  <[newline]> `
km#1297: yeah its a pain though hopefully it will get more clear in future
km#1297: if not then idk
km#1297: like if the data is already part of your IData
km#1297: you might not have to, you just have to deserialize it a little based on that example because it looks automatically serialized
Limón#7879: I hate client and server
Limón#7879: I do not wish to serialize stuff
Limón#7879: 😭
km#1297: havent actually tried this yet
km#1297: Well I need to test what shows up in it but looking at the hex ram mod it looks like it is serialized version of the client IData as a byte array, he didnt need to define the serialization so the default implementation was good enough I am guessing
Limón#7879: what is CustomData though?
km#1297: but server component can get client side component data through ComponentData.CustomData
km#1297: the instances exist in separate processes they can never meet
Limón#7879: 👀
Limón#7879: if so
Limón#7879: can I access a serverside class from a clientside class of the same object?
km#1297: probably fine
km#1297: haha the internet will only exist if you can perceive it
Limón#7879: all of this needs to be client side
Limón#7879: ```cs <[newline]>             foreach (ComponentAddress cool in LogicWorld.SceneAndNetworkManager.MainWorld.Data.AllComponents) { <[newline]>                 if (LogicWorld.Rendering.Entities.GetServerCode(cool).ToString().Contains("clock")) { <[newline]>                     Clock = LogicWorld.Rendering.Entities.GetServerCode(ComponentAddress) as clock; <[newline]>                 } <[newline]>             }```
Limón#7879: we have all the code for that (client side)
km#1297: because you cant access those serverside
km#1297: looping through every component?
Limón#7879: of what
km#1297: which part do you have to figure out?
Limón#7879: time to serialize data or something
Limón#7879: yeah nothign
Limón#7879: ill check the sharedcode
Limón#7879: 
km#1297: yeah makes sense if that is all just for rendering
Limón#7879: LogicWorld is probably only clientside
Limón#7879: 
Limón#7879: Ill try with both
Limón#7879: with the using it doesn't work
km#1297: `LogicWorld.Rendering` has the WorldRenderer
km#1297: for 1st one
km#1297: do you have `using LogicWorld` or you could try changing to `LogicWorld.SceneAndNetworkManager`
Limón#7879: I think the code works
Limón#7879: so if I can fix those
Limón#7879: still have the top 3 errors
km#1297: trying stuff now, gl
Limón#7879: GetClientCode -> GetServerCode maybe
Limón#7879: I think I might've figured it out
Limón#7879: in the server folder
Limón#7879: Server.dll
KyleRokuKyu#6975: I've gotta go for like 20 minutes <[newline]> Then I'll come back and see what I can find <[newline]>  <[newline]> In the mean time, what dll does LogicCode come from?
km#1297: gotcha
Limón#7879: yeah
km#1297: did that loop from before only work for client side code?\
KyleRokuKyu#6975: I got you fam
Limón#7879: and it would be finished
Limón#7879: it's just I need to get that class
Limón#7879: I have almost have all the code done
km#1297: what I was thinking is I'll try to make one little remote button mod test for now
km#1297: once we unlock this technology so much will be possible
Limón#7879: yeah Class A (actually called clock) is acting as a Server for the Transmitter and Reciever
Limón#7879: ahhh
km#1297: you were talking about it previously
km#1297: haha
KyleRokuKyu#6975: lol
Limón#7879: haxer
Limón#7879: how did you know this was for wifi
KyleRokuKyu#6975: Tho, they own Universal Studios
km#1297: they the worst
KyleRokuKyu#6975: No thanks
KyleRokuKyu#6975: XD
km#1297: who wants to be comcast
km#1297: wireless race
km#1297: xD
KyleRokuKyu#6975: I've also been considering different wifi options
km#1297: ive been thinking about how to do wifi too
Limón#7879: yeah
KyleRokuKyu#6975: Editing a public field in another LogicCode?
km#1297: ohhh
Limón#7879: I am trying to edit a public field
KyleRokuKyu#6975: What do you need to pass?  Or are you trying to add a class to a component?
Limón#7879: I am trying to get the serverside class A and pass to the other serverside class B
KyleRokuKyu#6975: I forget the function name but it's there
KyleRokuKyu#6975: There's also a callback for when CustomData is changed
KyleRokuKyu#6975: Then you can just use ComponentData.CustomData on the LogicCode
km#1297: but the game does it automagically I think or tries as best it can
KyleRokuKyu#6975: Yea, the IData interfacfe handles info between LogicCode (Server side) and ClientCode(Client side)
km#1297: or interface
km#1297: just the data class
KyleRokuKyu#6975: Oh, I'm not.  You shouldn't need to
Limón#7879: how do you serialize and deserialize an entire class
km#1297: for you
km#1297: 😛 well it did
KyleRokuKyu#6975: I was just BRUTE FORCE MAKE WORK
KyleRokuKyu#6975: lol
km#1297: was serializing more than 1 bit
km#1297: yeah I tried basing my thing off yours at first and got so lost everything was broken so I gave up a while ago
KyleRokuKyu#6975: (I found out you didn't need to manually handle the serialization after I made the detector lol)
KyleRokuKyu#6975: But yea, you can do it simpler
KyleRokuKyu#6975: Those two
KyleRokuKyu#6975: https://github.com/KyleRokuKyu/Locomotion/blob/main/The%20Actual%20Mod/Locomotion/src/server/DetectorLogic.cs
KyleRokuKyu#6975: https://github.com/KyleRokuKyu/Locomotion/blob/main/The%20Actual%20Mod/Locomotion/src/client/Detector.cs
km#1297: he uses it to tell the logic component about a string.. well it seems partly automagic maybe it appears in CustomData automatically because it's from the IData class
KyleRokuKyu#6975: I'm almost certainly doing it wrong <[newline]> But the Detector I made serializes it client side and deserializes it server side
km#1297: I'm using https://github.com/ShadowAA55/HMM vinyl boot maven's mod as an example to try to use it right now
Limón#7879: How do I use custom data?
KyleRokuKyu#6975: Otherwise, you could write a quick ClientCode script to pair with it and shove what you need into CustomData
Limón#7879: I have only done ServerSide stuff
KyleRokuKyu#6975: lol <[newline]> I can look into the logicCode side but I haven't done much in that vein yet so it'd be a longer dive
Limón#7879: <:bobby_sob:692807893023588363>
KyleRokuKyu#6975: I do most of my stuff in the clientCode side because it seems, based on the MHG base mod, that mods code was intended for client side.
KyleRokuKyu#6975: That's why then <[newline]> What I wrote was intended for clientCode
Limón#7879: logicCode
KyleRokuKyu#6975: Are you calling it from client code or logic code?
Limón#7879: 
KyleRokuKyu#6975: I think that's all
KyleRokuKyu#6975: LogicAPI.Data <[newline]> LogicWorld <[newline]> LogicWorld.Interfaces
Limón#7879: do I need any usings?
KyleRokuKyu#6975: Yup, so just to reiterate it all into one bit of code, it'd look something like <[newline]>  <[newline]> ```foreach (ComponentAddress address in SceneAndNetworkManager.MainWorld.Data.AllComponents) <[newline]> { <[newline]>     if (WorldRenderer.Entities.GetClientCode(address).GetType() == typeof(ClassName)) <[newline]>     { <[newline]>         (WorldRenderer.Entities.GetClientCode(address) as ClassName).DoStuff(); <[newline]>     } <[newline]> }```
km#1297: very cool
Limón#7879: thankyou 🙏
KyleRokuKyu#6975: That will give you the class of the component so you can directly call functions and edit public variables etc.
KyleRokuKyu#6975: ```(WorldRenderer.Entities.GetClientCode(ComponentAddress) as ClassName)```
KyleRokuKyu#6975: Ok, <@!859806257774723102> figured it out
Ecconia#4929: thanks~
Limón#7879: https://github.com/kyle-marshall/zinger-mod
Ecconia#4929: Could someone send me a simple modded component I could use to test the modding-placing component bug in future?
Limón#7879: ah
KyleRokuKyu#6975: I'm looking into how to specifically access the class
Limón#7879: LogicComponent or actual Class?
KyleRokuKyu#6975: Well, specifically, that returns a interface
KyleRokuKyu#6975: I needed to just ignore Sockets so I needed a bool
KyleRokuKyu#6975: WorldRenderer.Entities.GetClientCode(ComponentAddress) <[newline]> This returns the class
Limón#7879: this gets class or returns bool (or both)?
KyleRokuKyu#6975: That's how I did it with the integrated circuit component.  I needed to not hide sockets
KyleRokuKyu#6975: WorldRenderer.Entities.GetClientCode(ComponentAddress).ToString().Contains("NameOfClass")
km#1297: whoa I didnt know I had all these tools
km#1297: oooo never seen that ty
Limón#7879: 
Limón#7879: it timed out
Limón#7879: and when I tried to reconnect
Limón#7879: the client stopped getting packets (I am guessing (I do not know much networking)) from server
Limón#7879: steam
Limón#7879: my own server
Ecconia#4929: Still a thing? Which world did you corrupt?
km#1297: Is there a way to launch the server standalone?
Limón#7879: still a thing
km#1297: I would try if I knew how to run client with mods and server without at the same time
Limón#7879: I mean that would verify it to yourself
Limón#7879: does it on your's epicly
Ecconia#4929: <@!284602593597194250> You created an issue: <https://logicworld.net/tracker/88> <[newline]> About placing modded components. I do not have any means to test if the fix actually works. <[newline]> Could you or someone else here try to crash a vanilla server with a modded component?
Limón#7879: so thankyou
Limón#7879: the only people that could probably help are you, moojuiceman, and cheese
KyleRokuKyu#6975: I usually just dig through source code with ILSpy to find functions <[newline]>  <[newline]> I'll look into it once I'm done with food (If someone else hasn't come along by then)
Limón#7879: do you have any pointers on how you would get the class if you remember anything
KyleRokuKyu#6975: I forget how to do that (eating, not in front of code right now)
KyleRokuKyu#6975: If you want the class itself, you'll have to get the type from that component
KyleRokuKyu#6975: It will get the actual component.  So you'll have worldposition and such
Limón#7879: will it get the class or the LogicComponent
KyleRokuKyu#6975: You can do a foreach with that and use the SceneAndNetworkManager.MainWorld.Data.Lookup(ComponentAddress) function to then get the component itself
KyleRokuKyu#6975: That's a ReadOnlyCollection of all component addresses
KyleRokuKyu#6975: SceneAndNetworkManager.MainWorld.Data.AllComponents
Limón#7879: yeah
KyleRokuKyu#6975: Gotcha, you just want a generic list of all components placed
Limón#7879: and get it from that
Limón#7879: because then I can just create a list of all components placed
Limón#7879: but most recently placed is a good starting point
Limón#7879: not most recently placed
KyleRokuKyu#6975: So, the most recently placed component in the world
KyleRokuKyu#6975: Ok, So you want to know what component a player has just placed from a different component?
Limón#7879: so I am getting B from A
Limón#7879: I am trying to get a component from another component
Limón#7879: wdym the code?
KyleRokuKyu#6975: And, is the code on the thing placed down?
Limón#7879: not placed on a board
Limón#7879: no inputs/outputs
Limón#7879: nothing special
Limón#7879: it's just a thing placed down
KyleRokuKyu#6975: It depends on what you need it for <[newline]>  <[newline]> Is it something connected by wire?  Or a child (on the same board)? <[newline]> Or something different?
Limón#7879: how would I look up a components address if I don't know it
KyleRokuKyu#6975: <@!859806257774723102>  <[newline]> There's a few different ways <[newline]> One such is to use the SceneAndNetworkManager to get the world data and do a lookup via ComponentAddress <[newline]>  <[newline]> ```SceneAndNetworkManager.MainWorld.Data.Lookup(ComponentAddress)```
Limón#7879: <@!154964593397989376> is there a way to get a place down components class in the world without doing unity stuff?
StartForKiller#0001: you need to install the dependencies and then with a binary file you can create a rom with that file, you can specify the output width, the default is 8, and the input address is taken from the file size
Limón#7879: Is there a way I can get a placed down components class?
64548#0351: Mano na good I do not understand how your script works I installed node.js that is part of the npm since my computer and windows there gave the npm install command only installed a monde of depended.
gnog#2259: am i doing something wrong?
gnog#2259: if i remove the "harmony.Patch" line game starts
gnog#2259: with this code i get "IL Compile Error"
gnog#2259: ```csharp <[newline]> using LogicAPI.Client; <[newline]> using LogicLog; <[newline]> using HarmonyLib; <[newline]> using System; <[newline]> using LogicWorld; <[newline]> using System.Diagnostics; <[newline]> using System.Text; <[newline]> using System.Reflection; <[newline]> using System.Collections; <[newline]> namespace harmonytest { <[newline]>     public class Patcher : ClientMod { <[newline]>         protected override void Initialize() { <[newline]>             Harmony.DEBUG = true; <[newline]>             var harmony = new Harmony("harmonytester"); <[newline]>             var t1 = AccessTools.Inner(typeof(SceneAndNetworkManager), "<>c__DisplayClass29_0"); <[newline]>             var t2 = AccessTools.Method(t1, "<HandleWorldInitializationPacket>g__RenderWorldInternal|1"); <[newline]>             var t3 = typeof(Patch01).GetMethod("prefix"); <[newline]>             harmony.Patch(t2, new HarmonyMethod(t3)); <[newline]>         } <[newline]>     } <[newline]> } <[newline]>  <[newline]> public class Patch01 { <[newline]>     static AccessTools.FieldRef<object, ILogicLogger> loggerRef = <[newline]>         AccessTools.FieldRefAccess<ILogicLogger>(typeof(SceneAndNetworkManager), "Logger"); <[newline]>     public void prefix() { <[newline]>         loggerRef().Trace("Starting client worldinit"); <[newline]>     } <[newline]> } <[newline]> ```
km#1297: Here is the first version of zinger-mod, a mod which adds the Zinger to the game. If you like Singers you might like Zingers too, more info in the readme if you are interested. https://github.com/kyle-marshall/zinger-mod
Vinyl Boot Maven of Shade#1858: For anyone who's interested, I've added my mod to the Mod Sharing thread. Readme still needs to be filled out though.
Vinyl Boot Maven of Shade#1858: Fixed, thanks.
Vinyl Boot Maven of Shade#1858: Ok, now it's kind of working. For commit it only shows the .csproj and .sln file instead of all of the vs files.
Jimmy#8080: Two problems: <[newline]> - The file should be called `.gitignore`, not `VisualStudio.gitignore` <[newline]> - I think the file needs to be inside the `HMM/` subdirectory, on the same level as the .sln
Vinyl Boot Maven of Shade#1858: Oh, i think my filename is wrong
DADp#7461: exhibit b: jimmy helping out other cheeky hackers
Vinyl Boot Maven of Shade#1858: Cool thanks.
Jimmy#8080: Right, so if you put that .gitignore file in your repo root, github desktop should automatically ignore all VS-related files
Vinyl Boot Maven of Shade#1858: I have "github desktop."
Jimmy#8080: <@377717131556552708> are you uploading to github via the web interface, or with a git client?
Vinyl Boot Maven of Shade#1858: Oh, does that allow you to send the folder to github with VS files, and then it automatically excludes them from the upload?
Vinyl Boot Maven of Shade#1858: Um. I've really used github, how does that work exactly?
Jimmy#8080: And just make sure you're not uploading any Logic World game files (such as dlls)
Jimmy#8080: use this gitignore: https://github.com/github/gitignore/blob/master/VisualStudio.gitignore
Vinyl Boot Maven of Shade#1858: So, if we upload a mod to github, we leave out the VS stuff right? I imagine the dll reference links in the obj files may not work right.
StartForKiller#0001: https://github.com/StartForKillerMC/logicrom
StartForKiller#0001: i created a node script that generates a static rom in a format .lsx, the lw scripting language, of any size
Jimmy#8080: Will be somewhat faster
Jimmy#8080: The intended API is `ContinueUpdatingForAnotherTick()`
Limón#7879: I do not know if it will in practice
Limón#7879: that's just an idea
Limón#7879: and use it
Limón#7879: but you *maybe* put a peg inside of the inverter and set it to on
Limón#7879: otherwise I don't think it would be possible
Limón#7879: have one peg on at all times I guess
RyanT#1426: what if u want to like make an instant inverter?
Limón#7879: or just link every peg (though this sound not very friendly)
Limón#7879: use a peg you know that will be on
Limón#7879: you have to use an input
RyanT#1426: but how? those can't connect to outputs, do u have to have an input that u have to power on all the time?
Limón#7879: https://github.com/LonnonDev/LW-Modding/blob/main/CS-Modding/Reference/CS-InputPeg.md
Limón#7879: phasic links/secret links
Limón#7879: nope
KyleRokuKyu#6975: It's public on my git but it's not particularly good yet hahah <[newline]>  <[newline]> It works but it has some "edge" case issues.  Like, don't stack pistons on pistons yet hahah <[newline]>  <[newline]> I'll get a link later once I'm not at work
HomelikeSquid65#8653: <@!119493641944170496> is the piston mod public and can i download it
RyanT#1426: btw, people who did peg as output, is this how u did it?
Limón#7879: this makes thing easier for me
RyanT#1426: I FINALLY DID!!! `base.QueueLogicUpdate();`
RyanT#1426: yes
64548#0351: <@!350975527324221451>Did you see my Big Memory Ram?
64548#0351: not
RyanT#1426: does anyone know how to connect a wire with code?
64548#0351: Is lucky that I did not get heavy if I would not have put up to 9kk 😂
64548#0351: 😂
64548#0351: <@!299685147220115457> Using your mod as base I created a 256 bit RAM memory
Limón#7879: ```cs <[newline]> width = 4 <[newline]> inputs = 4 <[newline]>  <[newline]> for x in range(1, inputs+1): <[newline]>     if x > width/2: <[newline]>         print(-(inputs - (width/inputs)*x)) <[newline]>     else:  <[newline]>         print((width/inputs)*x) <[newline]> ```
Limón#7879: Istg making inputs makes about as much sense as the sqrt of -1
KyleRokuKyu#6975: I'm planning on a few other moving parts for the mod. <[newline]>  <[newline]> Including a tracked object that follows a track you lay down yourself. <[newline]>  <[newline]> It, also, does allow you to use a socket on the moving platform so you can detect when it's at a specific point. <[newline]>  <[newline]> Another object I'm adding is a piston with 2 inputs (extend and retract) so you can just input constantly until it detects with a socket, then stops
km#1297: I used it for much reference
km#1297: hihi! your mod is pretty sweet
cheese3660#8641: Ive been meaning to continue modding
cheese3660#8641: And yes I srill exist
cheese3660#8641: The size is created by extending the abstract class that is the ram, and implementing the abstract getter functions to change the ram size, you have to do this on both client and server, and create a new component definition in the succ iirc
64548#0351: I was going to use this in my project but he is very big for my monitor project
64548#0351: 
64548#0351: is that I wanted to change the size of this here knows
64548#0351: Where did you put your Object size in your mod? Type RAM 4 x 4
64548#0351: help pls
64548#0351: <@!299685147220115457>  hi
Jimmy#8080: https://docs.unity3d.com/ScriptReference/RenderSettings-skybox.html
Daimh#5870: So I am not familiar with modding anything, but this is a pretty basic operation so I was gonna ask, is there a simple way to change world settings to use a different skybox?
km#1297: <3! thanks me and my friend are very into making weird sounds so going to be trying a bunch of stuff not that I dont love the singers already!
Jimmy#8080: holy flip this is awesome
km#1297: very curious how you will make this work
km#1297: whoa perfect
Limón#7879: So 16 different channels you can use
Limón#7879: I am planning it having 16 addresses
km#1297: Yay excited to see it, I would love to use it for pretty much any control panel that I use a bunch when building I end up flying back and forth so often just to press a few buttons
64548#0351: <@!119493641944170496> hi will be that a way to modify the piston of the mod that you did to be a movable platform that goes from side to side?  <[newline]>  <[newline]> Why kind of person can put a system that can interact with one another during the moment as the platform is moving knows, it would be nice to add a way for if when it comes to a certain point of the type she connects to a certain one Do it go up, you know?
Limón#7879: I was thinking it would be more useful for "wifi"
Limón#7879: So I will make it
Limón#7879: I was thinking about how i would make it and I think I figured it out
km#1297: Yeah that sounds possibly pretty useful, I do love to see big crazy wire messes but maybe would be nice for making a controller for something you can move around without having to reattach to bus if you are trying to troubleshoot your circuit across large areas idk
gnog#2259: Thanks!~
RyanT#1426: No
Limón#7879: Did you ever figure out how to run it every tick?
Limón#7879: Would a wireless transmitter/receiver be a good idea?
Limón#7879: Website
FalsePattern#7777: fixed in lwharmony 2.1.1.1 <[newline]> https://falsepattern.com/lw/lwharmony_2.1.1.1.zip
FalsePattern#7777: ah, found the problem, i screwed it up in the harmony injector itself: <[newline]> I made a namespace called `Harmony`, but there's already a `Harmony` class as `HarmonyLib.Harmony`, and it looks like the compiler gets confused between the two <[newline]>  <[newline]> i didn't see this error on my machine because of the compiler cache <[newline]> i'll fix it, gimme a sec
gnog#2259: line 9 in `harmonytest`: <[newline]> ```csharp <[newline]> var harmony = new Harmony("harmonytest"); <[newline]> ```
gnog#2259: i guess that is the problem: <[newline]> ``` <[newline]> 2021-11-19T16:18:19Z | TRACE | [ModCompiler]   (9,22): error CS0118: 'Harmony' is a namespace but is used like a type <[newline]> ```
FalsePattern#7777: it will log more info about what is actually failing when compiling
FalsePattern#7777: can youplease add this line to `<lwdir>/licc/autoexec.lsf`? : <[newline]> `loglevel "trace"`
gnog#2259: ``` <[newline]> 2021-11-19T16:13:29Z | INFO  | [DLL Util] Initializing DllUtil... <[newline]> 2021-11-19T16:13:29Z | INFO  | [LWHarmony] Loading 0Harmony.dll <[newline]> 2021-11-19T16:13:29Z | INFO  | [DLL Util] Loading 0Harmony.dll <[newline]> 2021-11-19T16:13:29Z | INFO  | [DLL Util] Successfully loaded 0Harmony.dll <[newline]> 2021-11-19T16:13:30Z | ERROR | [SceneAndNetworkManager] going to error screen with message: "Failed to compile scripts" <[newline]> 2021-11-19T16:13:31Z | INFO  | [Online manager] Setting status to Online -  <[newline]> 2021-11-19T16:16:31Z | INFO  | [Online manager] Setting status to Offline -  <[newline]> ```
Sekoia#3968: is there a mod list website or smth? curious what there is already
FalsePattern#7777: Can you send in a log file?
FalsePattern#7777: hmmm...
gnog#2259: i just put all three mods on your website into GameData folder and i get black screen with version in the corner
gnog#2259: <@!437296986593427458> I can't load Harmony Tester mod, am i missing something?
Limón#7879: It's pretty useless yhough
Limón#7879: I made an or
km#1297: https://www.youtube.com/watch?v=MN-WloAfhZ0
km#1297: alas even if my VariantInfo extends AndGateVariantInfo the x edit to change number of inputs wont show so a little stumped there
km#1297: also trying to get the multi input dynamic thing to work so if that ends up working could be nice to have instead of buffer
km#1297: yeah true that or is totally not missing functionality its just for people who want more compact choice and nand maybe if you want to try to emulate real life designs where they opted to restrict themselves to nans for cost, but with and + inverter as it is is a bit bulky and yeah that 1 tick
HomelikeBrick42#1173: but the nand gate might be useful because it takes 1 tick instead of 2
HomelikeBrick42#1173: you can use a single buffer for an or gate
km#1297: what I mean is... is anyone in want of this?
km#1297: I mean if someone else already made it I wont bother posting it
km#1297: lol I made that
ieee 802.11ac#6337: well you have a picture of it so yeah
km#1297: just copy-fu'd the and gate, trying to figure out how to enable the variant info change slider right now
km#1297: has anyone already made this mod?
RyanT#1426: Ok
Limón#7879: no
Vinyl Boot Maven of Shade#1858: I'm not sure how to queue an logic update with code(should be a way). But I've thought of using an input peg specifically for a 2 tick clock that would cause that component to run DoLogicUpdate() every tick.
RyanT#1426: just curious, can u add a secert / phasic link from an output to an input?
RyanT#1426: 🤦‍♂️
DADp#7461: go on mars should help
RyanT#1426: how on earth am I supposed to do this??!!
RyanT#1426: with it
RyanT#1426: wtf, without `system.private.corelib`
RyanT#1426: :(
RyanT#1426: oh
KyleRokuKyu#6975: It's in the server folder not the _Data folder
RyanT#1426: 1. that doesn't exist, adding the existing DLLs did nothing, maybe it's because I'm opening it as a folder and not a project?
RyanT#1426: ok
Limón#7879: LogicAPI server
RyanT#1426: which ones?
Limón#7879: to project
Limón#7879: add dlls
RyanT#1426: nope. also, is there a way for VS 2019 to know `LogicAPI` syntax?
Limón#7879: ```cs <[newline]>         public override bool InputAtIndexShouldTriggerComponentLogicUpdates(int inputIndex) <[newline]>         { <[newline]>             return true; <[newline]>         }``` maybe
RyanT#1426: just curious, does anyone know how to make `DoLogicUpdate()` run on every circuit simulation tick?
Limón#7879: so idk
Limón#7879: but it's not in the official LogicCode
Limón#7879: maybe
Moojuiceman#5661: Might be some init or setup method used elsewhere
Limón#7879: though this is just a workaround to a bug
Limón#7879: I fixed it by making sure I add a phasic link to it
Moojuiceman#5661: Are you using dnSpy? If so analyse those properties and see what assigns to them
Limón#7879: pain
Limón#7879: so I have to make sure the first thing is ran once
Limón#7879: it uses a different thing
Limón#7879: `_OneWayPhasicLinksFollowers` 😭
Moojuiceman#5661: That sounds more like a loop then
Limón#7879: the game stops responding
Moojuiceman#5661: By freeze do you mean the game stops responding, or just that circuits no longer work
Limón#7879: OneWay uses .contain
Limón#7879: ```cs <[newline]>         protected override void DoLogicUpdate() { <[newline]>             if (initiate == true) { <[newline]>                 Input1.AddPhasicLinkWithUnsafe(Input2); <[newline]>                 Input1.RemovePhasicLinkWithUnsafe(Input2); <[newline]>                 initiate = false; <[newline]>             } else { <[newline]>                 if (base.Inputs[0].On && base.Inputs[1].On) { <[newline]>                     Input1.AddOneWayPhasicLinkTo(Input2); <[newline]>                 } else { <[newline]>                     Input1.RemoveOneWayPhasicLinkTo(Input2); <[newline]>                 } <[newline]>             } <[newline]>         }```
Limón#7879: I am dealing with phasic null
Moojuiceman#5661: Infinite loop?
Limón#7879: that's my theory
Limón#7879: too many error messages = freeze?
Moojuiceman#5661: Probably useless component but would look cool
Moojuiceman#5661: If any 2 are on,  the 3rd goes on
KyleRokuKyu#6975: That wouldn't be cursed at all
KyleRokuKyu#6975: Or just put all 3 outputs at 120 rotations from eachother
Limón#7879: I am adding it now
Limón#7879: yeah
Vinyl Boot Maven of Shade#1858: lol, isn't there a one-way phasic link?
Limón#7879: cursed
Vinyl Boot Maven of Shade#1858: lol
Moojuiceman#5661: Does it backport through it
Moojuiceman#5661: Out of interest, what happens if you feed in something else to the output?
Limón#7879: I feel as if this will either keep it on forever or crash the game
Vinyl Boot Maven of Shade#1858: Now take your phasic and gate, and hook up the output to both inputs ^^
KyleRokuKyu#6975: That dank zero tick delay
Limón#7879: phasic delayer 😂
KyleRokuKyu#6975: Moment of Zen
Limón#7879: 😌
Limón#7879: finally
Limón#7879: it's done
KyleRokuKyu#6975: On the same level as writing a massive function then forgetting to call it
Moojuiceman#5661: When you really want to be sure that y
KyleRokuKyu#6975: I feel that on a deep, emotional level
Limón#7879: yes
KyleRokuKyu#6975: #CopyPastaInAHurry?
Moojuiceman#5661: If x do y, if not x do y
Limón#7879: 🤦‍♂️
Vinyl Boot Maven of Shade#1858: Shouldn't the second line be Removephasic link
Limón#7879: yeah
Moojuiceman#5661: Um, is that your real code?
Limón#7879: yeah
Moojuiceman#5661: Did you turn it back off
Limón#7879: ```cs <[newline]>         protected override void DoLogicUpdate() { <[newline]>             if (base.Inputs[0].On && base.Inputs[1].On) { <[newline]>                 Input1.AddPhasicLinkWithUnsafe(Input2); <[newline]>             } else { <[newline]>                 Input1.AddPhasicLinkWithUnsafe(Input2); <[newline]>             } <[newline]>         }```
Limón#7879: yeah but I removed it
Moojuiceman#5661: Is your input1 linked with input0 so it turns them both on?
Limón#7879: well it turns on when the first input is on
Moojuiceman#5661: No, it would short circuit at the first input
Limón#7879: `if (base.Inputs[0].On && base.Inputs[1].On && removed == true) {` is there any reason why this if statement would be true when both inputs are off?
KyleRokuKyu#6975: Because screw guess work
KyleRokuKyu#6975: Whenever I'm using a try/catch <[newline]> The catch block is setup roughly as such <[newline]> Debug.Log("[ClassName].[Function] Whatever Message " + e);
KyleRokuKyu#6975: That's people who are too lazy or don't understand that stack tracing isn't consistent
Moojuiceman#5661: Bane of my existence when I was trying to debug production code
KyleRokuKyu#6975: Oh, definitely not <[newline]> In your debug, you just name the class and function it came from with the exception as well
Moojuiceman#5661: Don't do that, unless you like guessing which of the 50+ lines of code your exception came from when debugging
KyleRokuKyu#6975: lolol
Moojuiceman#5661: Pls no
KyleRokuKyu#6975: I just douse the code in try/catch chunks
Moojuiceman#5661: Then maybe laziness
Vinyl Boot Maven of Shade#1858: But, the safe method only calls the unsafe method. There's no other code.
Moojuiceman#5661: Once you know its safe, call the safe ones which are faster
Moojuiceman#5661: Maybe it means you call those if you aren't sure it's safe yet
Limón#7879: it's stupid
Limón#7879: I was about to say this
Vinyl Boot Maven of Shade#1858: It's funny that the unsafe methods are the technically the safe methods.
Moojuiceman#5661: Or make sure it's inited somehow first
Limón#7879: so I should just use unsafe
Moojuiceman#5661: It doesn't call unsafe if it dies in the contains first
Vinyl Boot Maven of Shade#1858: Oh snap
Limón#7879: so unless I don't understand
Limón#7879: it calls unsafe which fixes that
Moojuiceman#5661: There's no check before the .Contains
Limón#7879: it should fix that though
Moojuiceman#5661: _PhasicLinks is null
Limón#7879: ```cs <[newline]>         public void AddPhasicLinkWith(InputPeg otherInput) <[newline]>         { <[newline]>             if (!_PhasicLinks.Contains(otherInput)) <[newline]>             { <[newline]>                 AddPhasicLinkWithUnsafe(otherInput); <[newline]>             } <[newline]>         } <[newline]>  <[newline]>         public void AddPhasicLinkWithUnsafe(IInputPeg otherInput) <[newline]>         { <[newline]>             AddPhasicLinkWithUnsafe((InputPeg)otherInput); <[newline]>         } <[newline]>  <[newline]>         public void AddPhasicLinkWithUnsafe(InputPeg otherInput) <[newline]>         { <[newline]>             if (_PhasicLinks == null) <[newline]>             { <[newline]>                 _PhasicLinks = new List<InputPeg>(2); <[newline]>             } <[newline]>             if (otherInput._PhasicLinks == null) <[newline]>             { <[newline]>                 otherInput._PhasicLinks = new List<InputPeg>(2); <[newline]>             } <[newline]>             _PhasicLinks.Add(otherInput); <[newline]>             otherInput._PhasicLinks.Add(this); <[newline]>             Cluster.AddTwoWayLinkWith(otherInput.Cluster); <[newline]>         }```
Moojuiceman#5661: <@859806257774723102> can you show the addPhasicLinkWith code? Not at dnSpy atm
Moojuiceman#5661: The nullref is inside the addPhasicLink method. What's the code for it?
Limón#7879: I think
Limón#7879: so that means it's an issue with the game
Limón#7879: it gets all of them
Limón#7879: I feel as if my issue is that it thinks the 3rd input doesn't exist
KyleRokuKyu#6975: ye, samesies
KyleRokuKyu#6975: But mods are the best way to give options
Limón#7879: I just want small fast
KyleRokuKyu#6975: All that said, I understand why Jimmy designed it like he did. <[newline]> He wanted zero tick stuff to be slightly bigger so you have to make decisions on which you want to sacrifice (Speed or Size)
KyleRokuKyu#6975: Yea, I was just meaning that the Relay implements both <[newline]> I assumed you were doing as you are, just wanted to clarify
Limón#7879: Secret links are 1 tick connections
Limón#7879: Phasic link is what the 0 tick connections are called
Limón#7879: https://github.com/LonnonDev/LW-Modding/blob/main/CS-Modding/Reference/CS-InputPeg.md
RyanT#1426: oh
Limón#7879: no to <@!119493641944170496> not you
KyleRokuKyu#6975: That's my one gripe with the relay
RyanT#1426: why??!!
KyleRokuKyu#6975: NICE 😄
Limón#7879: no
RyanT#1426: can u show me?
KyleRokuKyu#6975: Is it going to be peg specific zero tick then?
Limón#7879: yeah
KyleRokuKyu#6975: Oh nice <[newline]> I assume, then, it's similar to the relay?
Limón#7879: ```succ <[newline]> PhasicAnd: <[newline]>     column: "phasics" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - Standard <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (-0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicCode: phasicGates.Server.Components.phasicAndGate```
KyleRokuKyu#6975: mods be like that
Limón#7879: *magic*
RyanT#1426: HOW
RyanT#1426: WUT
Limón#7879: I am making a 0 tick and gate
RyanT#1426: isn't this just useless? it has no outputs
KyleRokuKyu#6975: Where did you add the 3rd input in the SUCC file?
KyleRokuKyu#6975: Oh, thats the crosshair
KyleRokuKyu#6975: That dot on top is evil. <[newline]> I thought I had something on my monitor
Limón#7879: 3 inputs
Limón#7879: 
Sekoia#3968: base.Inputs[2] is null, probably
Limón#7879: and it runs that code I posted
Limón#7879: when I place down the modded component I created
Sekoia#3968: I meant, when launching the game, loading a world?
Limón#7879: but removing doesn't
Limón#7879: this code breaks it
Limón#7879: `base.Inputs[0].AddPhasicLinkWith(base.Inputs[2]);`
Limón#7879: right now
Sekoia#3968: When did this happen?
Limón#7879: what does this even mean???
IsCoffeeTho#0001: try using the "doeslogicalupdate" function (i forgot the name) an make it return true for only input[0]
Limón#7879: has anyone got phasic links to work?
km#1297: Hey homies I'm ready to share the 1st version of my file-emitter mod. The user input is definitely clunky but I think it will work for me for now and I wanna get back into the actual game. If you do want to try it please read the github readme to see the commands needed to link the file emitter to a file and reset it or change to big endian mode if you are into that. You have to reconfigure it when you load up your world each time n stuff currently https://github.com/kyle-marshall/file-emitter
Limón#7879: Mod Sharing
Limón#7879: and I don't know why
Limón#7879: because this code hangs one of my mods
Limón#7879: ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicAPI.Server; <[newline]> using LogicLog; <[newline]>  <[newline]>  <[newline]> public class Loader : ServerMod { <[newline]>     protected override void Initialize() { <[newline]>         Logger.Info("phasicGates initialized"); <[newline]>     } <[newline]> } <[newline]>  <[newline]> namespace phasicGates <[newline]> { <[newline]>     public class phasicAndGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() <[newline]>         { <[newline]>             if (base.Inputs[0].On && base.Inputs[1].On) { <[newline]>                 base.Inputs[0].AddOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>             } else { <[newline]>                 base.Inputs[0].RemoveOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> }```
Limón#7879: because any code would make it hang for some reason
Limón#7879: I just gave up trying to debug it
Limón#7879: I still don't even know why it hangs
Ecconia#4929: WOHOOO~ Thank you 🙂 <[newline]> Its a good thing - unless you know all the shortcuts without thinking.
Jimmy#8080: In 0.90.2 there's a setting for "Help Menu Starts Open". It's on by default (which is the current behavior) but you can now turn it off.
Ecconia#4929: <@!154964593397989376> Or you do something about it... 😛
Ecconia#4929: Please PLEASE someone make a mod to remove the F6 overlay!!!
KyleRokuKyu#6975: Known bug <[newline]> The mod is very early alpha <[newline]>  <[newline]> Stacking pistons is big time broken.  I'm currently using only built in LogicWorld functions (Which were never made for moving circuits) <[newline]>  <[newline]> I'll be implementing my own handlers soonish <[newline]> Just been busy with work lately
Limón#7879: Speaking of that if a majority of people wants me to edit it and add or remove something I will
Limón#7879: I am in the pins 😳
Sekoia#3968: > Modding is not officially supported yet. Everybody making mods is a cheeky little hacker.
Sekoia#3968: unsurprising, see the pins
64548#0351: if you do not believe look at the call mano the piston is bugado kkk
Limón#7879: What
64548#0351: I just want to say something to the creator of this mod, he try to do it in a way for the piston not to leave out of the world when and placed on top of the other up or when and put another piston in the same place as the other because the same generates 1 bug that can lock the whole game
64548#0351: Hey you know who made the mod of the piston locomotion?
Limón#7879: Modding is a bit annoying with vanilla
Limón#7879: I probably won't update it
Limón#7879: Yeahs it not updated
64548#0351: Hey your mod that you made my game hang
Vinyl Boot Maven of Shade#1858: NP
km#1297: yeah I did get text to show up n it was still recolorable n stuff, thanks!
Vinyl Boot Maven of Shade#1858: Like in the world I mean
Vinyl Boot Maven of Shade#1858: But you also need to use some of the rest of the ClientCode.Label Code to get the text the show up an whatnot.
km#1297: awesome!
Vinyl Boot Maven of Shade#1858: I didn't inherit from ClientCode.Label, though that did work, I inherited ComponentClientCode<IData> The important part is that IData must be Label.IData specifically for the x menu to work right.
km#1297: <@!377717131556552708> you extended the Label component and got the textarea to show up in x menu? I tried recreating a component exactly like Label but it would only show the color picker in config menu so I gave up
km#1297: hehe "I do not See Sharp", love it
km#1297: having a lot of *fun* trying to deserialize/serialize state
km#1297: 😆
Ecconia#4929: By now I parsed 10 out of 29 LW protocol packets. <[newline]> With these I could join and leave a server. But not more :) <[newline]> One of the packets was compressed with LZ4, it was a bit tricky. But I also got it parsed. <[newline]> Eventually I will be able to fully fake a server or client using that protocol. And everything without C#. <[newline]> Cause I am a Java developer with glasses, I do not See Sharp.
Vinyl Boot Maven of Shade#1858: Aha thanks
Moojuiceman#5661: It's server.dll under the server folder
KyleRokuKyu#6975: Gotcha, one sec, will dig
Vinyl Boot Maven of Shade#1858: yea, specifically the switch
KyleRokuKyu#6975: Oh, which do you mean then?  Like the specific, already in game logic component code?
Vinyl Boot Maven of Shade#1858: I'm not finding them, just LogicComponent class
KyleRokuKyu#6975: Which is in the LogicWorld/Server folder rather than the _Data/Managed one
KyleRokuKyu#6975: LogicAPI.Server.Components
Vinyl Boot Maven of Shade#1858: Darn it, which dll are the LogicCode classes in again?
Vinyl Boot Maven of Shade#1858: Theoretically, it should be about the same as pasting a bunch of text into a label though.
Vinyl Boot Maven of Shade#1858: I'm not too sure about how much of a network traffic hit it would be, however.
Vinyl Boot Maven of Shade#1858: I've managed to make my hex input rom to be non-resizable, and I've made my own IData interface that extends Label.IData so that it still works with the x menu for inputting the text, but I also have an extra variable that I can fill. Which means I should be able to make an Assembly ROM where it compiles the assembly on client and sends compiled result to server.
Ecconia#4929: Enjoy some parsing output 🙂
Ecconia#4929: I decided to Wireshark the whole client server communication and to then parse it all. <[newline]> So that I have the ultimate parser. And what you can parse, you understand.
Ecconia#4929: Oh I am not there yet, about to parse all network packets though...
KyleRokuKyu#6975: You should take a peak at how customdata is handled between clientcode and logiccode classes <[newline]> It's fun
Ecconia#4929: Let's make LW protocol great (not again) <[newline]> -> Disclaimer: I fear that all `[Serializable]` classes are just dumping their raw bytes into the MessagePack protocol.
Ecconia#4929: Oh no, <[newline]> the packet serialization dumps the class "Color24" out as 3 bytes instead of as MessagePack requires an array of 3 byte entries... <[newline]> Ahhh, my OCD, why does this work, why is MessagePack not throwing an error there. Dear lord help
DanielGJ44#4557: Logic world 2 is going to be named Quantum World
Limón#7879: I'll make that mod if someone makes analog wires
Limón#7879: Quantum computing when?
km#1297: well machine code I mean but anyways, yes please!
km#1297: entering hex in the game would also serve the purpose I made my thing for even more conveniently in some cases, just wanted a way of getting some assembly in game less painfully
km#1297: ooh nice, the more examples on github the better in my opinion even if cheese's mod has similar thing! I'd be very interested in seeing how you got the edit with 'x' working, I am working on a component that spits out data from a file and needs a string filename
Vinyl Boot Maven of Shade#1858: Is anyone interested in a ROM with hex input? I'm wondering if I aught to make a github, but all I got is 64k 8bit RAM and a ROM that you edit with 'x' and type in hex for. Cheese already has all those memory modules in her modpack.
km#1297: Ah okay cool ty, I'll poke around a bit more after I get some work done today!
Moojuiceman#5661: Label might be simpler in that there's no slider nonsense to worry about, but you'll need to look into the GO that handles the menu for labels
Moojuiceman#5661: Nah so it's not just code side is the issue. There are gameobjects manually placed in the scene during development, and those get opened by invoking the X menu code on a component. However since we don't have a gameobject for our mod items, nothing opens. We've tried copying the editAndGateMenu to get it to open for Cheese's variant RAM but I didn't get it all the way
km#1297: Yeah looking at that Label component I didn't see anything obvious, was speculating that maybe the IColorableClientCode currently made the string show up for the panel component somehow, maybe involving ColorsFileKey, but couldn't get it to work. Haven't tried starting from a copy of Label yet, but I'll prob join y'all in giving up soon!
Moojuiceman#5661: Yeah about the X menu, no-one has got that to work. And by no-one I mean out of Limon, Cheese, and myself, we all essentially gave up. Or rather they left it to me and I've not been working on any mod stuff for ages now
km#1297: thanks moo! I did find that atttribute yesterday looking through decompiled code but couldn't get it to work, maybe I forgot to make it static so I'll retest today. Ideally I want to expose a editable string to the X config panel of a component but I could only figure out how to get a color to show up by implementing IColorableClientCode interface, not sure what I'm missing / how the label component is able to show a string in the panel, but if I get the chat command to work that will be a fine work around for now
AtiLion#0001: Yes, thanks
Moojuiceman#5661: https://discord.com/channels/401255675264761866/901659878869844048/906228674196541522 like this?
AtiLion#0001: Any way to have "shared code"?
Moojuiceman#5661: https://discord.com/channels/401255675264761866/902235544946372688/905202118061879376 see the messages around this, commands the "proper" way
km#1297: also I should be digging into source good point, it's time to boot up my windows computer that has dotpeek on it, I was being lazy
km#1297: Sleep well and tyvm! I'll look into your tips and see what I can find from the Unity side, hadn't thought of that and am a Unity nub... anyways yeah it's late!
KyleRokuKyu#6975: But that's just 3am Kyle saying the first idea that comes to mind 😄 <[newline]>  <[newline]> Tomorrow... <[newline]> I might have time <[newline]> So if you haven't found stuff by then, I'll look after work
KyleRokuKyu#6975: Hmmm, reading a chat command. <[newline]> I didn't think about that. <[newline]> If it wasn't 3am my time, I'd look into it. <[newline]>  <[newline]> My instinct tells me either to start digging through the UI handlers or even the networking stuff to find where chat messages are handled <[newline]>  <[newline]> Or <[newline]> To literally just find the Unity UI text field for inputting/displaying text <[newline]>  <[newline]> So, if you want just a quick and dirty way to get chat <[newline]>  <[newline]> You could Debug.Log all gameObject names with one of Unity's FindAll commands to find the name of the chat UI stuff <[newline]>  <[newline]> Then just grab from that and parse through <[newline]>  <[newline]> Then, on initialization, you could spawn a gameObject with a script that keeps an eye on chat and fires off callbacks to your command stuff <[newline]>  <[newline]> It's not particularly elegant but it'd let you develop the commands without needing to find the proper way to hook into chat (Via Server or Networking stuff)
km#1297: or grateful
km#1297: Thanks fellow Kyle, watching your projects too! Would not have gotten anywhere without looking at your proximity detector. For my use I figured File.ReadAllBytes is sufficient and simple just to get it working, but it's just day 1 and there are advantages to stream so I'm not sure how it'll end up. Also if anyone has an example of reading a chat command I would be very greatful
KyleRokuKyu#6975: Oh nice 😄 <[newline]> System.IO? <[newline]> Using a FileStream? <[newline]> I was considering something along those lines for video streaming onto a display. <[newline]>  <[newline]> Then, was considering streaming out inputs to control sprites loaded from files (Made an image loading thing) <[newline]>  <[newline]> That's dope <[newline]> Congrats on getting a mod going 😄 <[newline]>  <[newline]> I look forward to the progress of your projects
km#1297: I started modding today thanks to your examples peeps, thanks! Basically I was very deep in logic world and just wanted to feed in some data to my world from a file on my computer. Here's a sneak peak: https://www.youtube.com/watch?v=m93YOQSrMnk  I'll post the code on github once I've figured out how to take user input to change the file and make some variants maybe
Malte0621#4433: If I experience issues ill try to fix them my self :)
Malte0621#4433: its alr
cheese3660#8641: Due to a few factors
cheese3660#8641: Be wary, I havent done anything in like a week with modding
Malte0621#4433: yeah
cheese3660#8641: cheese3660
Malte0621#4433: ok
cheese3660#8641: Its my normal discord name
Malte0621#4433: You don't..
Malte0621#4433: no.
KyleRokuKyu#6975: He wants to keep mods open source so people can look through the code and verify etc.
cheese3660#8641: I dont
cheese3660#8641: Wait
Malte0621#4433: alr
Malte0621#4433: ah
KyleRokuKyu#6975: Jimmy said he plans to have a mod repo on the main website. <[newline]> He doesn't like Steam Workshop <[newline]> Or really anything premade, tbh
Malte0621#4433: btw, Cheese doesn't have a github attached to their profile.
Malte0621#4433: I bet they will add steam workshop support sooner or later tho.
KyleRokuKyu#6975: We need a Mod Link channel or thread or something
Malte0621#4433: yeah
KyleRokuKyu#6975: <@!299685147220115457>'s GitHub <[newline]>  <[newline]> The game is MEGA new on the actual Steam release side <[newline]> and modding is infant <[newline]>  <[newline]> So mods are basically just shared via GitHub right now lol <[newline]>  <[newline]> There's probs a more central repo but idk
Malte0621#4433: lol
Malte0621#4433: where?
Malte0621#4433: ._.
KyleRokuKyu#6975: 😄 enjoy
Malte0621#4433: Ima enjoy playing the game now, cya.
KyleRokuKyu#6975: There's even full on read/write memory component mods
Malte0621#4433: Can't wait for that.
Malte0621#4433: I guess you're right
KyleRokuKyu#6975: People are modding in more gates to shrink the board sizes
Malte0621#4433: well yeah
ieee 802.11ac#6337: and the inverter is a NOT gate
KyleRokuKyu#6975: But yea
KyleRokuKyu#6975: The idea was to build more complicated gates from those
ieee 802.11ac#6337: to be fair an OR gate is just a peg
Malte0621#4433: Kind of annoying that there isn't any other gates in-game.. Only AND and XOR
ieee 802.11ac#6337: or use logicscript
Malte0621#4433: I know a bit of c#
Malte0621#4433: yeah
KyleRokuKyu#6975: But it does take C# knowledge
KyleRokuKyu#6975: It's not too bad once you see the folder structure and such
Malte0621#4433: alr
Malte0621#4433: hm
KyleRokuKyu#6975: Yea, you need to make it a server mod with a LogicCode script on the server side (Both Server and Client need the mod still)
Malte0621#4433: (I just got the game and joined this server)
KyleRokuKyu#6975: Eh, not too concerned about that either
Malte0621#4433: Is there a way to add gates using mods?
ieee 802.11ac#6337: my point is that you phrased it weird
KyleRokuKyu#6975: Ultimately, <[newline]> Locomotion is going to add moving components like the Piston (Once it's less buggy) and Motors/Rotators and such <[newline]>  <[newline]> Then, I'm going to have a utilities mod with the Detector and IC and whatever else I want to have on my server
KyleRokuKyu#6975: So, you can either play around with the items, or wait till everything is sorted into their own mods.  Either way, I'm just sharing in case peeps are interested
KyleRokuKyu#6975: For now, I'm not done with any of them
KyleRokuKyu#6975: Like I said, I'll break it all into separate mods later
KyleRokuKyu#6975: The piston is in that pack
ieee 802.11ac#6337: <:thonking:432741465844875264>
KyleRokuKyu#6975: Also, I need to finish that detector... <[newline]> It's really just a collider detector, rather than a specifically player only detector <[newline]> So, it detects boards and components above it too lol
KyleRokuKyu#6975: Unless you mean, what's the circuit I've hidden, in which case <[newline]>  <[newline]> It's a player detector with an on/off switch <[newline]>  <[newline]> Mostly just to test if modded components work (Including odd ones that don't use regular LW functions like the player detector is)
KyleRokuKyu#6975: You can just place this object down and save all that CPU and GPU overhead
KyleRokuKyu#6975: Large
KyleRokuKyu#6975: https://cdn.discordapp.com/attachments/903124059255078943/909304071586971678/unknown.png
KyleRokuKyu#6975: So, if you have something...
KyleRokuKyu#6975: All logic still happens
KyleRokuKyu#6975: It's a big box that stops the client side from rendering or doing physics calculations on anything inside it
KyleRokuKyu#6975: https://github.com/KyleRokuKyu/Locomotion/ <[newline]>  <[newline]> For now, I've just jammed everything together into one mod because I'm temporarily lazy
ieee 802.11ac#6337: what is it tho
KyleRokuKyu#6975: Oh, also, it's colorizable
KyleRokuKyu#6975: (I'm skeptical that it will since it'll almost certainly load everything THEN hide stuff.  But whatever.  Might still help peeps somewhere)
KyleRokuKyu#6975: BAM! <[newline]> Working almost flawlessly <[newline]>  <[newline]> When moving the parent board, it goes a bit jank.  I can probs fix that but, for now, I'm gonna start testing in massive builds to see if it helps load in times or something
KyleRokuKyu#6975: https://i.imgur.com/oeqTCce.mp4
KyleRokuKyu#6975: Scaling is a little wonk.  Idk why <[newline]> I'm getting the colliders of all objects on the board (and children there-of) then getting the bounding box.  So, something is probably just on the wrong axis or something idk <[newline]>  <[newline]> Also, I need to add hiding wires and pegs, I suppose. <[newline]>  <[newline]> Otherwise, this is basically just an occlusion culling box.  The objective is to help with the performance of massive builds. <[newline]>  <[newline]> I'm going to unhide the parent board tho so you can still copy pasta ICs and move them around and such
KyleRokuKyu#6975: https://i.imgur.com/RHnS5kw.mp4
AtiLion#0001: nvm found it
AtiLion#0001: How does one open the console?
KyleRokuKyu#6975: Working on a way to Hide and Unhide boards. <[newline]> I just need to get the size of the circuitboard (or bounding box of all children) to, then, scale the hiding cube around. <[newline]>  <[newline]> You can "think" of it like an Integrated Circuit because server side is never told to remove the board.  So all logic still passes through and is calculated. <[newline]>  <[newline]> I want to set the Block size to the bounds of the circuit and possibly the children so that it saves rendering but doesn't let people stack stuff inside other stuff
DADp#7461: sounds like hes a cheeky hacker
KyleRokuKyu#6975: Ye, Jimmy pops in occasionally to help the modding community.  100% supports it
DADp#7461: is he helping
DADp#7461: hold on
Jimmy#8080: You can also use `System.IO.Path.GetTempPath`
KyleRokuKyu#6975: ayyyyyy noice!
FalsePattern#7777: https://falsepattern.com/lw/index.html <[newline]> i uploaded both the dll loader and the new version of the harmony injector mods here so that they don't get lost in chat
Limón#7879: As I've seen many in the game
Limón#7879: Probably dlls
FalsePattern#7777: or idk what file type c# uses on linux for assemblies
FalsePattern#7777: also made it cross-platform (compatible with any file extension), so you can load .so files on linux through dllutil
FalsePattern#7777: unity temp folder comes in handy
FalsePattern#7777: <:CoolAndGood:697524773961334805>
FalsePattern#7777: equipped with this knowledge, i'll create a dll loading mod (which will then be used in the harmony loader) specifically for this use case, abstracting away the problem of messing around with files in mod code
FalsePattern#7777: so, for example, with a zipmod, you'd need to extract the dll you want to load into an actual filesystem directory
FalsePattern#7777: it assumes that every dll it loads exists as a file on the disk
FalsePattern#7777: after a deep dive into LW's mod loading code, i've figured out an extremely important piece of information:
Devon#5352: battle royal mechanics soon?
CrispyPin#1149: pvp when
CrispyPin#1149: slimestone when
Limón#7879: Factorio when?
Limón#7879: Conveytor belts when?
StartForKiller#0001: yeah harmony works like mixins
KyleRokuKyu#6975: I also made a first person mod for it just for shiggles
KyleRokuKyu#6975: There's a game called Voxel Tycoon (fun little logistics/factory management game) <[newline]>  <[newline]> I was able to replace the world generator with a new one entirely because of Harmony <[newline]> ezpz
KyleRokuKyu#6975: Also, just to give closure to this question <[newline]> Harmony is a simple API that adds prefix and suffix hooks to every single function called in source code. <[newline]>  <[newline]> So, when a function is called <[newline]> We could intercept, change input args, then let the function run with those modified values <[newline]>  <[newline]> and/or/then <[newline]> After the function is running, we intercept the return value (or any public/private props/fields) and modify THOSE before the return value is sent back to the calling method
KyleRokuKyu#6975: I mean, also, we could just ask Jimmy to add Harmony hooks to the base game. <[newline]> It's like 5 lines of code lol (give or take)
KyleRokuKyu#6975: >:D <[newline]> GOOD <[newline]> Harmony opens SO many possibilities
cheese3660#8641: I tried getting harmony to work the legit way of loading dlls into the game ... buttt
CrispyPin#1149: omg yesssss
ieee 802.11ac#6337: nice
FalsePattern#7777: the harmony injector can also inject other dll files too! just put them in the root directory of the mod
FalsePattern#7777: harmony injector:
FalsePattern#7777: test mod:
FalsePattern#7777: 
FalsePattern#7777: demo 0harmony mod. <[newline]> It prepends `~~HARMONIFIED~~` to all log messages <[newline]> extract this into GameData too
FalsePattern#7777: i managed to make a 0harmony injector (Client-side only)<a:bobby_dance:680884143344713771> <[newline]> put the folder from the zip into GameData
FalsePattern#7777: progress
FalsePattern#7777: alright, so <[newline]> turning 0harmony into an lw mod would be extremely difficult, so i'll do the next best thing: <[newline]> a very small dll injector mod, which can then be used to chainload 0harmony and other advanced code modification libraries
DanielGJ44#4557: But if a mod can bridge that gap, that would be cool
DanielGJ44#4557: It is planned but not a priority currently
DADp#7461: i actually kinda want lw vr
DanielGJ44#4557: (<https://youtu.be/HX0fIi3H-es>)
DanielGJ44#4557: Jimmy: [insert feature] is coming <[newline]> Modding community: IT'S MY FEATURE AND I NEED IT NOW!
DanielGJ44#4557: HUH
ieee 802.11ac#6337: hmmmm
FalsePattern#7777: huh...
FalsePattern#7777: does the mod loader compile any arbitrary .cs file in `src/server` and `src/client`?
FalsePattern#7777: wait a second
FalsePattern#7777: mod source: https://www.notion.so/beastsaber/How-To-Force-Any-Unity-Game-to-Run-In-Native-VR-Mode-cf8c50f66f2740d5b692db786a8386a1
FalsePattern#7777: however, this proves that a proper logic world vr mod is not outside the realm of possibilities
FalsePattern#7777: the main drawback is that it's a bepinex mod
FalsePattern#7777: shaky hands
ieee 802.11ac#6337: the background is having a stroke
ieee 802.11ac#6337: nice windows skin
FalsePattern#7777: (starts at 0:16)
FalsePattern#7777: it's extremely broken (gui is invisible, no crosshair, buggy outlines, etc), but it technically works
FalsePattern#7777: logic vr 👀
ieee 802.11ac#6337: what's harmony (in this context)
KyleRokuKyu#6975: Either way <[newline]> That's FANTASTIC
KyleRokuKyu#6975: If you added Harmony hooks on launch, we could inject wherever using Harmony's API (I'm a fan of it because of the simplicity)
FalsePattern#7777: i'm still looking for more places where custom code can be injected using basic field manipulation
FalsePattern#7777: theoretically, one could replace a game state instance in the dictionary with a wrapper containing additional code, and achieve deeper levels of game modification that way
FalsePattern#7777: 
FalsePattern#7777: my first successful c# reflection in a mod
cheese3660#8641: Tomorrow that is
cheese3660#8641: Finally I have a long enough break from work such that I can get back to modding
Alea#5422: Yes, it doesn't. It was a joke 😆
DanielGJ44#4557: This discussion is modding though so if someone wants to make it on their own accord I would like to see it
Broyojo#2667: yeah
Lisa#4756: I don't think the scope of the project includes such things.
Lisa#4756: Do we really need to simulate the speed of light, maxwell's equations, and all that stuff?
Lisa#4756: And do we really want more calculuations? We just want performance for the logic simulator.
Broyojo#2667: maybe a survival game with physically accurate circuits would be cool
Lisa#4756: I disagree. This is purely logic gates.
Dragon Lord#6944: lol
Dragon Lord#6944: ew, that's not digital logic, that's **physical modeling** >:0
Alea#5422: you should write a physically accurate simulation for it
Alea#5422: I think simulating inductance is critical to the success of LW
ieee 802.11ac#6337: jimmy you wrote like 10 things that you probably didn't need to make the game, how much can one extra hurt
Jimmy#8080: yes, definitely worth my time
Limón#7879: You *could* make your own cloth simulation and then you could make the pole whatever shape you want
Jimmy#8080: I wanted the flag cloth to collide with the flagpole, but the Unity cloth simulation only supports collision with capsule colliders, so the flagpole needed to be a capsule collider. As a fun side effect, this makes parkour on top of flagpoles more challenging than on any other surface in the game.
KyleRokuKyu#6975: It's unintuative because you'd think something with infinite sides would be infinitely complex <[newline]>  <[newline]> But <[newline]> All you have to do is find the distance away from something to define a sphere collider. <[newline]>  <[newline]> With a cylinder, you have to define a center plane, find the distance on that plane, for the circle, then define a distance from that plane, normal to it
Limón#7879: I feel like spheres would be harder than a cylinder
KyleRokuKyu#6975: So, long and short of it is, <[newline]> There's no cylinder collider in the basic collider shapes of Unity <[newline]>  <[newline]> For cylindrical objects, its more performant to use a capsule collider because spheres are the easiest collision to process and a capsule is just 2 spheres and a point intersect algorithm
Limón#7879: I was thinking about the flag
Limón#7879: Is the pole round
Limón#7879: Wait
Limón#7879: Why??
KyleRokuKyu#6975: Dope <[newline]> I figured they had their own layer <[newline]> I just wasn't too concerned about the detector's nuances yet <[newline]>  <[newline]> But ye, planned to make it layer based
Jimmy#8080: Github supports embedding mp4s into readmes now
Jimmy#8080: Flagpoles
Jimmy#8080: There's a specific layer for player colliders, you probably want to use that. See `LogicWorld.Physics.Layers`
Limón#7879: The markdown thing doesn't sound like a git thing more than git uses markdown, like discord uses a worse version of markdown
Limón#7879: Bean
KyleRokuKyu#6975: Also, as someone who doesn't regularly use git <[newline]> It took me more time and attempts than I care to admit to figure out how to get gifs working in mark down
KyleRokuKyu#6975: (Like, stacking 2 pistons works fine but stacking a 3rd is quantum in nature)
KyleRokuKyu#6975: So, feel free to use them but don't be surprised if odd cases cause them to freak tf out
KyleRokuKyu#6975: Side Note: <[newline]> Pistons, while working for a lot of cases <[newline]>  <[newline]> Are also VERY non-deterministic in other cases
KyleRokuKyu#6975: And, yea, gif'ifying those nuked the quality lolol
KyleRokuKyu#6975: ye
ieee 802.11ac#6337: what is a capsule but a sphere where a slice got extended
KyleRokuKyu#6975: Anyways, the reason for a capsule shape above it is because a sphere cast is the easiest way to catch all colliders (Since the Player's rigibody is Kinematic when flying) <[newline]>  <[newline]> And, casting a sphere creates a capsule shaped volume
ieee 802.11ac#6337: the gif-ication on some of those clips really fucked up the colors
KyleRokuKyu#6975: That's the repo with my current experiments (as the Locomotion mod) on it
KyleRokuKyu#6975: https://github.com/KyleRokuKyu/Locomotion
ieee 802.11ac#6337: probably for convenience seeing as all you have to do is `git clone <url> && mv <repo> <path/to/lw/GameData/<modname>>`
Alea#5422: maybe ask for a channel dedicated to posting mod releases?
ieee 802.11ac#6337: as in "sharing the link to a repo where the mod is stored"
ieee 802.11ac#6337: git repos
Alea#5422: also where are ya'll sharing mods?
ieee 802.11ac#6337: nothing vanilla anyways
HomelikeBrick42#1173: modded stuff?
ieee 802.11ac#6337: nothing yet i don't think
Alea#5422: what else is there with a capsule shape?
KyleRokuKyu#6975: Awww yis <[newline]> Got the player detector working <[newline]> (Technically, it detects anything with a collider in a capsule shape above it.  Probs gonna limit it to players only but idk)
Stefan#5422: Eggsactly
Moojuiceman#5661: Even if they're basically the same thing
Moojuiceman#5661: But not LW mods
Stefan#5422: Unofficially
Stefan#5422: There were mods in tung
Moojuiceman#5661: That puts them before the "release" of LW, so you must have been on a real early version or TUNG thing? *Actual* modding has only been a thing since it came out, and we reverse engineered what the mod format should be. Now people know and should be defining their own manifests etc.
FalsePattern#7777: isn't Tinkers' Construct a Minecraft mod?
Lance#8995: BTW, they were all over 2 years old.
Lance#8995: Another was Custom Blocks which was the same as above.  And the last one was Crafting-Tinkers' Constructs which also did the same.
Lance#8995: On google I found ClassicTech and it was NOT drag and drop in the GameData.  I had to create a folder called classicrock.  Then create a file called manifest.succ (edit contents to define mod).  Once that was done, createded another directory within it to hold the classictech file but no matter how I named the folder and file, it never loaded it.
Operu#6600: White circuit boards look like the lab walls from portal so ez
Operu#6600: Use the locomotion mod to make portal game. Portal gun mod when?
QR_Query#6979: ooo
Moojuiceman#5661: All mods should be "drop in the folder" and that's it. Unless they weren't made properly
Moojuiceman#5661: <@!285544665401262090> What ones have you installed so far?
KyleRokuKyu#6975: I want this to be as ezpz as possible for peeps to use
KyleRokuKyu#6975: This one is definitely just drag and drop in the GameData folder and is in its own, contained, folder within that
Lance#8995: I would be interested in acquiring your mod when you release it.  The only thing I will need is a README text on how to install it properly because so far, the mods I have tried to place on the game show in the MOD Folder but won't actually load the mod changes.
KyleRokuKyu#6975: Sockets also need to be moved server side <[newline]>  <[newline]> The crash was actually a LW error (from deleting the peg on the ground) <[newline]>  <[newline]> The way I'm doing it is by moving it client side for the visual transition <[newline]> Then, when it's done, it updates server side. <[newline]> I had it all moving server side but the tick rate misalignment made things jank <[newline]>  <[newline]> Pistons can push other pistons but things get a bit wonky if you stack too many. <[newline]>  <[newline]> They are both height and speed adjustable (and colorizable) <[newline]>  <[newline]> I'm working out a few minor bugs before releasing the first iteration of this mod <[newline]>  <[newline]> Overall, it's called Locomotion <[newline]> Because I also want to make servos and rotary encoders and such <[newline]> (Also a piston that has an Up and Down input with a speed and max height so you can just run it to any height within the range)
Moojuiceman#5661: Also moving game objects client side does nothing to the circuit simulation on the server. Since the component logic doesn't change. Only thing that does matter is the sockets, and they self update based on location anyway
Limón#7879: So it probably uses the same system
Limón#7879: They said they were gonna look at the way boards are moved
Limón#7879: Probably
Stefan#5422: ah it works in the same way?
Limón#7879: And it handles it fine
Limón#7879: I mean that's what the move keybind does
Stefan#5422: You are manipulating the curciut layer in ways that were not anticipated
Limón#7879: Idk why it would
Moojuiceman#5661: <@!119493641944170496> Is your mod up for download anywhere yet? Also what happens when piston pushes piston etc. ? Unless there's variable length already
Stefan#5422: but bravo
Stefan#5422: I would expect the game to just die if a component moves like that
StartForKiller#0001: it crash xD
TBS-Frain_Breeze#0771: ??? that's fucking amazing
Stefan#5422: Im surpised it doesnt crash
TBS-Frain_Breeze#0771: wha- what
StartForKiller#0001: xd
Ecconia#4929: (Or just say what you need and let others do it for you :P)
Limón#7879: If you wish
megamaz#1020: Should I start doing some modding <:bigthonk:833426152332853288>
Jimmy#8080: my god, it's more beautiful than I ever could have imagined
Ecconia#4929: You forgot the term "unreliable"...
FalsePattern#7777: hmmm... i wonder if this could be used for 0 tick logic <:thonk:606157825626079242>
Deleted User#0000: Doors? We need motors!
Ecconia#4929: When doors?
KyleRokuKyu#6975: But I did think it was very funny
KyleRokuKyu#6975: It "should" be LW <[newline]> My mod shouldn't care about the peg I deleted
HomelikeBrick42#1173: because that crash does happen alot to me when destroying pins
HomelikeBrick42#1173: was that crash just a logic world bug or an issue with your mod?
cheese3660#8641: Holy shit
KyleRokuKyu#6975: Yuppp
ieee 802.11ac#6337: are you using the triangle crosshair
Reese4221#8317: thats really cool! :D
ieee 802.11ac#6337: perfec
KyleRokuKyu#6975: Flawless
KyleRokuKyu#6975: https://i.imgur.com/AntEjh1.mp4
StartForKiller#0001: maybe not
StartForKiller#0001: i don't know
ElNico56#0201: is there like a list of mods currently made for lw
StartForKiller#0001: do you mean this?
StartForKiller#0001: wdym?
Ecconia#4929: Nice zip though?
StartForKiller#0001: <@!151293812675706880>
StartForKiller#0001: from lower to greater
StartForKiller#0001: yeah
Ecconia#4929: Sort by IDs maybe?
StartForKiller#0001: time to create a command
StartForKiller#0001: searching for the mods and the on the packet assembly
cheese3660#8641: Only of adjust color
StartForKiller#0001: so you need to search for the assemblies yourself
StartForKiller#0001: the list is private
StartForKiller#0001: well not really
Ecconia#4929: Yeah its just calling that class, nice.
StartForKiller#0001: ``` <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 13 is LogicAPI.Networking.Packets.Initialization.ConnectionApprovalPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 14 is LogicAPI.Networking.Packets.Initialization.ConnectionEstablishedPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 15 is LogicAPI.Networking.Packets.Initialization.WorldInitializationPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 12 is LogicAPI.Networking.Packets.Initialization.ClientLoadedWorldPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 10 is LogicAPI.Networking.Packets.Discovery.DiscoveryRequestPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 11 is LogicAPI.Networking.Packets.Discovery.DiscoveryResponsePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 1 is LogicAPI.Networking.Packets.Client.BuildingRequestPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 2 is LogicAPI.Networking.Packets.Client.ChatMessageSentPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 3 is LogicAPI.Networking.Packets.Client.ExtraDataChangePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 4 is LogicAPI.Networking.Packets.Client.ExtraDataRequestPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 5 is LogicAPI.Networking.Packets.Client.PlayerAppearancePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 6 is LogicAPI.Networking.Packets.Client.PlayerHotbarPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 7 is LogicAPI.Networking.Packets.Client.PlayerPositionPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 8 is LogicAPI.Networking.Packets.Client.RpcCallPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 9 is LogicAPI.Networking.Packets.Client.RunCommandPacket <[newline]> ```
StartForKiller#0001: ``` <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 28 is LogicAPI.Networking.Packets.Subassemblies.SubassemblyRequestPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 29 is LogicAPI.Networking.Packets.Subassemblies.SubassemblyRequestResponsePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 16 is LogicAPI.Networking.Packets.Server.BuildActionReceiptPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 17 is LogicAPI.Networking.Packets.Server.ChatMessageBroadcastPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 18 is LogicAPI.Networking.Packets.Server.CircuitStatesUpdatePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 19 is LogicAPI.Networking.Packets.Server.DebugMessagePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 20 is LogicAPI.Networking.Packets.Server.ExtraDataUpdatePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 21 is LogicAPI.Networking.Packets.Server.PlayerAppearanceUpdatePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 22 is LogicAPI.Networking.Packets.Server.PlayerListPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 23 is LogicAPI.Networking.Packets.Server.PlayerPositionUpdatePacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 24 is LogicAPI.Networking.Packets.Server.RpcConfirmPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 25 is LogicAPI.Networking.Packets.Server.SetPlayerPositionDataPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 26 is LogicAPI.Networking.Packets.Server.StartMovingRequestPacket <[newline]> 2021-11-07T16:04:58Z | INFO  | [packetMappings] Packet ID 27 is LogicAPI.Networking.Packets.Server.WorldUpdatePacket <[newline]> ``` <[newline]> <@!151293812675706880> yeah, i can search it from the modding system
Limón#7879: I think this has an example of that
Limón#7879: https://github.com/cheese3660/CheeseUtilMod
Elperson#8844: Does anyone know how to make a mod that has the adjust inputs window like the and gate?
Ecconia#4929: ``` <[newline]>  <[newline]> ID: 27 Packet: LogicAPI.Networking.Packets.Server.WorldUpdatePacket <[newline]> ID: 28 Packet: LogicAPI.Networking.Packets.Subassemblies.SubassemblyRequestPacket <[newline]> ID: 29 Packet: LogicAPI.Networking.Packets.Subassemblies.SubassemblyRequestResponsePacket <[newline]> ```Yeah I can wörk with that
Ecconia#4929: ``` <[newline]> ID: 1 Packet: LogicAPI.Networking.Packets.Client.BuildingRequestPacket <[newline]> ID: 2 Packet: LogicAPI.Networking.Packets.Client.ChatMessageSentPacket <[newline]> ID: 3 Packet: LogicAPI.Networking.Packets.Client.ExtraDataChangePacket <[newline]> ID: 4 Packet: LogicAPI.Networking.Packets.Client.ExtraDataRequestPacket <[newline]> ID: 5 Packet: LogicAPI.Networking.Packets.Client.PlayerAppearancePacket <[newline]> ID: 6 Packet: LogicAPI.Networking.Packets.Client.PlayerHotbarPacket <[newline]> ID: 7 Packet: LogicAPI.Networking.Packets.Client.PlayerPositionPacket <[newline]> ID: 8 Packet: LogicAPI.Networking.Packets.Client.RpcCallPacket <[newline]> ID: 9 Packet: LogicAPI.Networking.Packets.Client.RunCommandPacket <[newline]> ID: 10 Packet: LogicAPI.Networking.Packets.Discovery.DiscoveryRequestPacket <[newline]> ID: 11 Packet: LogicAPI.Networking.Packets.Discovery.DiscoveryResponsePacket <[newline]> ID: 12 Packet: LogicAPI.Networking.Packets.Initialization.ClientLoadedWorldPacket <[newline]> ID: 13 Packet: LogicAPI.Networking.Packets.Initialization.ConnectionApprovalPacket <[newline]> ID: 14 Packet: LogicAPI.Networking.Packets.Initialization.ConnectionEstablishedPacket <[newline]> ID: 15 Packet: LogicAPI.Networking.Packets.Initialization.WorldInitializationPacket <[newline]> ID: 16 Packet: LogicAPI.Networking.Packets.Server.BuildActionReceiptPacket <[newline]> ID: 17 Packet: LogicAPI.Networking.Packets.Server.ChatMessageBroadcastPacket <[newline]> ID: 18 Packet: LogicAPI.Networking.Packets.Server.CircuitStatesUpdatePacket <[newline]> ID: 19 Packet: LogicAPI.Networking.Packets.Server.DebugMessagePacket <[newline]> ID: 20 Packet: LogicAPI.Networking.Packets.Server.ExtraDataUpdatePacket <[newline]> ID: 21 Packet: LogicAPI.Networking.Packets.Server.PlayerAppearanceUpdatePacket <[newline]> ID: 22 Packet: LogicAPI.Networking.Packets.Server.PlayerListPacket <[newline]> ID: 23 Packet: LogicAPI.Networking.Packets.Server.PlayerPositionUpdatePacket <[newline]> ID: 24 Packet: LogicAPI.Networking.Packets.Server.RpcConfirmPacket <[newline]> ID: 25 Packet: LogicAPI.Networking.Packets.Server.SetPlayerPositionDataPacket <[newline]> ID: 26 Packet: LogicAPI.Networking.Packets.Server.StartMovingRequestPacket```
StartForKiller#0001: xD
Ecconia#4929: WHY IS THERE AN UNDERSCORE IN THE PACKAGE NAME. C# be upset about this kind of formatting 😛
Ecconia#4929: Oh I looked wrongly, now I found it...
Ecconia#4929: Ohoh just looked at every class and was not able to find the code you sent 😦
StartForKiller#0001: ok, for lw modding is better vscode than vs
Ecconia#4929: I still have a friend over today, so not much LW for me.... But yeah
StartForKiller#0001: let's try it
Ecconia#4929: 😄 Would be amazing
StartForKiller#0001: to introduce myself to the world of logicworld c# modding
StartForKiller#0001: i can try to create a mod for that
StartForKiller#0001: yeah 😄
Ecconia#4929: Or even better, adding a mod, which is able to access the ID-Packet mapping to print that as command 🤔
StartForKiller#0001: if you create that, then it will be compatible 😄
StartForKiller#0001: yeah
Ecconia#4929: I am aware, I will have to create a dynamic mapping per version.
StartForKiller#0001: be aware that if the games add a new packet class the packets id will probably move
Ecconia#4929: But Now that I know where the code is, I can find its calls
Ecconia#4929: No the order of assemblies. Not the packets within.
StartForKiller#0001: so it orders it by name
StartForKiller#0001: yeah <@!151293812675706880> the order is this
Ecconia#4929: Nice, now I can mod that code, to print all the ID's along with the packet's name. And bam easy mapping for my proxy.
StartForKiller#0001: Shared_code.code.networking
Ecconia#4929: Ahh great thank you.
StartForKiller#0001: it's on logicworld.sharedcode.dll
Ecconia#4929: Where can I find that code, in which order it getting the Assemblies?
StartForKiller#0001: so if the position of the methods changes, his id too
StartForKiller#0001: this methods finds any instance extending a packet and assings it a type id
StartForKiller#0001: <@!151293812675706880> it seems that the game assign them in order
StartForKiller#0001: ok 😄
Ecconia#4929: If you want to go on this adventure, I would love to hear your results, whatever they yield in! Thank you~
ieee 802.11ac#6337: like he managed to not get into metallica ***by being too good*** (according to hetfield)
ieee 802.11ac#6337: i wasn't gonna doubt him????
Chime#3134: say what you will, les claypool is an amazing bass player
Chime#3134: Primus ||https://www.youtube.com/watch?v=aYDfwUJzYQg||
DADp#7461: englihs
ieee 802.11ac#6337: i.e. in *jerry was a race car driver* we have "nachos?" and in *john the fisherman* they're on a boat at one point and kirk hammett is there
DADp#7461: the ol contradictory of "yea no"
ieee 802.11ac#6337: to be fair most primus music videos are wack as fuck
ieee 802.11ac#6337: yeah no that video is something else
Chime#3134: hilarious video too, if you haven't seen it
ieee 802.11ac#6337: *sick ass bridge*
ieee 802.11ac#6337: it smells like seven layers, that beaver eats taco bell
ieee 802.11ac#6337: then along came lou with the old baboon, said "i recognize that smell"
ieee 802.11ac#6337: one day you know that beaver tried to leave her so she caged him up with cyclone fence
ieee 802.11ac#6337: wynona's got herself a big brown beaver and she shows him off to all her friends
Chime#3134: o/~ eeeeeeeeee he he heee heee heeeeeeeeeeee o/~
ieee 802.11ac#6337: only with modding can you open the game and hear primus playing
StartForKiller#0001: It picks the less amounts of address posible, you can create with that a componentes of any size and any output size
StartForKiller#0001: I can research it if you want, it is easy
Infini#5724: or
Infini#5724: well like what about address
StartForKiller#0001: Literally a ROM
Infini#5724: is this like, data storage?
Ecconia#4929: Would help me significant to extract the id's from logic world. Which I then could use for my proxy project. And who doesn't want a LogicWorld proxy...
Ecconia#4929: Does anybody here know how LogicWorld packet IDs are assigned? I only know that there was a bug with some languages and sorting of packets before assigning id's. Thus I assume that they are auto generated. But I cannot find the code which scans for packets and assign ids them. <[newline]>  <[newline]> It might be the MessagePack system which takes care of it. But that again is a weird choice of handling it. <[newline]>  <[newline]> Does anybody besides me (and the developers) work with this?And has any clue?
pipe01#7194: Thanks!
Devon#5352: oh neat, good to know theres an old wiki! Def struggled a lot figuring out what worked and didn't. Hopefully the new LS version is pushed into the game soon, it looks pretty decent!
pipe01#7194: Although fair warning: the old LogicScript sucks in a lot of places
pipe01#7194: The wiki has been updated for a new version of LogicScript that is not yet in the game. You can check the old wiki here: https://github.com/pipe01/LogicScript/wiki/Syntax-reference/ee2d938b94905527a5bee930f96dd54185bb514a
Jimmy#8080: Another option would be to use the system time. In `DoLogicUpdate()`, access `DateTime.Now.Ticks` and set the output state based on that.
Jimmy#8080: Yeah of course
Doctor Stupid#9197: or at least manage the member state in a correct manner, ie serialize state require to build the timer/stopwatch, don't serialize those structures themselves
Moojuiceman#5661: Protip, don't. Because it'll corrupt your world https://discord.com/channels/401255675264761866/901659878869844048/905527296176324659
Jimmy#8080: Just use `System.Timer` or `System.Stopwatch`
ieee 802.11ac#6337: does anyone know if there's a way to get the current tick rate
ieee 802.11ac#6337: now to figure out how to do a consistent bpm that isn't reliant on a given tick rate
ieee 802.11ac#6337: i uh
ieee 802.11ac#6337: yeah that's one way to do it
Jimmy#8080: ```csharp <[newline]> public override void DoLogicUpdate() <[newline]> { <[newline]>     if (DelayCounter >= CounterTarget) <[newline]>     { <[newline]>         Output.On = true; <[newline]>     } <[newline]>     else if (DelayCounter <= 0) <[newline]>     { <[newline]>         Output.On = false; <[newline]>     } <[newline]>  <[newline]>     if (Input.On && Output.On) <[newline]>     { <[newline]>         DelayCounter = CounterTarget; <[newline]>         return; <[newline]>     } <[newline]>     else if (!Input.On && !Output.On) <[newline]>     { <[newline]>         DelayCounter = 0; <[newline]>         return; <[newline]>     } <[newline]>     else if (Input.On && !Output.On) <[newline]>     { <[newline]>         DelayCounter++; <[newline]>     } <[newline]>     else if (!Input.On && Output.On) <[newline]>     { <[newline]>         DelayCounter--; <[newline]>     } <[newline]>  <[newline]>     QueueLogicUpdate(); <[newline]> } <[newline]> ```
ieee 802.11ac#6337: i'm gonna try and make a metronome component
ieee 802.11ac#6337: how does the delayer work
ieee 802.11ac#6337: i forgot and i'm too lazy to crack open dnspy
Doctor Stupid#9197: Ben Eater's youtube channel has a few videos talking about binary transmission protocol hardware
Doctor Stupid#9197: sort of difficult to really give any sort of helpful response without more context, like i'm not sure if your talking about a cpu implemented in LW or in a c# mod or something. code wise theres a number of approachs, digital logic wise, i know its possible of course but i don't know how to build one
Vinyl Boot Maven of Shade#1858: protocol I think. The link between CPU instructions to serial transmitter/reciever.
StartForKiller#0001: yeah, they work, but you cannot work with numbers larger than 1, i mean the values needs to be sized of 1 bit
ieee 802.11ac#6337: if it's any consolation for an xor you can just throw together a cursed solution via arithmetic operations
ieee 802.11ac#6337: i know there's and but i don't know if there's or
Devon#5352: I see why modding isn't supported yet.... 😅  what about comparisons (such as & and |) do they work? I seem to be having trouble with them
StartForKiller#0001: if is like <[newline]> ``` <[newline]> if in[1] = 1 <[newline]>   something <[newline]> else <[newline]>   something <[newline]> end <[newline]> ```
StartForKiller#0001: any is a special case for while -> any = while *
StartForKiller#0001: the memory capacity is 256 bits wide
StartForKiller#0001: mem[index]
StartForKiller#0001: and you can have a memory inside the script with mem
StartForKiller#0001: and out[index]
StartForKiller#0001: you just use them as in[index]
StartForKiller#0001: and you cannot declare inputs
StartForKiller#0001: you only got for i what discovered disassembling the game, once, for, if, while, any, assignments
StartForKiller#0001: at least for now
StartForKiller#0001: yeah
Devon#5352: I see... almost everything documented on the github wiki for LSX is not actually implemented into LSX (at least not in-game)
StartForKiller#0001: i think so
Devon#5352: /misdocumented?
Devon#5352: alright so I replaced `startup` with `once`,  its now throwing `Error at 2:5: expected expression` with <[newline]>  <[newline]> ``` <[newline]> once <[newline]>     @print "Hello World" <[newline]> end <[newline]> ``` <[newline]>  <[newline]> is `@print` also broken?
Devon#5352: ah cool
StartForKiller#0001: yeah, it's not startup, it's once
Devon#5352: **plz help:** whenever I attach this script to my game object it throws  <[newline]>  <[newline]> Script itself: <[newline]>  <[newline]> ``` <[newline]> startup <[newline]>     @print "Hello World" <[newline]> end <[newline]> ``` <[newline]>  <[newline]> ```2021-11-05T23:34:29Z | ERROR | [Mod manager] Failed to compile script segment for mod testmod: <[newline]> 2021-11-05T23:34:29Z | ERROR | [Mod manager]   Error at 1:1: expected case, found String```
StartForKiller#0001: 256x16b rom
StartForKiller#0001: now with this i can create an easier way to introduce microcode to my cpu 😄
StartForKiller#0001: if anyone wants to try it https://github.com/StartForKillerMC/logicrom
StartForKiller#0001: i made a script to create rom lsx scripts from raw arbitrary binary data 😄
Devon#5352: deh fun shape
Doctor Stupid#9197: like designing / implementing a protocol, or talking serial port i/o to a device?
Vinyl Boot Maven of Shade#1858: Anyone got any good references for learning how to implement port io? I got a serial transmitter and reciever made. But that's it.
cheese3660#8641: yeahh
KyleRokuKyu#6975: Mostly, it's just so many components and wires that it nukes performance <[newline]> The smallest I could get fast RAM to be is 2x5x2.5 per bit <[newline]> Which is just a lot to load when stacked to nearly 400 bytes
KyleRokuKyu#6975: I can just not use that stuff but still have it
KyleRokuKyu#6975: Eh, it's whatever
cheese3660#8641: if you just want ram
cheese3660#8641: Remove the screen parts maybe
KyleRokuKyu#6975: I'm definitely grabbing your mod and using it then. <[newline]> I need large banks of ram but... <[newline]> Hekk... <[newline]> That makes server load and client load in times insane
cheese3660#8641: Yes
KyleRokuKyu#6975: Wait, are you the one with the RAM mod?
KyleRokuKyu#6975: Makes sense but, yea.  It has an independent "frame rate" and, because it's not rendering anything, can be much higher
KyleRokuKyu#6975: Good to know that the server doesn't have to abide by frame restrictions.
KyleRokuKyu#6975: Also, that was the limitation I was talking about last night <[newline]> That's why I thought it might happen.  Because inputs, as far as I understood them (before realizing the server can do more than one logic query per frame), that would limit it to 1 pixel per tick
KyleRokuKyu#6975: Yea, fa sho the better way to do it then
KyleRokuKyu#6975: Ok good <[newline]> Because that was a complete guess based solely on the only reason I could see moving to server side being different hahah
cheese3660#8641: yes that is right
KyleRokuKyu#6975: Ok and are you're going server side because the server can do multiple LW circuit logic operations per frame but only sends the latest one at render to the client once per rendered frame? <[newline]> Or is that not quite right?
cheese3660#8641: so higher simulation rates wouldn't work
cheese3660#8641: and any updates that weren't rendered input wise were skipped
cheese3660#8641: Yes
KyleRokuKyu#6975: Wait, so were you saying you were limited to one pixel update per frame when client side?
cheese3660#8641: QueueCustomDataSendToClient
cheese3660#8641: ``` <[newline]> /// <summary> <[newline]>         /// This component's custom data. To send updates to connected clients, call <see cref="!:LogicComponent.QueueCustomDataSendToClient" /> <[newline]>         /// </summary> <[newline]> ``` <[newline]> Why doesn't that function exist
Moojuiceman#5661: Not sure if there's an easier way than making your own mutation logic, but this should at least work
Moojuiceman#5661: <@!299685147220115457>  See LogicWorld.Server.Circuitry.InputPeg.StateID setter. but change WorldMutation_UpdateInputStateID for WorldMutation_UpdateComponentCustomData or WorldMutation_UpdateComponentCustomDataPartially
cheese3660#8641: Thats client to server? <[newline]> I want server to client <[newline]> Unless they are synced
cheese3660#8641: anyways time to disable loglevel trace because it actually makes loading take longer
pipe01#7194: Alright, it'll be fixed next update
cheese3660#8641: <@!128545421579517952> yep its ```<mod>/shared``` and not ```<mod>/src/shared```
cheese3660#8641: Wait ... yeah ... it could be finding my old file location now that i think about it
pipe01#7194: Ah I think there's a mistake on the code, try putting the shared files under a "shared" folder instead of a "src/shared" folder
cheese3660#8641: (I cut the log off at the compile error)
cheese3660#8641: I can confirm the namespaces and typenames are identical
cheese3660#8641: And at the top it is found
cheese3660#8641: Then its only deploying clientside (I'm outputting the name of the class to the logger, and it fails to compile on the server stating that the type doesn't exist
pipe01#7194: Wrap "trace" in quotes
pipe01#7194: Yup
cheese3660#8641: is the code for it under ```<mod>/src/shared```?
cheese3660#8641: also I'm doing ```loglevel trace``` in autoexec.lsf <[newline]> And I get this <[newline]> ```2021-11-05T16:53:35Z | INFO  | [Integrated server output] An error occurred on line 1 while parsing file 'autoexec.lsf': unxpected string 'trace' found```
cheese3660#8641: So I put my interface in src/shared, but its not being found
Doctor Stupid#9197: it is probabably a good habit, when declaring a type or member, to specify the acces modifer
cheese3660#8641: (I'm not too well versed with everything about C#
cheese3660#8641: ohhhhhhh
Doctor Stupid#9197: > Interfaces declared directly within a namespace can be public or internal and, just like classes and structs, interfaces default to internal access. <[newline]>  <[newline]> https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/access-modifiers
cheese3660#8641: Anyways I has a new error now which is my fault
cheese3660#8641: But alas I was wrong
cheese3660#8641: I assumed it was default public
cheese3660#8641: I was going to try that next
cheese3660#8641: Okii
pipe01#7194: Btw the interface should be public
Doctor Stupid#9197: i can add shared deploy attributution to my system with next to no effort so thats awesome to hear
cheese3660#8641: <:02Facepalm:789621432207671358>
cheese3660#8641: thanks
cheese3660#8641: ahh
pipe01#7194: Yeah because it's not really a mod by itself, it's just code that both client and server projects can reference
cheese3660#8641: Ah, I was looking at modsideextensions code and that only had client and server
pipe01#7194: There's already a `shared` project that gets loaded on both sides, does that work?
cheese3660#8641: I did now
pipe01#7194: You should use the `Logger` property on the mod class
Doctor Stupid#9197: probably trying to serialize a type it doesn't want to eat
cheese3660#8641: What is this? <[newline]> System.TypeLoadException: Type '<>ImplIAddressableDisplayData' from assembly 'ProxyAssemblyIAddressableDisplayData, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' is attempting to implement an inaccessible interface.
Doctor Stupid#9197: yep but short term 🤷
cheese3660#8641: still would be good to be able to do without such a framework
Doctor Stupid#9197: i didnt work on it yesterday (freakin furnace broke, its cold in here!) but the publish framework i have thrown together so far should be able to handle deploying to both locations no problem at least
cheese3660#8641: <@!128545421579517952> suggestion for you, add a third mod side that is shared between client and server
cheese3660#8641: Ohh... I need a copy of the data class on both server and client side
cheese3660#8641: That might be useful
Doctor Stupid#9197: structured logging ❤️
Doctor Stupid#9197: i was considering dropping https://serilog.net/ into the cheesemod changes i was making so there's a dedicated non-game engine log stream
cheese3660#8641: whats going on is I'm trying to use unities debug.log from the server side there
cheese3660#8641: oh...I know whats wrong
Doctor Stupid#9197: `SecurityException` is a fun one! looking at this, doesn't look simple if thats the issue https://stackoverflow.com/a/30738480/426894
cheese3660#8641: but I'm debug.logging something somewhere where i don't have access to unity
cheese3660#8641: So theres an error compiling the script
cheese3660#8641: Wait ... I think I know whats wrong there
cheese3660#8641: ``` <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output] LogicAPI.ModLoadException: An error occurred while loading mod 'Cheese Util Mod' <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]  ---> System.Security.SecurityException: ECall methods must be packaged into a system module. <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at UnityEngine.DebugLogHandler.LogFormat(LogType logType, Object context, String format, Object[] args) <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at UnityEngine.Logger.Log(LogType logType, Object message) <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicAPI.ScriptLoadException..ctor(IReadOnlyList`1 errors) in main.cs:line 29 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.SharedCode.Modding.ModLoader.LoadAssembly(MetaMod metaMod, ModSide side, Assembly sideAssembly) in /var/lib/jenkins/workspace/Logic_World_master/Shared Code/Code/Modding/ModLoader.cs:line 223 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.SharedCode.Modding.ModLoader.LoadMod[TMod](MetaMod metaMod, ICommandRegistry commands, ModSide side, IDispatcher dispatcher, Action`1 beforeInit) in /var/lib/jenkins/workspace/Logic_World_master/Shared Code/Code/Modding/ModLoader.cs:line 136 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.Server.Managers.ModManager.LoadMetaMod(MetaMod metaMod) in /var/lib/jenkins/workspace/Logic_World_master/Server/Code/Server/Managers/ModManager.cs:line 87 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.Server.Managers.ModManager.LoadMods() in /var/lib/jenkins/workspace/Logic_World_master/Server/Code/Server/Managers/ModManager.cs:line 67 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    --- End of inner exception stack trace --- <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.Server.Managers.ModManager.LoadMods() in /var/lib/jenkins/workspace/Logic_World_master/Server/Code/Server/Managers/ModManager.cs:line 80 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.Server.Server.Microsoft.Extensions.Hosting.IHostedService.StartAsync(CancellationToken cancellationToken) in /var/lib/jenkins/workspace/Logic_World_master/Server/Code/Server/Server.cs:line 109 <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at Microsoft.Extensions.Hosting.Internal.Host.StartAsync(CancellationToken cancellationToken) <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token) <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at Microsoft.Extensions.Hosting.HostingAbstractionsHostExtensions.RunAsync(IHost host, CancellationToken token) <[newline]> 2021-11-05T16:23:50Z | INFO  | [Integrated server output]    at LogicWorld.Server.Program.MainInner(LaunchOptions opts, String[] args) in /var/lib/jenkins/workspace/Logic_World_master/Server/Code/Program.cs:line 99 <[newline]> ```
cheese3660#8641: use byte[]
cheese3660#8641: I might have to do that if I keep getting integrated server quit unexpectedly
Jimmy#8080: Correct, you must use an interface for `ComponentClientCode<TData>` or `LogicComponent<TData>`. However you also have the option of handling your component's CustomData manually (it's stored as a `byte[]`)
DADp#7461: jimmy<:bobby:628326527817220106>
Doctor Stupid#9197: was the only console project i had handy lmao
cheese3660#8641: I see you're doing this within my code
Doctor Stupid#9197: yep cool, I forget about that sometimes
Doctor Stupid#9197: asked about a bit, sounding like the in that case the struct will box as this also works fine <[newline]> ```cs <[newline]> void Main() <[newline]> { <[newline]>     //FooBar<IFoo>(); <[newline]>     //FooBar<Bar>(); <[newline]>     //FooBar<StructBar>(); <[newline]>      <[newline]>     IFoo cheater = new StructBar(); <[newline]>     FooBar(cheater); <[newline]> } <[newline]>  <[newline]> public interface IFoo {} <[newline]> public class Bar : IFoo { } <[newline]> public struct StructBar : IFoo { } <[newline]>  <[newline]> public void FooBar<T>(T instance) where T : class <[newline]> { <[newline]>     Console.WriteLine(instance.GetType().Name); <[newline]> } <[newline]> ``` <[newline]>  <[newline]> which frankly i found extremely surprising
Doctor Stupid#9197: yeah thats interesting, i can't really explain this. i'll have to do some reading. <[newline]>  <[newline]> ```cs <[newline]> void Main() <[newline]> { <[newline]>     FooBar<IFoo>();      // good to go <[newline]>     FooBar<Bar>();       // good to go <[newline]>     FooBar<StructBar>(); //CS0452 The type 'UserQuery.StructBar' must be a reference type in order to use it as parameter 'T' in the generic type or method 'UserQuery.FooBar<T>()' <[newline]> } <[newline]>  <[newline]> public interface IFoo {} <[newline]> public class Bar : IFoo {} <[newline]> public struct StructBar : IFoo {} <[newline]> public void FooBar<T>() where T : class => Console.WriteLine(typeof(T).Name); <[newline]> ```
Doctor Stupid#9197: but if the compiler says your good your good
Doctor Stupid#9197: i was just thinking an interface doesn't tell you if the implementation is a struct or class, and the constraint specifies class soo
cheese3660#8641: Logic Worlds code always uses Interfaces for TData from what i see
Doctor Stupid#9197: yeah i was thinking down the wrong lines there i suppose
Doctor Stupid#9197: oh
cheese3660#8641: It does
Doctor Stupid#9197: an interface won't work for TData either
cheese3660#8641: thats my mistake
cheese3660#8641: it should be an interface
Doctor Stupid#9197: but otherwise sure
Doctor Stupid#9197: `IAddressableDisplayData` is not an interface, it shouldn't have the I prefix
cheese3660#8641: So something like this should work? <[newline]> ```cs <[newline]> namespace CheeseUtilMod.SharedCode <[newline]> { <[newline]>     class IAddressableDisplayData <[newline]>     { <[newline]>         Color24 color { get; set; } <[newline]>         byte[] pixels { get; set; } <[newline]>         int numPixelUpdates { get; set; } <[newline]>         PixelUpdate[] pixelUpdates { get; set; } <[newline]>  <[newline]>     } <[newline]>  <[newline]>     struct PixelUpdate <[newline]>     { <[newline]>         int x; <[newline]>         int y; <[newline]>         bool pixel; <[newline]>     } <[newline]> } <[newline]> ```
Doctor Stupid#9197: `public abstract class LogicComponent<TData> : LogicComponent where TData : class` <[newline]>  <[newline]> the only constraint is that TData is a `class` so an array should work
cheese3660#8641: will the data item work with an array?
Moojuiceman#5661: Basically use the data item,  updates are free
Moojuiceman#5661: See that message and mine below it
Moojuiceman#5661: https://discord.com/channels/401255675264761866/901659878869844048/905584760414433321
cheese3660#8641: <@!244503493996445697> what were those methods to send and receive component data
cheese3660#8641: anyways, current code is pushed <[newline]> https://github.com/cheese3660/CheeseUtilMod
cheese3660#8641: and at that point I might as well just be writing a shader to take a color, an array of bools and a resolution to make it faster yet
cheese3660#8641: Meaning I'm going to need to be able to do server side stuff
cheese3660#8641: Yep ... for now thats how its going to be
cheese3660#8641: <@!119493641944170496> unless I do some server side stuff, I may actually only be able to update the texture once per frame
Doctor Stupid#9197: used to be able to do all sorts of neat stuff with wiremod, my favorite was self stabilizing platforms that you could steer by standing on the edges... oh look its on the steam mods list now. waaaaay back in the day the maintainers refused to put it up there. there was all sorts of mods for the wiremod too like z80 cpus or lua interpraters. I suppose it wouldn't take too much to also add thrusters and stuff to do the same here
ieee 802.11ac#6337: in my defense i was playing gmod darkrp the other day when some random guy came up to me and said "hey come look at our wiremod ray tracer"
cheese3660#8641: Strange, in the unity editor what I'm doing seems to work
Limón#7879: With the good chips
Limón#7879: Is that the mod in gmod
Limón#7879: What is wiremod
Doctor Stupid#9197: oh shit people other then me remember wiremod? 😮
RyanT#1426: Cool, also I might work more on my logic utilities mod after school
cheese3660#8641: Yes
RyanT#1426: Is this a modded screen?
cheese3660#8641: so it may not have the quirks of unity
cheese3660#8641: thats gmod innit so source engine
ieee 802.11ac#6337: what does wiremod do for its displays
ieee 802.11ac#6337: yeah that's fair
cheese3660#8641: maybe, but idk what that is yet
ieee 802.11ac#6337: there has to be a better way
cheese3660#8641: I just think I may be doing it wrogn
cheese3660#8641: yes
ieee 802.11ac#6337: are you live updating a texture
cheese3660#8641: The problem is, the texture isn't updating as it should
cheese3660#8641: I've got a pixel showing
cheese3660#8641: because otherwise this may be very slow
cheese3660#8641: Hmm <@!119493641944170496> food for thought, gpu shader that does the screen calculatiosn
cheese3660#8641: I am so close ... I can smell it
cheese3660#8641: Closer
cheese3660#8641: Wrong side of display but ... I got something
KyleRokuKyu#6975: TPT is SO old... <[newline]> I love that it's still around
Reese4221#8317: you should take a gander at the R2
Stefan#5422: I see people modelling Nuclear reactors inn there
Reese4221#8317: well FILT computing
Reese4221#8317: and FILT logic which i love so much
Stefan#5422: I mean Im not suprised
Reese4221#8317: yea
Stefan#5422: There is pistons there
Reese4221#8317: the thing people make rick rolls in
Stefan#5422: ah
Reese4221#8317: The Powder Toy
Stefan#5422: (what is tpt)
KyleRokuKyu#6975: I'm going to add a bounce block too <[newline]> And if a piston pushes it into you, it applies force to the player rigidbody
KyleRokuKyu#6975: lololol
Reese4221#8317: ~~and rework the games physics for subframe~~
Reese4221#8317: ~~now i just need to make other TPT logic components~~
KyleRokuKyu#6975: I'll do both
KyleRokuKyu#6975: That should be easy enough
Reese4221#8317: instead of a fixed length
Reese4221#8317: you have a up and a down input
Reese4221#8317: TPT style pistons
Stefan#5422: Logic world mechanical calculator
KyleRokuKyu#6975: Sure
Reese4221#8317: may i make a feature suggestion?
KyleRokuKyu#6975: Once I do, btw, I'm going to also add rotators
KyleRokuKyu#6975: but not quite there
Reese4221#8317: :D
KyleRokuKyu#6975: I'm VERY close to getting that working
Reese4221#8317: if so logic world piston doors?
Reese4221#8317: can they move components?
Reese4221#8317: haha
KyleRokuKyu#6975: lol
Stefan#5422: Now we just need a portal gun
Stefan#5422: Amazing
KyleRokuKyu#6975: I'm close to getting things moving with the pistons. <[newline]> I'm just also tired cause it's 4am <[newline]> So, stopping here for the night <[newline]> The component.succ file defines how high the pistons go and how fast they move
Reese4221#8317: THATS AMAZING
Reese4221#8317: YES
KyleRokuKyu#6975: https://i.imgur.com/nsnaERm.mp4
KyleRokuKyu#6975: ------ <[newline]> And, in the succ <[newline]>  <[newline]> SmugBanner: <[newline]>     column: "Locomotion" <[newline]>     category: "Reactive" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             -   # The display <[newline]>                 scale: (10, 0.5, 10) <[newline]>                 position: (0, 0, 0) <[newline]>                 color: 070707 <[newline]>     clientCode: Locomotion.Banner <[newline]>     codeInfoStrings: <[newline]>         - "Locomotion/images/smug.png" <[newline]> BonkBanner: <[newline]>     column: "Locomotion" <[newline]>     category: "Reactive" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             -   # The display <[newline]>                 scale: (10, 0.5, 10) <[newline]>                 position: (0, 0, 0) <[newline]>                 color: 070707 <[newline]>     clientCode: Locomotion.Banner <[newline]>     codeInfoStrings: <[newline]>         - "Locomotion/images/bonk.jpg"
KyleRokuKyu#6975: ------ <[newline]> Ahem, <[newline]> IComponentInfo <[newline]>  <[newline]> string[] IComponentInfo.CodeInfoStrings => throw new System.NotImplementedException(); <[newline]>  <[newline]> CodeInfoStrings[0]
KyleRokuKyu#6975: Wow that's hideous
KyleRokuKyu#6975: ```public class Banner : ComponentClientCode, IComponentInfo <[newline]>     { <[newline]>         Texture2D texture; <[newline]>         Transform visual; <[newline]>  <[newline]>         public string TextID => throw new System.NotImplementedException(); <[newline]>  <[newline]>         public System.Type LogicCodeType => throw new System.NotImplementedException(); <[newline]>  <[newline]>         public string LogicScript => throw new System.NotImplementedException(); <[newline]>  <[newline]>         public System.Type ClientCodeType => throw new System.NotImplementedException(); <[newline]>  <[newline]>         int[] IComponentInfo.CodeInfoInts => throw new System.NotImplementedException(); <[newline]>  <[newline]>         float[] IComponentInfo.CodeInfoFloats => throw new System.NotImplementedException(); <[newline]>  <[newline]>         string[] IComponentInfo.CodeInfoStrings => throw new System.NotImplementedException(); <[newline]>  <[newline]>         bool[] IComponentInfo.CodeInfoBools => throw new System.NotImplementedException(); <[newline]>  <[newline]>         protected override void InitializeInWorld() <[newline]>         { <[newline]>             texture = new Texture2D(256, 256); <[newline]>             texture = Main.LoadImage(CodeInfoStrings[0]);```
cheese3660#8641: I want to see how you access the succ from your mod
KyleRokuKyu#6975: There, the pastebin code has been cleaned up and commented.  Probably works too, idk
KyleRokuKyu#6975: There.  Now the component.succ file has the path to the image to import
KyleRokuKyu#6975: codeInfoStrings: ?
KyleRokuKyu#6975: Ahhh hekk, I don't remember the syntax in the succ file to add strings/floats/ints to send to the code
ieee 802.11ac#6337: can't wait to figure out custom world types because all the base mod has is references about the preexisting world types
ieee 802.11ac#6337: neat
KyleRokuKyu#6975: That's why that
KyleRokuKyu#6975: https://discord.com/channels/401255675264761866/902235544946372688/905361517275398174
KyleRokuKyu#6975: Absolutely <[newline]>  <[newline]> But, for now, I'm just focusing on getting things moving (literally)
ieee 802.11ac#6337: the factorio arms are a definite plus to it
KyleRokuKyu#6975: same
ieee 802.11ac#6337: i like create
ieee 802.11ac#6337: 👀
KyleRokuKyu#6975: If all goes well, what I'm actually working on will be similar to the Create mod
ieee 802.11ac#6337: can't wait for there to be a logic world glue mod somewhat akin to forge
KyleRokuKyu#6975: It wouldn't, visually, do anything <[newline]> It's just an extra call that I'd prefer to avoid
KyleRokuKyu#6975: In any case, got everything working except live rotating the component <[newline]> Rotating when ghost works <[newline]> But rotating while not grabbing only rotates the base block, not the image. <[newline]> Should be ezpz.  Just have to find where that's called (Might be Data Updated but I'd prefer to stay away from rotating the image every time anything is touched)
KyleRokuKyu#6975: lol
ieee 802.11ac#6337: how about the hammer obsolete guy
KyleRokuKyu#6975: 
ieee 802.11ac#6337: try a different picture
KyleRokuKyu#6975: Oh, this might be ezpz actually
cheese3660#8641: That may be my problem
KyleRokuKyu#6975: Which explains why changing its material changed everything
cheese3660#8641: Ohhhh
KyleRokuKyu#6975: So, the rendertransform is almost certainly the pooled object or prefab reference
KyleRokuKyu#6975: Even stranger... <[newline]> childing the visual to the render transform does nothing
KyleRokuKyu#6975: I did this to myself.  I literally programmed a mod to mock me
cheese3660#8641: Heh
KyleRokuKyu#6975: There's something rather annoying about the code not *quite* working and I enter the world to this
cheese3660#8641: Yeahh, my code will be on github once I get it working
KyleRokuKyu#6975: Then we can all play with it 😄
KyleRokuKyu#6975: Yea, just thoughts.  Obvs getting it going is the first bit
KyleRokuKyu#6975: It had 2 sets of 8x8x6 memory banks as frame buffers
cheese3660#8641: If its a big enough issue, ill do something like that
KyleRokuKyu#6975: That's also how I did my vanilla display
KyleRokuKyu#6975: That's how modern computers get around that issue
KyleRokuKyu#6975: When the write stuff goes low (or a second input) <[newline]> Swap the textures
KyleRokuKyu#6975: Have 2 textures
KyleRokuKyu#6975: You could do a double frame buffer in the code
cheese3660#8641: Yeahhh
KyleRokuKyu#6975: Rather, scan lines
KyleRokuKyu#6975: Also, you'll see it update.  So, frame tearing
cheese3660#8641: Yee i know
KyleRokuKyu#6975: Obvs all pixels won't need updating always, but still
KyleRokuKyu#6975: The framerate of the display itself is going to be 256x256 ticks per frame
KyleRokuKyu#6975: Right, not the issue per se
cheese3660#8641: Per frame is tps/fps
cheese3660#8641: Per tick is one
KyleRokuKyu#6975: Well, whichever
KyleRokuKyu#6975: Because that determines the "framerate" of the display
cheese3660#8641: Wait per frame or per tick
KyleRokuKyu#6975: But, that's the upper limit
KyleRokuKyu#6975: Right
cheese3660#8641: But thats not hard to change
cheese3660#8641: Well ... for now one
KyleRokuKyu#6975: It's more that, how many pixels can be edited per frame?
cheese3660#8641: Hmm ... its going to be updating a texture every frame the inputs were updated
KyleRokuKyu#6975: However, I don't see it being particularly fast but idk, you may have some tricks up your sleeve
KyleRokuKyu#6975: I made a vanilla 8x8 display with 396 bytes of ram for I/O stuff <[newline]>  <[newline]> each pixel is 6x6 <[newline]>  <[newline]> So, to have a MUCH smaller display would be awesome
KyleRokuKyu#6975: I'm STOKED to see what you do with the addressable display
KyleRokuKyu#6975: I'mma keep fiddling with it <[newline]> Hopefully, by the time you look at it tomorrow, it'll be nice and ready to drop in
cheese3660#8641: I see
KyleRokuKyu#6975: It won't really matter because it has a backing to it and can be a plane instead of a cube
KyleRokuKyu#6975: I didn't account for rotation (Well, I "did" but Logic World rotates the visual differently from the main block) <[newline]> Also, I forgot to rotate the actual visual transform. <[newline]>  <[newline]> Anyways, the interesting side effect. <[newline]>  <[newline]> Screen space ambient occlusion doesn't take these into account.  So, they're not sent to that post process z buffer, I assume.
KyleRokuKyu#6975: Oof, it has some interesting side effects
KyleRokuKyu#6975: Lastly, it does generate the display on top of the Logic World Component block
KyleRokuKyu#6975: Also, I'm commenting it now lol
cheese3660#8641: Yeahhh i saw
KyleRokuKyu#6975: That also has a bit to load a texture (Without the load code cause that's in my main static class) <[newline]>  <[newline]> But you can replace that with your texture generation of choice
cheese3660#8641: Ill try this tomorrow
KyleRokuKyu#6975: Yea, I have it open on my side monitor forever
KyleRokuKyu#6975: Ah, same old same old
cheese3660#8641: But I didnt think to look
cheese3660#8641: I use dnSpy
KyleRokuKyu#6975: Lets you look into compiled DLLs (Microsoft approved, too)
KyleRokuKyu#6975: ILSpy is your best friend
KyleRokuKyu#6975: It didn't show me it either lolol
KyleRokuKyu#6975: https://pastebin.com/bqUM73Ew
cheese3660#8641: Wait ... visual studio doesnt show me that method <:02Facepalm:789621432207671358>
KyleRokuKyu#6975: I'll pastebin the code
KyleRokuKyu#6975: It fully works now 😄
KyleRokuKyu#6975: You just need to destroy it in OnComponentDestroyed
KyleRokuKyu#6975: ``` <[newline]>         protected override void OnComponentDestroyed() <[newline]>         { <[newline]>             if (visual) <[newline]>                 Object.Destroy(visual.gameObject); <[newline]>         }```
KyleRokuKyu#6975: Ok, I have it all working except deleting when moving but I have an idea for that
cheese3660#8641: But more importantly, the grid snapping I showed earlier ... where the new object I make snaps to a grid
KyleRokuKyu#6975: I'm gonna fiddle with some stuff and see what I can come up with
cheese3660#8641: Like the new object duplicating on movement, which I can maybe fix
cheese3660#8641: But there are flaws with that
cheese3660#8641: Hence why I was making a new object
KyleRokuKyu#6975: I have some ideas
cheese3660#8641: I ran into it and idk how to get around it
cheese3660#8641: Yeahhh
KyleRokuKyu#6975: It's probs something to do with object pooling
KyleRokuKyu#6975: and, no not overwriting preexisting
KyleRokuKyu#6975: Yea, same problem
ieee 802.11ac#6337: are you overwriting a preexisting material
cheese3660#8641: Same problem
KyleRokuKyu#6975: That's fine.  I'll make a custom material and try some things
cheese3660#8641: .
ieee 802.11ac#6337: oh no
KyleRokuKyu#6975: Everything is trying to use that material hahah
KyleRokuKyu#6975: 
ieee 802.11ac#6337: what broke
KyleRokuKyu#6975: There's more that needs to be fixed
KyleRokuKyu#6975: Well....
ieee 802.11ac#6337: west coast gang
KyleRokuKyu#6975: Oops
KyleRokuKyu#6975: OH
KyleRokuKyu#6975: East Coast crew
KyleRokuKyu#6975: same lol
cheese3660#8641: Its like midnite for me
KyleRokuKyu#6975: 
cheese3660#8641: Ill look at this maybe tomorrow
cheese3660#8641: Okii
KyleRokuKyu#6975: <@!299685147220115457> One other "issue" <[newline]> I loaded a texture just to test that <[newline]>  <[newline]> The UVs are shifted by 0.5f x and y <[newline]> (So, just add 0.5f to both the vertex.x and vertex.z in the for loop that sets the uvs array)
ieee 802.11ac#6337: such linear algebra
Verlio_H#0201: very much modding
Verlio_H#0201: good old mount'n dew
ieee 802.11ac#6337: vr chat
ieee 802.11ac#6337: https://media.discordapp.net/attachments/732432526127267920/906017292775727104/20211104_200821_030.jpg?width=1407&height=634
ieee 802.11ac#6337: and now for something completely different
Verlio_H#0201: nice
ieee 802.11ac#6337: one of my friends is taking honors int 2 and somehow managed to be behind normal int 2
Verlio_H#0201: cringe int 1 int 2 int 3 precalc vs chad math 1 math 2 math 3 precalc (nc way) sadly I recently moved to washington so now stuck with the garbage alg 1 geometry alg 2 thing
ieee 802.11ac#6337: and now here i am
Verlio_H#0201: lol
ieee 802.11ac#6337: basically common core said "ok too many people are failing algebra, let's just merge parts of algebra and geometry together"
ieee 802.11ac#6337: integrated 2
Verlio_H#0201: what the fuck is int 2
ieee 802.11ac#6337: look in my defense i'm a freshman taking int 2 because sparkle emoji *oregon* sparkle emoji and also i got 133% in my last math class
Verlio_H#0201: ~~I am 14 too and we did that like 2.75 years ago~~
KyleRokuKyu#6975: Yea, it wasn't *that* bad <[newline]> It's just that I was teaching myself a language by writing some of the most complicated maths in rendering
Doctor Stupid#9197: oh cool, i thought it gave a pretty good foundation for the concept at least
ieee 802.11ac#6337: as in (x+2)(2x-4) = 2x^2 - 8
ieee 802.11ac#6337: pretty ironic since my math class just got to factoring quadratics
ieee 802.11ac#6337: i see veritasium has re-updated the thumbnail
ieee 802.11ac#6337: yeah i watched it
Doctor Stupid#9197: https://www.youtube.com/watch?v=cUzklzVXJwo enjoy
ieee 802.11ac#6337: which isn't good because yknow game engine via vulkan
ieee 802.11ac#6337: i is still a weird concept to me
Doctor Stupid#9197: honestly i have no issue with javascript - higher order functions are awesome and extremely powerful <[newline]>  <[newline]> my problem is i just do not have the math background so everything is a struggle. like here, I can follow along perfectly right to about the 40 minute mark, at that point the symbol jargon has overwhelmed my brain lol  <[newline]>  <[newline]> https://www.youtube.com/watch?v=foRPKAKZWx8
KyleRokuKyu#6975: Someone out there has solved reading text files through fstream (A million posts on StackOverflow)
KyleRokuKyu#6975: But, as Einstein once said <[newline]> Don't bother memorizing something you can look up
KyleRokuKyu#6975: I feel that
ieee 802.11ac#6337: so why did i call it the worst part
ieee 802.11ac#6337: and that's not the worst part
ieee 802.11ac#6337: the worst part is that i barely know how to read data from text files via fstream
KyleRokuKyu#6975: I'm 30 and spent my early teens doing exactly that hahah
KyleRokuKyu#6975: Oh definitely then
ieee 802.11ac#6337: in my defense i'm 14 and i have nothing better to do
KyleRokuKyu#6975: ayyyy GLSL is so fun
Doctor Stupid#9197: im currently trying to learn GLSL via attempting to learn and visualize electrodynamics 😄
ieee 802.11ac#6337: yeah fair
KyleRokuKyu#6975: I used to be interested in writing my own game engines and OSs <[newline]>  <[newline]> But I'd rather spend my time enjoying life
KyleRokuKyu#6975: ew, no thanks
ieee 802.11ac#6337: and i don't even know how to use gdb
KyleRokuKyu#6975: I had to make my own custom handlers for objects being able to reference each other
ieee 802.11ac#6337: i hate myself enough to try and write a game engine in modern day c++ via vulkan
KyleRokuKyu#6975: Yea, anyone want to hate themselves? <[newline]> Write non euclidean stuff in js
ieee 802.11ac#6337: back when unity supported js
ieee 802.11ac#6337: ah yes
KyleRokuKyu#6975: Fun fact, non-euclidean in Unity was my excuse to teach myself js
ieee 802.11ac#6337: i wouldn't write a chat application in it but yknow
ieee 802.11ac#6337: yeah fair
KyleRokuKyu#6975: JavaScript is trying its best ok?
KyleRokuKyu#6975: XD
ieee 802.11ac#6337: insert joke at js's expense here
KyleRokuKyu#6975: Thanks 😄 <[newline]> That means a lot <[newline]> I made it a habit to try to teach anything I know when people are curious because knowledge is power
KyleRokuKyu#6975: Which, btw, is why those exact symmetries are what scientists try to break when searching for FTL and Time Travel
Doctor Stupid#9197: its not an easy skill, kudos
Doctor Stupid#9197: you are an excellent communicator <@!119493641944170496>
KyleRokuKyu#6975: yeyeye
Doctor Stupid#9197: oh of course right back to 1+1!=2 that should have been obvious!
KyleRokuKyu#6975: I'm not one of them.  I interchange the words a lot XD
KyleRokuKyu#6975: And there are a LOT of purists out there who will murder people that get that wrong hahah
KyleRokuKyu#6975: Otherwise, it's not Non-Euclidean <[newline]> It's called Impossible Space
KyleRokuKyu#6975: Yes
Doctor Stupid#9197: does it?
Doctor Stupid#9197: only if it breaks symmetrys that hold in our universe no ?
KyleRokuKyu#6975: I mean, makes sense when you consider the game Portal.  You can just drop an object and create perpetual motion
KyleRokuKyu#6975: Yea Non-Euclidean space breaks basically all laws of thermodynamics hahah
Doctor Stupid#9197: > Yea, that's actually how Non-Euclidean space is defined. <[newline]> ooooohhhh ok thats a 💡 moment for me
KyleRokuKyu#6975: So, the definition for non local translations is a piece wise function
KyleRokuKyu#6975: Yea, that's actually how Non-Euclidean space is defined. <[newline]> The Axiom of our universe that defines 1+1=2 has changed. <[newline]>  <[newline]> So, I can walk out my door and be, instead, in another country.  Thus, the energy I expend and the distance I locally travel is low <[newline]> But the world space distance is immense. <[newline]>  <[newline]> The issue is, in most Non-Euclidean games and media, the axioms themselves aren't consistent
Doctor Stupid#9197: the cross product is still local in terms of relative motion, that's more where i was thinking - but like, looking at it from a number line point of view, it would seem to imply that in a universe like that, 1+1 != 2
KyleRokuKyu#6975: Sorry for getting this channel so off topic, btw lol
KyleRokuKyu#6975: But yea, that would make a "forward" translation follow the contours defined by the clumpy, non-euclidean world
KyleRokuKyu#6975: And, actually, Logic World has something similar already in game. <[newline]>  <[newline]> If you unhide the Planet world type, it probably works very similar to that
KyleRokuKyu#6975: It's very similar math to how games with multiple planets work
KyleRokuKyu#6975: So, technically, the gravity lines of Earth are a good example of this <[newline]>  <[newline]> If you map out the gravitational attraction direction on each point of Earth, you get a weird, wavy array.  It's not at all normal to a perfect sphere <[newline]>  <[newline]> So, you would have to be able to calculate the "world space up" vector at any given point.  In the same sense as calculating the gravity vector at any point on Earth <[newline]>  <[newline]> Then, a non-local translation would be relative to the Cross product of the Up vector by the ideal direction you'd like to go <[newline]>  <[newline]> Then the Cross product of Up and that original Cross product to get the Actual direction you'd go (Your World Space relative forward vector)
Doctor Stupid#9197: its a very very weird idea i know
Doctor Stupid#9197: you seem more familiar with the math here, and i'm curious - do you think that its possible to build a coherent geometry that only allows non local translations / transformations?
KyleRokuKyu#6975: It gets VERY complicated very quickly
KyleRokuKyu#6975: Yup <[newline]> Which is fine if the axioms are just "different" <[newline]> But when the axioms change from place to place without any deterministic function
Doctor Stupid#9197: well i mean your the one defining what 'distance' even means as a concept at that point
KyleRokuKyu#6975: Like, in euclidean space, it's a simple matter to connect two points lol
KyleRokuKyu#6975: But do the wires attempt the shortest path?
KyleRokuKyu#6975: Well <[newline]> It's more the...  like.  it should
Doctor Stupid#9197: the geometry should hold right?
KyleRokuKyu#6975: I have a massive Unity project called the Fun House where I experiment with different stuff like that. <[newline]>  <[newline]> It's basically a huge non-euclidean maze (indoors and outdoors) <[newline]>  <[newline]> But. <[newline]> I don't want to even BEGIN to bring that to Logic World hahah <[newline]> Like, it's pretty light weight because it only uses 1 camera <[newline]> But trying to figure out how to get wires to run through a 5 sided square.......
KyleRokuKyu#6975: lol it's... yea... <[newline]> It's a very strange coordinates system to work in
Doctor Stupid#9197: i really wish i could wrap my head around the maths to do things like that
Doctor Stupid#9197: oooh thats soo cool
KyleRokuKyu#6975: Here's a tech demo I made back in 2014 then updated in 2019 to showcase as a guest speaker at the college I graduated from <[newline]>  <[newline]> https://www.youtube.com/watch?v=U3sTSWJF_qA
Doctor Stupid#9197: https://www.youtube.com/watch?v=rBr-0bHQfxc  <--
Doctor Stupid#9197: oh yes please
KyleRokuKyu#6975: Non Euclidean Logic World?
Doctor Stupid#9197: in game shader editor plz
KyleRokuKyu#6975: That's dope
KyleRokuKyu#6975: Oooooooh snap
Doctor Stupid#9197: https://github.com/przemyslawzaworski/Unity-Post-Processing-Mod-Tool runtime compile the shader ?
KyleRokuKyu#6975: But they wouldn't really be the use case
KyleRokuKyu#6975: Yup
ieee 802.11ac#6337: i'm not an expert on triplanar mapping (i'm not an expert in graphics engineering to begin with lmao) but wouldn't that fuck over moving parts
KyleRokuKyu#6975: Anyways, doing triplanar CPU side sounds like a bad idea hahah
KyleRokuKyu#6975: Now...  I wonder if shaders can be imported
KyleRokuKyu#6975: It'd be better done as a shader but we're already having to define our own UVs so...
Doctor Stupid#9197: that opens up some neat tricks
Doctor Stupid#9197: oh really
KyleRokuKyu#6975: Interestingly enough, this also means we could easily setup triplanar mapping hahah
KyleRokuKyu#6975: Yea, Logic World has no need for UVs so it probs never assigns them
Doctor Stupid#9197: 🤦‍♂️ of course
KyleRokuKyu#6975: I'll leave you to the addressable display <[newline]> I just want decor lol
KyleRokuKyu#6975: I think I'mma add a texture importer now......
KyleRokuKyu#6975: <@!299685147220115457>  <[newline]> https://pastebin.com/iKtgYwC0
KyleRokuKyu#6975: 
KyleRokuKyu#6975: 100% why I make that texture as my test texture in mods XD
KyleRokuKyu#6975: lolol
ieee 802.11ac#6337: install counter strike source
KyleRokuKyu#6975: I guess I could have chosen less "missing texture" colors but... habit lol
KyleRokuKyu#6975: Also, that's not a missing texture, that's a texture I created and assigned
KyleRokuKyu#6975: I think the only thing you were missing was setting the UV coordinates
KyleRokuKyu#6975: You were very close
KyleRokuKyu#6975: One sec, will pastebin the code
KyleRokuKyu#6975: ezpz
KyleRokuKyu#6975: 
KyleRokuKyu#6975: Ok
cheese3660#8641: yes
KyleRokuKyu#6975: The size of 256x256 * pixelSize
cheese3660#8641: one object with custom tezture
cheese3660#8641: no
KyleRokuKyu#6975: Starting at the component's placement point?
KyleRokuKyu#6975: Ok, so you just want to make a grid of objects yea? 256x256?
cheese3660#8641: kinda
KyleRokuKyu#6975: So, roughly, GetBlockEntity(0).WorldPosition
cheese3660#8641: but its just setting pos to the components pos basically
KyleRokuKyu#6975: Fair
cheese3660#8641: not near pc rn
KyleRokuKyu#6975: What's the code you're using to set their transform.position?
cheese3660#8641: yep
KyleRokuKyu#6975: As in Unity.GameObject gameObjects?
cheese3660#8641: i was creating custom gameobjects but they kept snapping to a grid as in that latest image
KyleRokuKyu#6975: Unity materials probably aren't included in the build at all
KyleRokuKyu#6975: Hitboxes worked tho
KyleRokuKyu#6975: When I made the piston, I started with Unity primitives but they weren't showing up
cheese3660#8641: ahh
KyleRokuKyu#6975: Logic World uses a custom material set.  Default Unity materials don't seem to render
cheese3660#8641: i was trying that
KyleRokuKyu#6975: HOWEVER
KyleRokuKyu#6975: One single new material
KyleRokuKyu#6975: That'd be the better way
KyleRokuKyu#6975: The long and short of it is, you'll probably have to create a material instance for each pixel on the array then assign their colors manually. <[newline]>  <[newline]> That said, <[newline]> You could also create a texture in memory and assign colors to that texture <[newline]> Then have the display read the texture
cheese3660#8641: like 256x256 monochrome for now
KyleRokuKyu#6975: And, how custom are the colors?
KyleRokuKyu#6975: Henlo, just got off work for the day (9pm local time... brain is fried) <[newline]>  <[newline]> Anyways, <[newline]> What are you trying? <[newline]>  <[newline]> Addressable Display, yea? <[newline]> Do what resolution? <[newline]> Are we talking rendering whole images or just like a byte worth of pixels in a square (16x16, iirc)
᲼ ᲼  ᲼#0001: Is there a way to use the in-game menus to adjust pin count in CS mod? - Thanks
RyanT#1426: 2 and 4 bit demuxes
cheese3660#8641: Hmm ... how about the addressable screens we forget about em for now
cheese3660#8641: <@!119493641944170496> this is very confusing to me rn  whats going on
cheese3660#8641: I'm getting a strange grid pattern now
DADp#7461: uhoh
cheese3660#8641: Wait, I have dumb idea, I create new object for the screen
DADp#7461: that might work
Doctor Stupid#9197: maybe this https://answers.unity.com/questions/155465/objects-in-rendertexture-render-with-black-alpha-v.html ?
Limón#7879: Dark mode
cheese3660#8641: <@!154964593397989376> am I summoning satan by modifying how stuff is rendered?
Doctor Stupid#9197: i know `sharedMaterial` is a thing 🤷
cheese3660#8641: 
cheese3660#8641: Umm I just changed the renderer material for a lot of things
cheese3660#8641: ```cs <[newline]> protected override void Initialize() <[newline]>         { <[newline]>  <[newline]>             address_size = (InputCount - 2) >> 1; <[newline]>             resolution = 1 << address_size; <[newline]>             pixels = new byte[(resolution * resolution) >> 3]; <[newline]>             Color = Color24.Amber; <[newline]>             tex = new Texture2D(resolution, resolution); <[newline]>             var block0 = GetBlockEntity(0); <[newline]>             var blockObject = block0.RendererTransform.gameObject; <[newline]>             material = new Material(Shader.Find("Unlit/Texture")); <[newline]>             material.mainTexture = tex; <[newline]>             blockObject.GetComponent<Renderer>().material = material; <[newline]>             updatePixels(); <[newline]>         } <[newline]> ``` <[newline]> <@!119493641944170496> do you think this will work?
cheese3660#8641: I think I need to change the material of the renderer
cheese3660#8641: Hmmm
Doctor Stupid#9197: i dont know enough about unitys internal apis to even offer a guess
cheese3660#8641: So, the texture isn't being changed?
Doctor Stupid#9197: <@!119493641944170496>  might know, i think they said they are a unity dev
DADp#7461: uhoh
cheese3660#8641: Omg, thats an amazing idea
Doctor Stupid#9197: i wonder if we could drive a shader fragment off wire inputs
cheese3660#8641: ```cs <[newline]> protected override void Initialize() <[newline]>         { <[newline]>             address_size = (InputCount - 2) >> 1; <[newline]>             resolution = 1 << address_size; <[newline]>             pixels = new byte[(resolution * resolution) >> 3]; <[newline]>             Color = Color24.Amber; <[newline]>             tex = new Texture2D(resolution, resolution); <[newline]>             var block0 = GetBlockEntity(0); <[newline]>             var blockObject = block0.RendererTransform.gameObject; <[newline]>             blockObject.GetComponent<Renderer>().material.mainTexture = tex; <[newline]>             updatePixels(); <[newline]>         } <[newline]> ```
cheese3660#8641: I'm about to be modifying textures on the fly
cheese3660#8641: 
Doctor Stupid#9197: mm yeah that one looks useful
cheese3660#8641: but its IRenderedEntity
cheese3660#8641: Nevermind it, the get function does what i need
Doctor Stupid#9197: not seeing it offhand in ilspy, whats the type?
cheese3660#8641: I'm about to do whats called a pro gamer move
cheese3660#8641: but I found a get function
cheese3660#8641: I need access to that stuff, or else what I'm doing will crash the game with how many of said BlockEntities I need to make
Doctor Stupid#9197: bad idea to start depending on internal implementation details
Doctor Stupid#9197: it's a private internal implementation detail
cheese3660#8641: but why not make it a property?
Doctor Stupid#9197: looks like you can derive it yourself and access the protected members to access it
cheese3660#8641: Wait, I just realized there is a get function
Limón#7879: Make everything non private
Limón#7879: But that would be based
Limón#7879: But I am infact always wanted to say jimknee and pleading face
Limón#7879: This sounds like I am making fun of you
Limón#7879: Jimknee please 🙏 😢 😭 🥺
Limón#7879: 🥺
cheese3660#8641: Jimmy could you make the BlockEntities field of the ComponentClientCode non-private?
cheese3660#8641: Okay cheese the modder is back in action w/ starting to work on addressable displays
Vinyl Boot Maven of Shade#1858: Made a 256 Byte ROM with hexadecimal input.
Doctor Stupid#9197: 🙂
Doctor Stupid#9197: sounds performant
Vinyl Boot Maven of Shade#1858: Alright, It's by no means efficient. But I've managed to get a labels text into a custom LogicCode class. I'll have to run the compiler on the server, which is terrible, but would technically work.
Doctor Stupid#9197: but it would mean unit tests and stuff would be possible
Doctor Stupid#9197: ha no but i might
Moojuiceman#5661: With a plugin to scan for serialisation stuff?
Doctor Stupid#9197: hey in other news i'm pretty close to bringing compile type safety to cheesemod
Moojuiceman#5661: Meanwhile I'm devops and play car mechanic simulator
Vinyl Boot Maven of Shade#1858: True, I wish my job was programming, all I do is oil changes.
Doctor Stupid#9197: sometimes i type things out more for the audience/channel, just trying to be helpful
Moojuiceman#5661: Same, though I haven't used it in so long and now C# is basically my main language (even though I no longer use it at work and we're onto bash and groovy)
Vinyl Boot Maven of Shade#1858: I started with c++ though, multiple inheritance was what I started with.
Doctor Stupid#9197: or maybe `IFruit, IApple: IFruit,  GreenApple : IApple` also implies that `GreenApple : IFruit` as you cannot be an apple and not also a fuit
Vinyl Boot Maven of Shade#1858: I've been programming for 17 years. Only as a hobby, so I'm not super well versed, but definitely not an amateur.
Doctor Stupid#9197: `IFoo, IBar: IFoo, Mytype : Ibar` is the same as `MyType : IFoo, IBar`
Doctor Stupid#9197: sure
Moojuiceman#5661: But you can define interface a, then define interface b : interface a, and if you then use interface b you also have to implement the things from interface a
Doctor Stupid#9197: implementing interfaces defines part of the public contract of the type - implement as many as you'd like, inheritance is about sharing behavior and your only allowed to derive from a single parent type
Doctor Stupid#9197: you implement interfaces and derive/inherent from types
Moojuiceman#5661: Hmm, apparently you *can* inherit from an interface in another one. People's feeling on doing so is, mixed...
Vinyl Boot Maven of Shade#1858: Yea, I get what an interface is. I just wasn't sure if it could inherit from another interface.
Moojuiceman#5661: There's a better explanation from the doc somewhere in here or the CS thread
Moojuiceman#5661: No, an interface is *basically* a list of things you need to include when you use it in your class
Vinyl Boot Maven of Shade#1858: Or can that still inherit?
Vinyl Boot Maven of Shade#1858: Oh wait, it's an interface.
Vinyl Boot Maven of Shade#1858: Do you know what IColorableClientCode inherits?
Moojuiceman#5661: Ok yeah. ComponentClientCode uses a datamanager, which automatically handles the data object and sets up a callback for OnPropertySet, which then calls BuildRequestManager.SendBuildRequestWithoutAddingToUndoStack(new BuildRequest_UpdateComponentCustomData(base.Address, array), null);
Vinyl Boot Maven of Shade#1858: So I think the ComponentCustomData must have been what transfered the switch status from client to server.
Vinyl Boot Maven of Shade#1858: For client code I inherited LogicWorld.ClientCode.Switch directly with no changes. But in for logic code I inherited LogicWorld.Server.Circuitry.LogicComponent<TData> where TData is the ComponentCustomData.Switch. Then Overrided OnCustomDataUpdated() to change output upon switch input.
Vinyl Boot Maven of Shade#1858: LogicWorld.SharedCode.ComponentCustomData, specifically Switch.
Moojuiceman#5661: How did you do this specifically? Using interactable, worldmutation, TData ?
Moojuiceman#5661: Check out https://github.com/cheese3660/CheeseUtilMod if you want a full working example
Vinyl Boot Maven of Shade#1858: For colouring things? Implement an interface? I think I saw something about that, looked really strange.
Moojuiceman#5661: For colouring things, yes. You implement an interface. For editing component variants, we've gotten it to open (the wrong menu) but it does nothing useful
Vinyl Boot Maven of Shade#1858: So no one has figured out how to enable the 'x' menu then?
Vinyl Boot Maven of Shade#1858: True, I could also use unity code to make UI.
Moojuiceman#5661: Or you could hook up commands, but tbh I'm not a fan of the in game console
Moojuiceman#5661: Workaround for now to get user input without UI would be add your own code to read a file, have text there
Vinyl Boot Maven of Shade#1858: Well, I'm wanting to make an assembly compiler/programmer. It's like a label where you specify the needed opcode to assembly code table, write assembly, and then hook it up to your instruction memory(needs to be writable even if the write isn't attached to computer circuitry) and programs it.
Limón#7879: the value is what you give to people in return
Vinyl Boot Maven of Shade#1858: lol
Moojuiceman#5661: I help others help themselves. I don't actually produce anything of value 👍
Moojuiceman#5661: To be more specific, Cheese has been modding (making actual cool stuff), I've just been digging into useful bits of code, helping people find stuff, answering questions
Limón#7879: I have been busy with life stuff
Vinyl Boot Maven of Shade#1858: Oh
Limón#7879: I have barely touched modding in the past 4 days
Limón#7879: <@!244503493996445697> and <@!299685147220115457> have done a lot more than me
Limón#7879: Nope
Vinyl Boot Maven of Shade#1858: <@!859806257774723102> You're the one that's decompiled some code right? Have you decompiled LogicWorld.ClientCode.Label?
Moojuiceman#5661: Spoiler alert, pretty sure it won't open
Vinyl Boot Maven of Shade#1858: Haven't tried
Moojuiceman#5661: Are you even getting the x menu to appear?
Vinyl Boot Maven of Shade#1858: Now I just need to figure out how to have editable text in the 'x' menu
Vinyl Boot Maven of Shade#1858: Sweet! I figured out how to get a ClientCode component affect server logic code!
Vinyl Boot Maven of Shade#1858: Awesome Thanks
Limón#7879: /Server/Server.dll
Vinyl Boot Maven of Shade#1858: I can't find where the switch logic code is. I'm trying to make a copy. I got found Client code, in the LogicWorld.ClientCode.dll, but I can't find any LogicWorld.LogicCode.dll.
RyanT#1426: introducing: RPS In LW Console!
cheese3660#8641: I'm taking a break from modding for today btw
Doctor Stupid#9197: full electo-magnetic dynamics simulation or nothing!
Moojuiceman#5661: Update on analog wires. It'll be tricky and involve some "low level" simulation interaction. But should be possible to achieve the effect of it (even though it isn't really an analog value on the wire)
Doctor Stupid#9197: seems like this might work https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task.delay?view=net-5.0
Doctor Stupid#9197: i like making tools 🙂
Moojuiceman#5661: I just want to "see" the thing and know what's in it so I can make my own that will fit there
Moojuiceman#5661: Feels like more work to try and make a serializer for a couple interesting objects compared to just printing all their values with reflection which is what I've basically been doing instead
Doctor Stupid#9197: `IBinaryAdapter<TValue>` is the interface you'd need then
Doctor Stupid#9197: oh ok after a quick google, this is the Api https://docs.unity3d.com/Packages/com.unity.serialization@1.2/api/Unity.Serialization.Binary.BinarySerialization.html
Doctor Stupid#9197: fun idea - take that 'is this type serializable' function and make a source code analyzer plugin to warn you if you are accidently going to try to serialize a non-serializable type https://docs.microsoft.com/en-us/visualstudio/extensibility/getting-started-with-roslyn-analyzers?view=vs-2019
Moojuiceman#5661: 
Doctor Stupid#9197: its probably the right api then
Moojuiceman#5661: There's some level of serialisation built in, but I don't know if it's home rolled or not. But on any field of a monobehaviour (unity game script) you can add the [SerializeField] attribute and it'll show up in the editor so you can assign a value during scene build
Doctor Stupid#9197: oh this looks handy too, could whip up a quick sanity check scanner for  your code https://docs.microsoft.com/en-us/dotnet/standard/serialization/how-to-determine-if-netstandard-object-is-serializable
Doctor Stupid#9197: this might be useful, but it also assumes unity is using this api and i have no idea if thats the case or not https://docs.microsoft.com/en-us/dotnet/standard/serialization/custom-serialization
Moojuiceman#5661: That was way easier though, since it was just strings and numbers
Moojuiceman#5661: Come to think of it, I think I've actually done similar for a custom csv formatter on a work project. Also using some library and a converter<> type
Doctor Stupid#9197: this json not binary but the idea is the same https://stackoverflow.com/questions/63833112/how-can-i-deserialize-the-json-in-c-sharp-while-some-things-are-not-fixed/63833981#63833981
Moojuiceman#5661: You have a much wider definition of easy than I do
Doctor Stupid#9197: you can work around problems like that usually pretty easily though with your own custom serializer implementations
Doctor Stupid#9197: could be the same issue as with stopwatch - the type itself may not support the operation
Moojuiceman#5661: I would think/hope that binary is the most compatible one though
Moojuiceman#5661: I ask because I had issues with serialising one of the game objects, trying it with SUCC (which I think always uses binary underneath), and my own vanilla binaryformatter attempt. Neither worked because of some objects
Doctor Stupid#9197: json ones use specialized attributes as well
Doctor Stupid#9197: that can be a real hassle sometimes
Doctor Stupid#9197: depends on the specific implementation of the serializer.  the framework xml serializer uses different control attributes then you find in DataAnnotations for instance
Moojuiceman#5661: <@!661295280410460161> Since you're a c# expert, is there any under the hood differences in serialisation methods when it comes to handling different objects better/worse? Like something that would serialise using a binary formatter but not xml etc.?
Doctor Stupid#9197: hey we learned something to document somewhere at least - if your getting world corruptions testing your mod component, check for serialization problems first
Doctor Stupid#9197: see thats where having some insight into the game engine and unity come in handy, that idea sounds much better then fixing the serialziation <@!244503493996445697>
Moojuiceman#5661: half-ass and threading in the same sentence...
AKShredder8#2904: i mean i could half ass it and use threading but tbh i dont feel like learning c# to that extent
Moojuiceman#5661: Failing that you can queue your component for update on the next tick. If you do that every tick you won't miss any, though not sure what performance impact it would have
Moojuiceman#5661: Isn't there a way to do callback based timers? Where you'd set the method to run and a delay to run it. Then you don't need to keep a private timer and check the elapsed time. Nothing to serialise, and no worrying about tick intervals
Doctor Stupid#9197: check out https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection <[newline]>  <[newline]> it's a very powerful tool for certain types of tasks
Doctor Stupid#9197: in this case the serializer is going to skip any member with that attribution
Doctor Stupid#9197: then code can later examine that metadata to make decisions
Doctor Stupid#9197: it allows you to add whats essentially meta-data about the type and its members
AKShredder8#2904: tbh idk what any of the stuff that uses [] before something does in c#
Doctor Stupid#9197: there's probably an Attribute you can mark the field with to exclude it ... oh right there in the so post `[NonSerialized]`
Doctor Stupid#9197: thats probably it right there
Doctor Stupid#9197: https://stackoverflow.com/questions/1866351/how-to-serialize-system-diagnostics-stopwatch
AKShredder8#2904: it still crashed so it might be the private variables
AKShredder8#2904: yea
Doctor Stupid#9197: i know it's doing some type of binary serialization but no idea on the details or how it treats private field data and such
AKShredder8#2904: yea im doing that rn
Doctor Stupid#9197: possibly. should be simple enough to check
AKShredder8#2904: honestly my guess would be that its the timer
AKShredder8#2904: yea
Doctor Stupid#9197: take bits out till it doesn't corrupt the world, then put them back in one at a time until it does - at that point you've found the problem
AKShredder8#2904: that definitely makes sense why it would corrupt if that's why
Doctor Stupid#9197: i'd venture to guess that it's serialization related
AKShredder8#2904: makes sense although im still questioning why it keeps corrupting my worlds when i place it
Doctor Stupid#9197: that's what I suspected - in that case <@!457922556658450432> I think that your code is probably not going to work without like maybe something like an actual `Timer` running to notify an event when the time elapses. but that only gets your halfway, you then have to set a flag and then on the next logic ticket, if that flag is set, do the thing and reset the timer
Vinyl Boot Maven of Shade#1858: In my experience it was called when an input changed not every tick.
Doctor Stupid#9197: ulong is 2^64 so 18446744073709551615
Limón#7879: The 2^32 - 1 was for ints
Doctor Stupid#9197: it's 2^63 : long.MaxValue = 9223372036854775807
Limón#7879: Idk how large they are in C# but I presume 2^32 - 1 large
Limón#7879: And it's are large
Limón#7879: Longs are large
AKShredder8#2904: but idk how c# works
AKShredder8#2904: i know i dont need it
AKShredder8#2904: it was to avoid a overflow
Limón#7879: Why would you need a long
Doctor Stupid#9197: is `DoLogicUpdate` called per tick or per simulation update?
AKShredder8#2904: alr
Doctor Stupid#9197: seems like you could just call Restart() no if(timer.Running) block needed then
AKShredder8#2904: yea i only did it on the end  because i was assuming that it would throw a error if i tried to end a timer that has not been started
Doctor Stupid#9197: probably not the issue
Doctor Stupid#9197: same deal on the final if block - the missing { } after the if mean the `timer.Start()` happens regardless... i don't know if that will actually cause you any problem though - edit - oh i see, its not that bad
AKShredder8#2904: lol
AKShredder8#2904: that is definitely better than mine
Doctor Stupid#9197: the first if block looks questionable - is this any better? `if (target_time != d_time && timer.IsRunning) { timer.Restart(); }`
AKShredder8#2904: ngl is this possible? (its supposed to take 16 bits representing how many milliseconds per clock output) <[newline]> because i keep corrupting my world when i try to use it <[newline]>  <[newline]> ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using System.Diagnostics; <[newline]>  <[newline]> namespace AKComps <[newline]> { <[newline]>     public class Timer : LogicComponent  <[newline]>     {        <[newline]>         private Stopwatch timer = new Stopwatch(); <[newline]>         private uint target_time = 1000000000; <[newline]>         protected override void DoLogicUpdate() <[newline]>         { <[newline]>             base.Outputs[0].On = false; <[newline]>             uint d_time = 0; <[newline]>  <[newline]>             for (int i = 0; i < 16; i++)  <[newline]>             { <[newline]>                 d_time |= (((long)base.Inputs[i].On) << i); <[newline]>             } <[newline]>  <[newline]>             if (target_time != d_time)  <[newline]>             { <[newline]>                 if (timer.IsRunning) timer.Stop(); <[newline]>                 timer.Start(); <[newline]>             } <[newline]>             target_time = d_time; <[newline]>  <[newline]>             if (timer.ElapsedMilliseconds >= target_time)  <[newline]>             { <[newline]>                 if (timer.IsRunning) timer.Stop(); <[newline]>                 timer.Start(); <[newline]>                 base.Outputs[0].On = true; <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
cheese3660#8641: Yeah, colour is dead simple
Moojuiceman#5661: We're still working on getting mod components to have a variant selector menu. Colour selection is doable. And in theory adding stuff to those existing menus is easier than making a new one
Moojuiceman#5661: Depending which menu, may or may not be doable currently
Vinyl Boot Maven of Shade#1858: Anyone know how to add editable text to a components x menu yet?
DustyAngel47#7299: how do i not remember i made the thing
DustyAngel47#7299: wait, wasnt asmr2.wav *about* vore?
DustyAngel47#7299: already exists
ieee 802.11ac#6337: asmr.wav 2
DustyAngel47#7299: what lw vore will look like
cheese3660#8641: So on a scale from 1 to the 8 bit unsigned integer limit how surprised were you <@!154964593397989376> that I was using dynamic prefabs
Moojuiceman#5661: You have been eaten by an AND gate. How did you even...
ieee 802.11ac#6337: zork
RyanT#1426: mabye Rock Paper Siccors or TicTacToe?
RyanT#1426: hmm... what other games should I make?
Moojuiceman#5661: <@!151293812675706880> Sent you a friend req to dm it
RyanT#1426: using <#902235544946372688>, I made a number guessing game using the LW console
Ecconia#4929: Daaaamn, DNSpy can do that... (so let me grab Wine...)
Ecconia#4929: But I fear I should slowly learn how to edit DLL files...
Ecconia#4929: Amazing 🙂 <[newline]> If you get this done for me, we will probably have a way to talk to the LW API for all online related stuff 🙂
Moojuiceman#5661: Need to turn my pc back on but will see what I can do
Ecconia#4929: So basically in `LogicWorld.Online` there is the `OnlineManager` which accesses `ServerProdCert.text` which I need....
Moojuiceman#5661: Dnspy, but on Linux still needs wine sadly
Ecconia#4929: Oh sweet 😛
Ecconia#4929: But yeah I literally just need to print that text asset... So I could replace that DLL in charge. But how to edit it
Moojuiceman#5661: Quickest and dirtiest would be have someone else get it for you ;)
Ecconia#4929: Any quick and dirty solution?
Moojuiceman#5661: UABE has its uses, but for regular old text it's overkill
Ecconia#4929: Sounds good, I just never did that before... uff
Moojuiceman#5661: Eh. Unless you mean to drink, I think you're better off editing the dll to just print it
Ecconia#4929: The moment you told me this, Google also told me about it 😮 <[newline]> Damn it, I need wine now.
Moojuiceman#5661: I made a mod called INIfier a while ago that lets you see and edit textassets, but it uses unity mod manager so you'd have to jump through some hoops to use it in LW and it might not work anyway
Moojuiceman#5661: Alternatively you should be able to edit the code to spit out out on demand
Moojuiceman#5661: Do you know about UABE? It's not updated anymore so compatibility with current unity is iffy, but it might give you enough
Ecconia#4929: Probably in the `resources.assets` file, which I cannot open...
Ecconia#4929: I am pretty close to talking with the logicworld auth server. <[newline]> However I need the certificate of it. <[newline]> It is hidden behind this: `public TextAsset ServerProdCert;` and that means ??? to me.
Moojuiceman#5661: I'll still try to pick at it and see if there's a way around it for now
Moojuiceman#5661: I figured there would be at some point. Since the systems for it are there. Just needs wiring up to the mod code side
cheese3660#8641: Oh <@244503493996445697> I forgot to say that along with assetbundle loading there also will be a custom menu script and succ stuff at some point or something similar
Moojuiceman#5661: Yep I think it is
cheese3660#8641: Ooo, I want it to be at least
Moojuiceman#5661: Some are, some might not be
Moojuiceman#5661: I *think* bidirectional
cheese3660#8641: Oh hell yeah
Moojuiceman#5661: WorldMutation_UpdateComponentCustomData
cheese3660#8641: Like a 16kB RAM wouldbt be too fun to make for me
cheese3660#8641: Also my take on rom and ram components is that anything that repetetive to me isnt as fun
cheese3660#8641: Im wondering if there is a way to send custom packets to the server to update componentdata like for a rom component
Doctor Stupid#9197: with some course work to go with it, seems like that would be an excellent way to teach it. heck i'd probably pay for a class like that and i do mostly know digital logic
Limón#7879: I would find it very funny if I did a digital circuits course and we just play logic world
Doctor Stupid#9197: as fun as it is to write 🙂
Doctor Stupid#9197: yeah it should be done for sure, you really can't have that popping up in logs and error messages end users will see
Verlio_H#0201: based
Moojuiceman#5661: So educate them on some new language at the same time
cheese3660#8641: Because jimmy wants to advertise it to educators
Moojuiceman#5661: 😢
Moojuiceman#5661: But.. why?
cheese3660#8641: <@!151293812675706880> swear words are going to be removed from the code, like for real
Limón#7879: Phasic and secret link with C#
Limón#7879: You can already do that
AKShredder8#2904: i could have it act like inputs are outputs <[newline]> and rotate them to the output side
AKShredder8#2904: oof
cheese3660#8641: You dont I think
AKShredder8#2904: how do you decrease the size of the outputs?
cheese3660#8641: Modding
AMOGUS#1535: how?
cheese3660#8641: Yes
Limón#7879: Punish the code 😡
Moojuiceman#5661: Nice. And it works with the usual press X window? Wonder if/how it would work with something that uses colours but also other data like pin count. Might need to see the displays menu, but I'll stick with trying and gate for now
ieee 802.11ac#6337: when you accidentally forget a / while working with a regex to prune a git repo or whatever
JPM-Baroque Spaceship#6542: 😔
JPM-Baroque Spaceship#6542: I read that as punished
cheese3660#8641: All code has been pushed
ieee 802.11ac#6337: https://cdn.discordapp.com/emojis/816048124052897812.gif?size=64&width=16
cheese3660#8641: Binary to bcd converter
cheese3660#8641: Fuck you /j
ieee 802.11ac#6337: implementing the method
cheese3660#8641: What were ya gonna suggest?
ieee 802.11ac#6337: notimplemenentd
cheese3660#8641: I implemented it, I just didn't remove the default NotImplemenentd
cheese3660#8641: I was a big dumb baka
cheese3660#8641: Nevermind I found it
ieee 802.11ac#6337: you wanna know what would help?
cheese3660#8641: All I know is that I am not implementing a method somewhere I think
cheese3660#8641: Literally nothing of use
ieee 802.11ac#6337: also has anyone tried getting a server to work with mods yet
ieee 802.11ac#6337: check console
cheese3660#8641: but what is the fucking method
cheese3660#8641: Its a not implemented exception
cheese3660#8641: Very useful error
cheese3660#8641: Code for reference <[newline]> ```cs <[newline]> using LogicWorld.Rendering.Components; <[newline]> using JimmysUnityUtilities; <[newline]> using LogicWorld.ClientCode; <[newline]>  <[newline]> namespace CheeseUtilMod.Client <[newline]> { <[newline]>     class SevenSegmentDisplay : ComponentClientCode<SevenSegmentDisplay.IData>, IColorableClientCode <[newline]>     { <[newline]>         public Color24 Color { get => Data.color; set => Data.color = value; } <[newline]>  <[newline]>         public string ColorsFileKey => "SevenSegments"; <[newline]>  <[newline]>  <[newline]>         public float MinColorValue => 0.0f; <[newline]>  <[newline]>         protected override void DataUpdate() <[newline]>         { <[newline]>             QueueFrameUpdate(); <[newline]>         } <[newline]>         protected override void FrameUpdate() <[newline]>         { <[newline]>             for (int i = 0; i < 7; i++) <[newline]>             { <[newline]>                 bool set = GetInputState(i); <[newline]>                 if (set) <[newline]>                 { <[newline]>                     SetBlockColor(Data.color, i); <[newline]>                 } else <[newline]>                 { <[newline]>                     SetBlockColor(Color24.Black, i); <[newline]>                 } <[newline]>             } <[newline]>             base.FrameUpdate(); <[newline]>         } <[newline]>  <[newline]>         protected override void SetDataDefaultValues() <[newline]>         { <[newline]>             Data.color = Color24.Amber; <[newline]>         } <[newline]>  <[newline]>         public interface IData <[newline]>         { <[newline]>             Color24 color { get; set; } <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
cheese3660#8641: Meaning that such things shouldn't be too hard for other recolorable things
cheese3660#8641: <@!244503493996445697> this only required implementing an interface
JPM-Baroque Spaceship#6542: f
ieee 802.11ac#6337: and now we wait for someone to implement color shifting displays
cheese3660#8641: 
cheese3660#8641: Colorable Displays!
cheese3660#8641: Feasible
JPM-Baroque Spaceship#6542: a display but at the same time a button
JPM-Baroque Spaceship#6542: imagine a tactile display
cheese3660#8641: yeahh, thats the plan
Moojuiceman#5661: Ok. I think that interface ties in with the existing colour change menus. So it might "just work" if lucky
cheese3660#8641: but for color changing at least
cheese3660#8641: not general
Moojuiceman#5661: For general UI stuff? I'm having another crack at it but basically starting from 0 code wise
cheese3660#8641: i think i may have an idea btw
cheese3660#8641: mayhaps
Moojuiceman#5661: <@!299685147220115457>  IColorableClientCode This might be useful
Moojuiceman#5661: 😒  TFW someone breaks ToString() and you call it
Moojuiceman#5661: Also someone wanted coloured wires. Which I think would be related to whatever needs adding/overriding to get wires in the first place
Moojuiceman#5661: If you/we figure out custom wires then why not both
Moojuiceman#5661: I was thinking more like take an 8 bit input, convert to a number, send that number on 1 wire. Upscale to X bits as desired
Moojuiceman#5661: Hmm. I guess there are reasons to do that. But floats
Limón#7879: I was thinking of 0.00 to 1.00
ieee 802.11ac#6337: whenever the dev stops being a coward /j
Moojuiceman#5661: Spinning magnetic tape storage mod when?
ieee 802.11ac#6337: to be fair you can get floppies that can hold a tenth of the data
Moojuiceman#5661: "High density"
ieee 802.11ac#6337: 
ieee 802.11ac#6337: ok the ones on the right are normal 1.44mb disks
Moojuiceman#5661: That 90's off-white
Moojuiceman#5661: https://www.reddit.com/r/nostalgia/comments/gzpf8c/windows_95_installation_floppy_disks/ This is the kind of thing I remember
ieee 802.11ac#6337: it doesn't help that we never got a concrete byte count so this could mean 1.44 million bytes or (1.44*1024^2)
Moojuiceman#5661: I guess maybe they didn't always fill all of them? Or some came with patches maybe
Moojuiceman#5661: Lots of things with between 11 and 30 of them...
ieee 802.11ac#6337: so at most 13 1.44MB floppy bois
ieee 802.11ac#6337: thanks b[]ng
Moojuiceman#5661: Don't know the exact number, but I remember I had it on a shitload of floppies for this really old laptop
ieee 802.11ac#6337: damn
ieee 802.11ac#6337: windows 95 fit inside 97 1MB floppies?
cheese3660#8641: I made one too
cheese3660#8641: Pog
Moojuiceman#5661: And just 97 of those and you got windows 95
Vinyl Boot Maven of Shade#1858: 16 of those, and I got a floppy disk ^^
Vinyl Boot Maven of Shade#1858: Sweet, made a working 64k 8bit memory module.
cheese3660#8641: Imagine designing component.succ and not just generating stuff on the fly
Moojuiceman#5661: Nothing yet I think, unless you make one
ieee 802.11ac#6337: well <@!350975527324221451> was making one but i don't know how well that went
ieee 802.11ac#6337: double server
Devon#5352: is there any simple 3d tools available to design the component.succ? or is it just a "fiddle till its right"?
cheese3660#8641: > Logger.Info
Vinyl Boot Maven of Shade#1858: Anyone know how to send a message to the console, preferably via server side component script.
cheese3660#8641: Pog!
Vinyl Boot Maven of Shade#1858: It works! I made a mod. ^^ Not sure why, but my script was causing server to crash unexpectedly, but switching a to c# class worked.
cheese3660#8641: Functioning autodecoding hex display
Moojuiceman#5661: That's dlc. Coming out after horse armour
JPM-Baroque Spaceship#6542: ~~ternary logic mod when~~
cheese3660#8641: lmao
Moojuiceman#5661: If a new kind of wire is made that does more than 0/1 I think it should go in cheeseutil. Just because then it could be called cheesewire 😄
Broyojo#2667: hmmmm
RyanT#1426: he still didn't replace that lol
cheese3660#8641: jimmy <[newline]> ```cs <[newline]> namespace Tung.Server.Server.Circuitry <[newline]> ``` <[newline]> > Tung.
DADp#7461: but ill check
DADp#7461: that im pretty sure the mod file for the maingame brought it
DADp#7461: the new update did bring a new button
DADp#7461: ight ig ill try
DADp#7461: hmmm
Moojuiceman#5661: Again no one has tried. I'd say difficult since you'd need to edit the things that exist in the scene
DADp#7461: ye
Moojuiceman#5661: The *main* menu with singleplayer/mods/options etc?
DADp#7461: i mean like how easy is it to add a button to the main menu?
Moojuiceman#5661: Don't think we've tried colour selection but presumably it's a similar situation
DADp#7461: hmmm
Moojuiceman#5661: The thing you get when you press x on a component to cycle through variants, doesn't work
DADp#7461: <@244503493996445697> are menus weird rn?
Moojuiceman#5661: Not me obviously. Sounds like work
Moojuiceman#5661: I'd say next step is someone adding the straight data pins one, and while they're at it maybe just build the decoder into it so it takes a binary number rather than individual segment on/offs
cheese3660#8641: or use it for that matter
cheese3660#8641: Anyways, seven segment code is pushed for anyone who may wish to look at it
cheese3660#8641: I mean from front to back
cheese3660#8641: It also takes up 1 block of space than the 3 used by display panels
cheese3660#8641: I can't make a similarly scaled display with normal displays anyways
cheese3660#8641: 
cheese3660#8641: I might do that instead if its so desired
Moojuiceman#5661: Or better yet a socket adapter
Moojuiceman#5661: That seems almost redundant? Like you'd just use normal displays or panels. I thought it would end up with like a data line say row of 8
cheese3660#8641: Positioned
cheese3660#8641: Pins
Moojuiceman#5661: Use unity, drag blocks where you want, make script to spit out vectors, optionally in succ format
cheese3660#8641: There needs to be a tool for creating block positions and such lol
cheese3660#8641: (next up will be pin positioning lol
cheese3660#8641: 
cheese3660#8641: i.e. this ... ignore the fact that it is bigger lol
cheese3660#8641: 
cheese3660#8641: This, but the top and bottom are farther up/down
Moojuiceman#5661: Are you going to do the corners touching no overlap version? Since it would be more effort to make the bevelled edge segments
cheese3660#8641: Closer yet
Moojuiceman#5661: What if you had like a multiplexer type component with 8 in 1 out, and the reverse on the other end
cheese3660#8641: Hrmmm 2.0
Limón#7879: But I feel as if it would require overriding some of the base games main systems
Limón#7879: I would like to make it
Limón#7879: B
Moojuiceman#5661: Has anyone tried making analogue pegs yet? I know someone mentioned it. Would be good for multi input things like this display. Or sending lots of data via 1 wire
cheese3660#8641: Yes, very amazing
DADp#7461: amazing positioning
Moojuiceman#5661: That's... better?
cheese3660#8641: 
Moojuiceman#5661: hm. I mean as cool as Obi Wan is I feel like I might let the galaxy down on this one
DADp#7461: hmmmmm
cheese3660#8641: You are the only one rn
Moojuiceman#5661: Is anyone else trying to do that or am I the only hope
cheese3660#8641: Yeah...
Moojuiceman#5661: You should add the colour changing thing for it, though I guess that might need UI too
Moojuiceman#5661: Just a tad wonky
Moojuiceman#5661: ermahgerd, a servern serg
cheese3660#8641: 
cheese3660#8641: It works tho!
cheese3660#8641: Hmm
cheese3660#8641: Without hex support, this is the prefab gen rn <[newline]> ```cs <[newline]> public override ComponentVariant GenerateVariant(PrefabVariantIdentifier identifier) <[newline]>         { <[newline]>             PlacingRules placingRules = new PlacingRules(); <[newline]>             placingRules.AllowFineRotation = scale == 1; <[newline]>             var blocks = new List<Block>(); <[newline]>             for (int i = 0; i < 7; i++) <[newline]>             { <[newline]>                 var locAndScale = sevenSegSegmentLocationsAndScales[i]; <[newline]>                 var x = locAndScale[0].x * scale; <[newline]>                 var y = locAndScale[0].y * scale; <[newline]>                 var w = locAndScale[1].x * scale; <[newline]>                 var h = locAndScale[1].y * scale; <[newline]>                 blocks.Add( <[newline]>                     new Block <[newline]>                     { <[newline]>                         RawColor = Color24.Black, <[newline]>                         Position = new Vector3(x,y,0.125f), <[newline]>                         Scale = new Vector3(w,h,0.25f) <[newline]>                     } <[newline]>                 ); <[newline]>             } <[newline]>             blocks.Add( <[newline]>                     new Block <[newline]>                     { <[newline]>                         RawColor = new Color24(127, 127, 127), <[newline]>                         Position = new Vector3(0.5f * scale, 0, 0.25f + 0.125f), <[newline]>                         Scale = new Vector3(scale, 2f * scale, 0.25f) <[newline]>                     } <[newline]>                 ); <[newline]>             List<ComponentInput> inputs = new List<ComponentInput>(); <[newline]>             if (!hex) <[newline]>             { <[newline]>                 for (int i = 0; i < 7; i++) <[newline]>                 { <[newline]>                     var loc = sevenSegSegmentLocationsAndScales[i][0]; <[newline]>                     var x = loc.x * scale; <[newline]>                     var y = loc.y * scale; <[newline]>                     var z = 0.5f; <[newline]>                     var len = 0.5f; <[newline]>                     inputs.Add(new ComponentInput <[newline]>                     { <[newline]>                         Position = new Vector3(x, y, z), <[newline]>                         Rotation = new Vector3(90f, 0f, 0f), <[newline]>                         Length = len <[newline]>                     }); <[newline]>                 } <[newline]>             } else <[newline]>             { <[newline]>                 if (scale == 1) <[newline]>                 { <[newline]>  <[newline]>                 } else <[newline]>                 { <[newline]>  <[newline]>                 } <[newline]>             } <[newline]>             return new ComponentVariant <[newline]>             { <[newline]>                 VariantPlacingRules = placingRules, <[newline]>                 VariantPrefab = new Prefab <[newline]>                 { <[newline]>                     Blocks = blocks.ToArray(), <[newline]>                     Inputs = inputs.ToArray(), <[newline]>                     Outputs = new ComponentOutput[] { } <[newline]>                 } <[newline]>             }; <[newline]>         } <[newline]> ```
Doctor Stupid#9197: that's pretty cool!
DADp#7461: first time i see a company optimize andriod before ios
Limón#7879: It looks like times New Roman for programming
DADp#7461: ios is super far behibd android
Limón#7879: Looks so weird
Limón#7879: The font
DADp#7461: ios moment
DADp#7461: mm yes code
Limón#7879: 
cheese3660#8641: I love this <[newline]> ```cs <[newline]> public override abstract <[newline]> ```
Limón#7879: It doesn't have highlighting for C#
Limón#7879: True
DADp#7461: code on mobile looks fucky
DADp#7461: aw lord
cheese3660#8641: Current state <[newline]> ```cs <[newline]> using LogicWorld.Interfaces; <[newline]> using LogicWorld.Rendering.Dynamics; <[newline]> using LogicWorld.SharedCode.Components; <[newline]> using System.Collections.Generic; <[newline]> using UnityEngine; <[newline]> using JimmysUnityUtilities; <[newline]>  <[newline]> namespace CheeseUtilMod.Client <[newline]> { <[newline]>     public abstract class SevenSegPrefabBase : PrefabVariantInfo <[newline]>     { <[newline]>         public override abstract string ComponentTextID { get; } <[newline]>         public abstract int scale { get; } //This is 1, 2, or 4 <[newline]>         public abstract bool hex { get; } <[newline]>  <[newline]>         public override PrefabVariantIdentifier GetDefaultComponentVariant() <[newline]>         { <[newline]>             return new PrefabVariantIdentifier(hex ? 4 : 7, 0); <[newline]>         } <[newline]>  <[newline]>         public override ComponentVariant GenerateVariant(PrefabVariantIdentifier identifier) <[newline]>         { <[newline]>             PlacingRules placingRules = new PlacingRules(); <[newline]>             placingRules.AllowFineRotation = scale == 1; <[newline]>             var Blocks = new List<Block>(); <[newline]>             for (int i = 0; i < 7; i++) <[newline]>             { <[newline]>                  <[newline]>             } <[newline]>             return new ComponentVariant <[newline]>             { <[newline]>                 VariantPlacingRules = placingRules, <[newline]>                 VariantPrefab = new Prefab <[newline]>                 { <[newline]>                     Blocks = new Block[] <[newline]>                     { <[newline]>  <[newline]>                     } <[newline]>                 } <[newline]>             }; <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
Moojuiceman#5661: Ahh, fair nuff
cheese3660#8641: I'm writing it
Moojuiceman#5661: But you need the prefab generator somewhere, which isn't in your client code there. Is there a corresponding bit?
Limón#7879: I will check your github and ~~steal~~ write code
Limón#7879: I want to know how to do now
cheese3660#8641: its how my RAM mod does stuff
cheese3660#8641: It does
Limón#7879: Does it work?
Limón#7879: Dynamic prefab
cheese3660#8641: Full file is <[newline]> ``` <[newline]> SevenSeg1x2: <[newline]>     column: "Displays" <[newline]>     category: "SevenSeg" <[newline]>     prefab: dynamic <[newline]>     clientCode: CheeseUtilMod.Client.SevenSegmentDisplay <[newline]>  <[newline]> SevenSeg2x4: <[newline]>     column: "Displays" <[newline]>     category: "SevenSeg" <[newline]>     prefab: dynamic <[newline]>     clientCode: CheeseUtilMod.Client.SevenSegmentDisplay <[newline]>  <[newline]> SevenSeg4x8: <[newline]>     column: "Displays" <[newline]>     category: "SevenSeg" <[newline]>     prefab: dynamic <[newline]>     clientCode: CheeseUtilMod.Client.SevenSegmentDisplay <[newline]> ```
cheese3660#8641: Its just to easily scale to multiple sizes
cheese3660#8641: yes
Moojuiceman#5661: With this using dynamic won't you need the prefab generating code somewhere?
DADp#7461: ill check the logs and more when i get back home
cheese3660#8641: It cycles through the input pins and sets the corresponding display block on or off depending on the input pin
Moojuiceman#5661: C:\Users\<username>\AppData\LocalLow\Mouse Hat Games\Logic World <[newline]> Steam\steamapps\common\Logic World\logs
Limón#7879: I don't understand what the code is suppose to do
cheese3660#8641: ?
Moojuiceman#5661: There are 2 places to find the logs
DADp#7461: wish i could read the logs when the games decides to die
Limón#7879: Does it just cycle through numbers?
DADp#7461: i removed all mods that i had and its still buggy
Moojuiceman#5661: Hmm, since you're in the modding channel, have you been modding? That can break things if server/client don't have the same mods
DADp#7461: someone else, my game pretty much crashes when loading in multiplayer
Moojuiceman#5661: MP hosted on your end or you connecting to someone else?
DADp#7461: hmmm, loading in multiplayer is super slow for some reason for me
Moojuiceman#5661: Based on what was in a dev video, simulation is worldwide, client has a render distance
cheese3660#8641: succ <[newline]> ``` <[newline]> SevenSeg1x2: <[newline]>     column: "Displays" <[newline]>     category: "SevenSeg" <[newline]>     prefab: dynamic <[newline]>     clientCode: CheeseUtilMod.Client.SevenSegmentDisplay <[newline]> ```
DADp#7461: does anyone know if loading in multiplayer loads the entire world or some radius around the player
Moojuiceman#5661: You'll need the succ to go with it though, guessing that's tbd
Moojuiceman#5661: 7 seg component with multiple display segments, based on the existing display code
Limón#7879: I am trying to understand what this is
Limón#7879: What
cheese3660#8641: (Just make sure to have 8 blocks in order that are the seven segment displays blocks
cheese3660#8641: Don't even need server code
cheese3660#8641: all the code needed for a seven segment display <[newline]> ```cs <[newline]> using LogicWorld.Rendering.Components; <[newline]> using JimmysUnityUtilities; <[newline]>  <[newline]> namespace CheeseUtilMod.Client <[newline]> { <[newline]>     class SevenSegmentDisplay : ComponentClientCode <[newline]>     { <[newline]>         protected override void DataUpdate() <[newline]>         { <[newline]>             base.QueueFrameUpdate(); <[newline]>         } <[newline]>         protected override void FrameUpdate() <[newline]>         { <[newline]>             for (int i = 0; i < 7; i++) <[newline]>             { <[newline]>                 bool set = GetInputState(i); <[newline]>                 if (set) <[newline]>                 { <[newline]>                     SetBlockColor(Color24.Amber, i); <[newline]>                 } else <[newline]>                 { <[newline]>                     SetBlockColor(Color24.Black, i); <[newline]>                 } <[newline]>             } <[newline]>             base.FrameUpdate(); <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
Doctor Stupid#9197: plenty. its just in doing so you introduce some rather subtle complexity and potential problems, google around for the terms 'brittle base class' or the 'diamond problem'
Limón#7879: Never seen extending in python, but I don't really use OO python
Moojuiceman#5661: At this point I'm much more used to the interface way of doing things. Can't really remember how multiple inheritance worked in c++
Limón#7879: Rust can *technically* can extend more than 1 struct but it's not really an extension more like it has a field that is that struct
cheese3660#8641: Python
cheese3660#8641: because I think I have figured out how to do that
Moojuiceman#5661: c++ I think can. That's where I started
cheese3660#8641: Btw, my next component in my mod is going to be a custom display
Limón#7879: What languages can extend multiple classes/structs
Moojuiceman#5661: It's part of the age old debate between "is a" and "has a"
Doctor Stupid#9197: no, there's a big difference - interfaces only define the public 'surface area' of the types. deriving from a class implies behavior as well
Moojuiceman#5661: Sure
Limón#7879: Can you extend a class that extends a class?
Moojuiceman#5661: But you can only extend from 1 thing in c#
Moojuiceman#5661: Pretty much
Limón#7879: Interfaces just sound like classes that you extend
Doctor Stupid#9197: with whatever custom behavior you would like
Moojuiceman#5661: You can implement multiple interfaces, but only inherit from 1 base class
Doctor Stupid#9197: interfaces define public api contracts, if you want to define what it means to be a button, you would implement the interface, fulfilling the contract
Moojuiceman#5661: An interface is like a list of functionality. You implement the things from it, and it means anyone can be sure that your class meets their needs if they want to use that interface
Limón#7879: 😳
Limón#7879: Custom buttom color
Limón#7879: I have always associated I being Integer (mostly because of rust)
Moojuiceman#5661: It has bool ButtonDown and Color24 ButtonColor
Moojuiceman#5661: Generally speaking it mean interface, as it does here
Limón#7879: And what do the I's stand for
Limón#7879: What is IButtonData
Moojuiceman#5661: Regular button pretty much just inherits the generic one, nothing special. Panel version has some extra stuff to it
Moojuiceman#5661: <@!756203036589686864>  <[newline]> Client stuff <[newline]> namespace LogicWorld.ClientCode <[newline]> LogicWorld.ClientCode.dll under Managed <[newline]> public class Button : GenericButton<IButtonData> <[newline]> SUCC GameData\MHG\components\1 ComponentList_Input.succ <[newline]>  <[newline]> Server stuff <[newline]> namespace LogicWorld.LogicCode <[newline]> Server.dll under Server <[newline]> public class Button : LogicComponent<IButtonData>
DADp#7461: theres some succ magic for buttons in pretty sure
Limón#7879: And see
Limón#7879: Maybe take a look at the succ file for it
IsCoffeeTho#0001: that would 100% need C#
melonik#8905: how can you make new component on the style of button? <[newline]> you will press something on it and it will activate/deactivete its output? <[newline]>  <[newline]> if it is possible
Limón#7879: That makes sense
cheese3660#8641: Its when logicworld kills the logical parts of your brain so you start thinking ```true.equals(false)``` evaluates to ```true```
Limón#7879: Logicide is when you commit suicide when you get frustrated over logicworld modding?
Stenodyon#8192: idk it sounds bad
cheese3660#8641: Y not
Limón#7879: Mobile typing
Limón#7879: 😔
IsCoffeeTho#0001: logicide awareness
IsCoffeeTho#0001: 👀
Stenodyon#8192: don't commit logicide 👀
Limón#7879: Yes you use logicCide
Vinyl Boot Maven of Shade#1858: <@!859806257774723102> If you make a class that extends LogicComponent in src/server do you use logicCode instead of logicScript in the components succ description? I tried the logicScript method and the server crashes unexpectedly any time I try loading or starting a new world.
Ecconia#4929: wörks, thanks
IsCoffeeTho#0001: soon i am gonna make a pull request to the modding guide repo, i have been writing up a good amount of logic script reference.
Moojuiceman#5661: You'd have to override some base game stuff, which I don't think anyone has done yet (at least without modding dlls)
circuitgamer77#0377: Has anyone been working on a colored wires mod?  I'm mainly just curious how it would work if it's being worked on.
Moojuiceman#5661: Can be split across files as long as you have the relevant ones on each. And since we don't need a different loader now there's no reason to not split things if you want since people can still delete the folder all at once to uninstall
Moojuiceman#5661: Yep. Server for servermod which you need 1 of per mod, components for logiccomponent which is usually what you'll inherit from
IsCoffeeTho#0001: ```cs <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicWorld.Server;```I am not certain but i believe these are the two things that **MUST** be imported
Limón#7879: 🤦‍♂️
Limón#7879: that was the problem
Limón#7879: I forgot to import things I think
Limón#7879: ```succ <[newline]> phasicAnd: <[newline]>     column: "phasicGates" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - Standard <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (-0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>                 length: 0.6 <[newline]>     logicCode: phasicGates.phasicAndGate```
Limón#7879: 
Moojuiceman#5661: Because it hasn't been registered
Moojuiceman#5661: Are you doing client side stuff instead of server stuff? Cause I saw that get component info numeric id error when the server doesn't know about a type of component
Limón#7879: idk how you get anything out of this
Limón#7879: 
Moojuiceman#5661: What's the full stack trace
Limón#7879: but eventually they won't hopefully
Limón#7879: because the error's suck
Limón#7879: I still don't know what the problem is
Moojuiceman#5661: Server is doing the circuit sim, crashes, stops updating client. Client is like "hey server I placed a thing" but no-one is listening
Limón#7879: because serverside code
Limón#7879: makes sense
Moojuiceman#5661: Yeah they're separate
Limón#7879: but not the game
Limón#7879: so the server crashes
Limón#7879: 🤔
Moojuiceman#5661: That happens when the server crashes anyway
Limón#7879: only place
Limón#7879: can't interact with them
Limón#7879: but this just allows me to place parts in each other
Limón#7879: and then crash
Limón#7879: and realize the code is broken
Limón#7879: it will try and do a logic update
Limón#7879: broken
Limón#7879: yeah that's normal for code that's like
melonik#8905: i'm having problems with that too <[newline]>  <[newline]> it mostly crashes after few seconds (atleast for me)
Limón#7879: ```cs <[newline]> using LogicWorld.Server.Circuitry; <[newline]>  <[newline]> namespace phasicGates <[newline]> { <[newline]>     public class Loader : ServerMod { <[newline]>         protected override void Initialize() { <[newline]>             Logger.Info("phasicGates initialized"); <[newline]>         } <[newline]>     } <[newline]>  <[newline]>     public class phasicAndGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() <[newline]>         { <[newline]>             if (base.Inputs[0].On && base.Inputs[1].On) { <[newline]>                 base.Inputs[0].AddOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>             } else { <[newline]>                 base.Inputs[0].RemoveOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> }```
Limón#7879: 
Limón#7879: stuff like this?
Limón#7879: Anyone else having weird bugs when placing modded components?
Limón#7879: my dreams are crusehd
Limón#7879: I thought I had something
Limón#7879: 😭
cheese3660#8641: But its phasic not phastic innit
Limón#7879: 🤔
Limón#7879: Phastic, fast tick
melonik#8905: thanks ^^
Moojuiceman#5661: Logic World/Server/Server.dll
melonik#8905: whitch ones?
Verlio_H#0201: on jimmys computer
cheese3660#8641: In the game dlls
melonik#8905: can i ask where is the code for the components that are already in the game?
cheese3660#8641: Also a 6502 addresses 16 bit address of memory with 8 bits
cheese3660#8641: Not ... exactly but something close enough
Moojuiceman#5661: Nope, don't understand. But at least you found a way to use variants without needing the UI stuff
cheese3660#8641: (and its more memory efficient server wise to compose like that)
cheese3660#8641: though you still have a 4/8/16 bit address space
cheese3660#8641: like 7 bit is 4 bit +1 bit +1 bit +1 bit
cheese3660#8641: It allows you to make odd numbered memory bit widths
Moojuiceman#5661: But if you only have X number of spaces what's the point of allowing addressing to X+Y
cheese3660#8641: Not really
Moojuiceman#5661: Why do you need some of those variants? Isn't it redundant to have so many address lines when there's a limited number of data bits?
cheese3660#8641: Chonker
cheese3660#8641: Is this enough memory sizes
Doctor Stupid#9197: if it helps, this is a discord i'm pretty active in that is all about helping people with c# programming questions - the only thing is game modding is not really an allowed topic (*something about discord TOS and hacking concerns, its kinda silly but i don't make the rules*) as long as you don't directly ask about like dll injecting your good <[newline]>  <[newline]> https://discord.gg/DupVG2ZJ
Limón#7879: you can check now
Limón#7879: commited
Limón#7879: there
melonik#8905: lol
melonik#8905: i will wait just to be sure
melonik#8905: ok
Limón#7879: I am rewriting it rn
Limón#7879: that's why it was there
Limón#7879: they fixed how mods load
melonik#8905: ok?
Limón#7879: and just put the loader C# code in your mod
Limón#7879: ignore the loader part in the tutorial
Limón#7879: https://github.com/LonnonDev/LW-Modding/blob/main/CS-Modding/CS-Tutorial.md
Limón#7879: ```cs <[newline]> using System; <[newline]> using LogicAPI.Server.Components; <[newline]> using LogicWorld.Server; <[newline]>  <[newline]> namespace YourModName { <[newline]>     public class CustomAndGate : LogicComponent { <[newline]>         protected override void DoLogicUpdate() { <[newline]>             base.Outputs[0].On = base.Inputs[0].On && base.Inputs[1].On; <[newline]>         } <[newline]>     } <[newline]> }```
melonik#8905: is there some kind of tutorial on how to code mod in C# for logic world?
melonik#8905: lol
melonik#8905: make sense
Limón#7879: how to program in any language: <[newline]> 1. look up how to do the thing <[newline]> 2. do that thing <[newline]> 3. hope it works <[newline]> 4. repeat <[newline]> (you can skip all steps if you already know how to do the thing)
MiniStumpy#5653: I tried to do C# once, a long time ago, but I couldn't do much in it, need to be patient
melonik#8905: im rn trying to make an and gate
melonik#8905: anything that would work
Limón#7879: what are you trying to do anyways?
Limón#7879: it's much easier
melonik#8905: i dont know C#
Limón#7879: just use C# modding
Limón#7879: the language is bad
melonik#8905: ok
Limón#7879: it just is
melonik#8905: how can 1 or 0 be decimal?
Limón#7879: all decimal numbers are suffixed with '
melonik#8905: huh?
Limón#7879: decimal number
Limón#7879: ctrl+p type: `>ilspy`
Limón#7879: fun fact
melonik#8905: what does the   '   stand for?
JC Denton#9567: also check the logs for crash reasons
JC Denton#9567: You can use & in expressions like this
JC Denton#9567: 
JC Denton#9567: or wait..
JC Denton#9567: unfortunately I am not sure how to do and(in[0] in[3]) for example
melonik#8905: oh ok thanks ^^
JC Denton#9567: has to be done like this
JC Denton#9567: 
melonik#8905: what and function?
cheese3660#8641: I have been working on variantly sized ram, but variants are a pain (read almost impossible due to UI shit), but once CheeseUtilMod is done in its first version there should be common ram sizes in there
JC Denton#9567: Did you do the getting started guide? It is wrong. You have to use the and function somehow
JC Denton#9567: 256 bits is 32 bytes so you could make much bigger RAM with it
JC Denton#9567: Maybe could do something with C# then?
cheese3660#8641: 256 bits is max for lsx
cheese3660#8641: Thats why dnSpy is better ... but linux
melonik#8905: why when i place an custom AND gate it will crash almost instantly? <[newline]> the code for the AND gate: <[newline]> any <[newline]>     out[0] = in[0] & in[1] <[newline]> end
JC Denton#9567: I wonder what would happen if I used LogicScript and made a component that stores like mem[65536] bits so it is a single component RAM/HDD?
Stenodyon#8192: See the pinned messages for resources on modding
Stenodyon#8192: You should ask people about modding in <#901659878869844048> since modding isn't officially supported yet
lucman64 🇺🇦#5391: idk if i sold do it in <#901659878869844048>  or <#901199821212352573> ?
lucman64 🇺🇦#5391: how do you create a mod?
lucman64 🇺🇦#5391: how to creat mod?
Ecconia#4929: I am using ILSpy with Vscode right now. And I have to open one instance per .dll. <[newline]> I just want a program where I can insert all DLL files and when I control+click on something I want it to find usages - but world not be this kind...
DayDun#2309: ah
Ecconia#4929: Not available on *Linux 😦
DayDun#2309: where is dotpeek 🙃
Red_3D#3062: or more, depends on whats going on in the ***multiple terminal multiplexer instances*** you got running
Limón#7879: 😭
Limón#7879: 4 different editors
Ecconia#4929: Developing LW stuff be like...
cheese3660#8641: I might still use the prefab builder to make them as it allows for me to rapidly create common variants of stuff
cheese3660#8641: Aight now that C# modding is better slightly, its time to actually work on CheeseUtilMod to add a few non variant things until variants are easier to do (or rather the UI)
Limón#7879: it's probably because I had 30 components in each other because bugs
Limón#7879: yes
Limón#7879: ah
Moojuiceman#5661: Start a new world?
Limón#7879: 
Moojuiceman#5661: What's the rest of the stacktrace in the error
Limón#7879: I have concluded it's not my code in DoLogicUpdate
Limón#7879: 🤔
Limón#7879: I changed it to Outputs[0].On but it's still index out of range
Moojuiceman#5661: So if index = 1 then bad times
Limón#7879: rubber ducky moment
Limón#7879: I see now
Limón#7879: I am an idiot
Limón#7879: ah
Limón#7879: 3 ins, 1 out
Moojuiceman#5661: 3 in 2 out?
Limón#7879: 3
Moojuiceman#5661: How many ins/outs do you have
Limón#7879: 
Limón#7879: I still don't see how this can be out of range
Limón#7879: ```cs <[newline]>     public class RAM : LogicComponent { <[newline]>  <[newline]>         public bool[] states {get; set;} = { false, false }; <[newline]>  <[newline]>         protected override void DoLogicUpdate() { <[newline]>             bool writevalue = base.Inputs[0].On; <[newline]>             bool write = base.Inputs[2].On; <[newline]>             bool address = base.Inputs[1].On; <[newline]>             int index = write ? 1 : 0; <[newline]>             states[index] = writevalue; <[newline]>             base.Outputs[index].On = states[index]; <[newline]>         } <[newline]>     }```
Limón#7879: at least the errors are more descriptive
Moojuiceman#5661: Except now it can be in /shared OR /src/<side>
Moojuiceman#5661: It should still be .cs not csx
Limón#7879: instead of me being blind
Limón#7879: it actually gives me errors
Limón#7879: if I change it to a CSX file
Limón#7879: I am an idiot
Limón#7879: ah
Moojuiceman#5661: Logic**API**.Server.Components
Limón#7879: 
Moojuiceman#5661: So because you have the old namespace it only finds the TData type, and you don't have a type so error
Moojuiceman#5661: Unless you want the TData, then it's still LogicWorld.Server.Circuitry
Moojuiceman#5661: using LogicAPI.Server.Components
Moojuiceman#5661: namespace has changed. So you no longer have a using statement that lets you use the class
Limón#7879: https://github.com/LonnonDev/mOrecomponents
Moojuiceman#5661: Oh I meant like the repo, so I can look at it
Limón#7879: ```cs <[newline]> using System.ComponentModel; <[newline]> using System.Diagnostics; <[newline]> using System; <[newline]> using LogicWorld.Server.Circuitry; <[newline]> using LogicWorld.Server; <[newline]>  <[newline]> namespace mORecomponents { <[newline]>     public class ROM : LogicComponent { <[newline]>         private int value { get; set; } <[newline]>         protected override void DoLogicUpdate() { <[newline]>             if (value != 1 && base.Inputs[1].On) { <[newline]>                 base.Outputs[0].On = base.Inputs[0].On; <[newline]>                 value = 1; <[newline]>             } <[newline]>         } <[newline]>     } <[newline]> }```
Moojuiceman#5661: And unless you need extra data in your component there's no point using the TData one
cheese3660#8641: Make an empty class
Limón#7879: 
Moojuiceman#5661: Where's your mod code now. Cause the andgate still extends regular logiccomponent
Limón#7879: I don't use C# that much
Limón#7879: I don't know how
cheese3660#8641: Specify it to be an empty class
Limón#7879: what would I specify TData to be
cheese3660#8641: it always had an abstract version
cheese3660#8641: LogicComponent has two versions
Moojuiceman#5661: <@!859806257774723102> I think the change is that LogicComponent is now abstract, and the <TData> one needs you to specify a type. At least I think that's it. Don't fully remember what the definitions were before
Moojuiceman#5661: And the fix for loading c# is exactly what my fix was 🤣
Moojuiceman#5661: Well post update servermod still exists
Limón#7879: and it was before the update
Limón#7879: and it says servermod not existent
Limón#7879: because mod no work now
Limón#7879: in the backend
Limón#7879: I mean
Jimmy#8080: read the damn changelog
Limón#7879: <@!154964593397989376> can you tell us if you changed anything about modding or will you not tell us that?
Limón#7879: but I feel as if some things changed
Limón#7879: the errors are good now
Limón#7879: 🤔
Limón#7879: did someone do some rework
IsCoffeeTho#0001: omg thank you soo much
Puzzlebark#3421: ooh this looks great, thanks
Ecconia#4929: Oh I have that installed, hence even more confusion for me :/ <[newline]> But it is okay. I can see the network packets although it is a pain to navigate the decompile source files.
oddron#8955: https://github.com/IsCoffeeTho/LWCommunityVersion
Puzzlebark#3421: anyone written a multiplexer mod?
Doctor Stupid#9197: you may need to install the .net sdk
Ecconia#4929: Ahh okay, DNSpy dies the `error MSB4236: The SDK 'Microsoft.NET.Sdk.WindowsDesktop' specified could not be found.` death... Uff
Ecconia#4929: Well... there are many good reasons to not code in C#. For example not finding the executable *sigh*
Moojuiceman#5661: Well presumably building creates some executable that you can find
Ecconia#4929: Building is not the problem, but how do I run it?
Moojuiceman#5661: Can you build it natively on linux? Build command uses dotnet and there's some level of that running on linux
Ecconia#4929: Spits files everywhere
Limón#7879: how?
Ecconia#4929: That corrupts my Linux... I rather not
Limón#7879: wine
Ecconia#4929: Is LogicWorld using MessagePack instead of SECCS as serializer now?? Confusion.
Ecconia#4929: But no clue how the hell I should/can get that running. <[newline]> Either projects GitHub Readme is incomprehensible to the point of vomiting.
cheese3660#8641: i like dnSpy much better
Limón#7879: it's very cool
Limón#7879: it is
Ecconia#4929: Thank you for the response. <[newline]> Apparently ILSpy in vscode is a very legit solution for doing this task 🙂 (Works for me!)
Ecconia#4929: I see. Guess I have to install vscode... <[newline]> Nvm that, it was installed - lel
Limón#7879: ilspy is for just reading
Limón#7879: dnSpy is for editing/reading
Limón#7879: dnSpy under wine is ok, ilspy vscode plugin is what I use most of the time
Moojuiceman#5661: <@!859806257774723102> is on linux and I think they use it too. They might be able to help if you have any trouble with it
Moojuiceman#5661: I think we all use dnSpy
Ecconia#4929: For some network sniffing I would need to look at the source-code of LogicWorld. <[newline]> However I am using Linux, and thus I do not know which decompiler to choose. <[newline]> Some of you have experience here, could you recommend me one? <[newline]> I tried ILSpy, but that thing is (besides that the UI looks like from the 80s), does not seem to compile at all and is horrible to use. (Maybe there are multiple versions of ILSpy). I take any tutorial/name whatsoever.
IsCoffeeTho#0001: fair enough
Moldytzu#4226: the main processor in the c64 is the MOS 6510 (it's binary compatible with the 6502)
Limón#7879: It seems like it
IsCoffeeTho#0001: its a really good processor for hobbyists
Biggycheese69420#4947: just a newer one made by a different company
Limón#7879: That's where I heard it
IsCoffeeTho#0001: absolutely
Biggycheese69420#4947: yes
Limón#7879: Is the 6502 the one in Ben Eater's videos?
IsCoffeeTho#0001: its a "Retro" processor
Biggycheese69420#4947: mos 6502 was used in the NES Commodore 64 and so many more.
IsCoffeeTho#0001: its the main Processor in the Commodore 64
Limón#7879: I feel like I've heard the name 6502 before
Limón#7879: Ah
IsCoffeeTho#0001: old cpu
IsCoffeeTho#0001: MOS 6502 (W65C02)
Limón#7879: What are you making?
IsCoffeeTho#0001: ok i got data reading to work
IsCoffeeTho#0001: 
IsCoffeeTho#0001: if there isn't one by next week ill get started on one
Limón#7879: But I have no clue where that went
Limón#7879: I assumed that's what it was
Limón#7879: I saw someone making a tool in godot
IsCoffeeTho#0001: 40 pins by hand :,(
Limón#7879: Just trial and error
Limón#7879: For making the pins ans stuff no
IsCoffeeTho#0001: is there any good tool to help make the components, cause i am struggling just slapping in numbers
IsCoffeeTho#0001: i was gonna say adding a SID chip would be a solution
IsCoffeeTho#0001: it should be fine
IsCoffeeTho#0001: if you get a sound library
IsCoffeeTho#0001: not that bad
Limón#7879: 🤔
Limón#7879: How hard would that be to code in
Doctor Stupid#9197: someone just needs to redesign this out in nand gates, good to go https://en.wikipedia.org/wiki/MOS_Technology_6581 😄 😄
cheese3660#8641: Maybe an 8 bit frequence range on a square wave sound, would be not as much logicCode as it is more clientCode
IsCoffeeTho#0001: processing sound kinda thing
IsCoffeeTho#0001: he's meaning to add VSTs and to trigger them
Limón#7879: It already has a folder for it
Limón#7879: Look at the base mod
Limón#7879: You already can
CrispyPin#1149: priorities <:thonk:818741466284556288>
IsCoffeeTho#0001: POG
Jimmy#8080: No more "hopefully", this merged a couple hours ago, c# mod loading is functional in 0.90.1 :)
Astrayo#0405: Like say hypothetically somebody managed to make a working 8-bit game, it'd be that much cooler if it actually had proper chiptune accompanying it. And just generally making some more musical machines could be pretty fun, and some nice chiptune sounds would be perfect for it.
Astrayo#0405: Oh I understand that, but I do feel like things such as the instruments open up a huge amount of options for creativity and more interesting builds and machines. And while I don't want to bash things too much, I don't think the existing sounds for the singers and drums do a very good job of it. I would absolutely adore it if they had famitracker type stuff though, some simple yet pleasant chiptune VSTs could go a *very* long ways and be quite the improvement.
IsCoffeeTho#0001: to be fair it is a circuit sim, but i do agree the singers and drums aren't the best sounding
Astrayo#0405: I would probably unironically spend more time with instruments than any other components if I could get whatever VSTs Dweller's Empty Path uses, that style would probably be perfect for the vibrancy this game tries to have. <[newline]> (seriously the existing instruments are dogwater if I'm being honest)
IsCoffeeTho#0001: that would be awesome
Astrayo#0405: Hopefully I'd be able to mod in instruments that don't sound like crappy MIDIs 😳
IsCoffeeTho#0001: we dont know what is going to change
IsCoffeeTho#0001: we are holding off from writing any more docs untill the update, bc modding is going to be supported (*hopefully*)
IsCoffeeTho#0001: its mostly the fact that i just got on writing, we do have a good idea about most of the LSX but CS is still being ripped into. id say we have 30%ish of the relevant CS
Michael#8718: Is there a lot of room in C# for optimization?  Better algorithms?  Cache coherency?
Jimmy#8080: We are not even close to done optimizing. Just you wait man, we're going to blow your fucking mind with how fast this game gets.
Moojuiceman#5661: I think most of it is client side unity stuff. All the actual simulation is server side. But with unity and so many objects there are things that pile up
JoshuaSpeedy#3545: Yeah, game is very optimized, but I'm definitely sure some more could be squeezed out of it
Moojuiceman#5661: And since it's still in active development it'll be a lot easier for them to improve stuff instead of modders trying to. It's difficult for us to do a lot at this point
Moojuiceman#5661: I think it's fairly optimised for what it is. Still early access after all, and there have been improvements already in dev log videos
JoshuaSpeedy#3545: Just generally what optifine does even without the extra menu options(game optimization)
Verlio_H#0201: world edit mod when
Moojuiceman#5661: The options menus are pretty substantial as is
Moojuiceman#5661: Not that I know of. What would one involve?
JoshuaSpeedy#3545: Is anyone working on a optifine type mod?
cheese3660#8641: you have to build it with antlr i think
Moojuiceman#5661: I see it in the obj folder. I think you should build it first then take another look
Moojuiceman#5661: I cloned the repo and it built for me? Where is that class referred to
oddron#8955: I looked at the code in the pipe01/LogicScript repository. I can't actually run it because it does not include the code for base classes such as `LogicScriptBaseVisitor`. That makes it *really hard* to experiment with the code or otherwise understand what it's doing
oddron#8955: Got it
Moojuiceman#5661: The repo has some recent commits though so it may have bugfixes that aren't in the game yet
Moojuiceman#5661: More or less yes
oddron#8955: So *in theory*, the code that pipe01 put on github would match the in-game code that reads lsx files?
oddron#8955: Ok
Moojuiceman#5661: Most of what we've done is work out how the modding system that's implemented works, so we can provide our mods to it in the right format to load
oddron#8955: That makes sense
oddron#8955: Got it
Moojuiceman#5661: No, pipe01 is a dev on the game
oddron#8955: Help me understand what you and the others have accomplished in the past week since release. Did someone extract code from a dll file and put a version of it on github?
Moojuiceman#5661: In theory. But it'll be a slightly old version in the game
oddron#8955: Is this the implementation? https://github.com/pipe01/LogicScript/tree/master/LogicScript
Moojuiceman#5661: But it's basically a custom text parser so good luck deciphering it
Moojuiceman#5661: It'll be somewhere in one of the dlls
oddron#8955: Where can I find the implementation?
Limón#7879: but the documentation is kinda eh
Limón#7879: quality
Limón#7879: which affects the documentation
Limón#7879: the implementation
oddron#8955: What is broken, the documentation? Or the implementation?
Limón#7879: most of it's broken
Limón#7879: poorly documented
oddron#8955: For LSX, it looks like it's already documented? https://github.com/pipe01/LogicScript/wiki/Syntax-reference
Moojuiceman#5661: Some of it is unknown, some of it is known by people who've been digging but it hasn't been written up by anyone
oddron#8955: For the LSX and CS language references, is the information "unknown", or is it just waiting for someone to collect it all in one place?
cheese3660#8641: Aight time to make my workflow 10x faster
Moojuiceman#5661: Once you have a project you can right click add existing item
Moojuiceman#5661: You can just make the project in the mod folder tbh
cheese3660#8641: (i.e. how do I make folders in visual studio?)
cheese3660#8641: That's a question, how would I set up a full VS workflow with the mod structure intact
Moojuiceman#5661: But Linux so no full vs
Moojuiceman#5661: That works great if it at least compiles. Limon was having syntax issues cause vscode couldn't properly warn
cheese3660#8641: thats about it
cheese3660#8641: I have errors piped to debug.log
IsCoffeeTho#0001: pretty much
Moojuiceman#5661: I think most people don't even have a compiler to check. They've been relying on the game to say "failed to compile scripts" and crash at main menu 😆
Doctor Stupid#9197: as written that's not the case so woops
Doctor Stupid#9197: that ctor as written won't work, sorry i was in a hurry - it needs to be a copy constructor, ~~it has to point to the same instance~~ the instance must be returnable / assianble back to the epparent
Moojuiceman#5661: Nah it's just a hangout for us cool kids
IsCoffeeTho#0001: oh shit yeah
cheese3660#8641: <#902235544946372688> is still a thread btw
Doctor Stupid#9197: no compiler in front of me so grain of salt and all that
Doctor Stupid#9197: so `InputPeg` is not sealed. if you derive from it, you could expose it as a public property.  <[newline]> ```cs <[newline]> public sealed class InputPegClusterProxy : Inputpeg <[newline]> { <[newline]>     private InputPeg _inputPeg; <[newline]>     public Cluster ClusterValue { get => this.Cluster; set => this.Cluster } <[newline]>     public InputPegClusterProxy(Inputpeg inputPeg) <[newline]>     { <[newline]>         _inputPeg = inputPeg; <[newline]>     } <[newline]> } <[newline]> //... <[newline]> var pegProxy = new InputPegClusterProxy(someInputPeg); <[newline]> pegProxy.Cluster = shenanigans; <[newline]> //someInputPeg cluster value mutated <[newline]> //... <[newline]> ```
IsCoffeeTho#0001: it fucken WORKED
IsCoffeeTho#0001: worked
IsCoffeeTho#0001: that
IsCoffeeTho#0001: hol up lemme try what you actually said
IsCoffeeTho#0001: it really is 5am cause i just misunderstood that
Moojuiceman#5661: Different type
Moojuiceman#5661: It switches to propertyInfo
IsCoffeeTho#0001: maybe not ig
IsCoffeeTho#0001: huh `'FieldInfo' does not contain a definition for 'GetProperty'`
IsCoffeeTho#0001: ill try that
Moojuiceman#5661: And you can check that for null too, just in case
Doctor Stupid#9197: man. if i had just found that folder instead of the other day one... shit. here's all the code i was looking for
Moojuiceman#5661: You might want getProperty instead of getField
Moojuiceman#5661: Yeah a lot of stuff is only server side. Like the whole circuit simulation logic
IsCoffeeTho#0001: thats unfortunate
Doctor Stupid#9197: 🤦‍♂️
Doctor Stupid#9197: oh shit i had missed those assemblies this entire time
IsCoffeeTho#0001: all inputs
IsCoffeeTho#0001: i have it so that peg 1 and 2 are phasic linked and the 0th is meant to control the "flow"
Moojuiceman#5661: Are they all inputs though? Or is it 1 input 2 outputs
IsCoffeeTho#0001: yeah
Moojuiceman#5661: Under the server folder in LW
Moojuiceman#5661: In server.dll I think
Doctor Stupid#9197: i am not seeing LogicWorld.Server.Circuitry.InputPeg anywhere 😦
Moojuiceman#5661: Because inputs[1] is the 2nd one
IsCoffeeTho#0001: it has 3
Moojuiceman#5661: Does your component have 2 pegs or only 1?
IsCoffeeTho#0001: sadly its still throwing reference not instance of an object
Moojuiceman#5661: Yeah, and the ?. is basically "tell me what's in there but don't cry if it's nothing"
cheese3660#8641: so GetValue returns an optional
cheese3660#8641: ahh okii
IsCoffeeTho#0001: logger comes with logic component
cheese3660#8641: yeah it returns an optional
cheese3660#8641: ``` <[newline]> public abstract object? GetValue (object? obj); <[newline]> ```
Moojuiceman#5661: If you're adapting from Cheese's repo then you should already have access to the logger
Moojuiceman#5661: Try GetValue(base.Inputs[1])**?**.ToString());
cheese3660#8641: Logger?
IsCoffeeTho#0001: ```cs <[newline]> Type typeInQuestion = typeof(LogicWorld.Server.Circuitry.InputPeg); <[newline]> FieldInfo field = typeInQuestion.GetField("Cluster", BindingFlags.NonPublic | BindingFlags.Instance); Logger.Info(field.GetValue(base.Inputs[1]).ToString());```tried it and its still throwing not referencing an object
Moojuiceman#5661: I'm guessing you're doing it because some field is private and you can't access it normally? So pass in the object you would be calling .fieldname on
Moojuiceman#5661: The one you want to read the data from
cheese3660#8641: it should be field.GetValue(base.Inputs[...]) or something like that
Doctor Stupid#9197: pass an instnace of whatever type is reflected
Moojuiceman#5661: Instead of passing null, pass an object
IsCoffeeTho#0001: what would be the syntax for it
Moojuiceman#5661: Once you have one, you can pull stuff from it
Moojuiceman#5661: You're looking at a blueprint for something that doesn't exist
Doctor Stupid#9197: `Logger.Info(field.GetValue(null).ToString());` is like saying `A a = null; a.Value.ToString();`
Moojuiceman#5661: The field info is about what fields the type has. But only an actual instance of the type has any data
IsCoffeeTho#0001: but it still just pops out with not referencing an object
Moojuiceman#5661: And it can still come out null
Moojuiceman#5661: You need to pass in an instance of the type, and get value gets you the value in that object
Doctor Stupid#9197: you have to have an instance to call the relfection methods against
Moojuiceman#5661: Value is null
Moojuiceman#5661: No, it's the field.GetValue.ToString
IsCoffeeTho#0001: right
cheese3660#8641: it shouldn't be the type InputPeg, you put an instance of InputPeg
IsCoffeeTho#0001: so instead of the namespace i just put the object?
cheese3660#8641: Type typeInQuestion = typeof(LogicWorld.Server.Circuitry.InputPeg); here
IsCoffeeTho#0001: im stuck on <[newline]> `Object reference not set to an instance of an object.` <[newline]>  <[newline]> where do i even reference AN object for it to work? <[newline]> ```cs <[newline]> Type typeInQuestion = typeof(LogicWorld.Server.Circuitry.InputPeg); <[newline]> FieldInfo field = typeInQuestion.GetField("Cluster", BindingFlags.NonPublic | BindingFlags.Instance);    Logger.Info(field.GetValue(null).ToString()); <[newline]> ```
cheese3660#8641: https://github.com/cheese3660/CheeseUtilMod
cheese3660#8641: yes
Doctor Stupid#9197: is there a github with the relevant code up?
Moojuiceman#5661: I managed to get somewhere by copying the existing and menu GameObject and replacing the component, but it wouldn't fully work as the component was expecting an object of type and gate, not ram
Moojuiceman#5661: She's got the logic for it and the variant generator, problem is you can't select a variant so you only get the first one
Doctor Stupid#9197: ahh
Moojuiceman#5661: You know the variant and gate where you can set how many inputs? We want that on Cheeses ram
cheese3660#8641: its not actually the input slider thats the problem, its what led us to the problem
Doctor Stupid#9197: whats up with the input slider ?
Moojuiceman#5661: That was about peg linking
Doctor Stupid#9197: lol
Moojuiceman#5661: Oh the internal thing was a different issue, not what I'm working on
Doctor Stupid#9197: not seeing anything marked internal
Doctor Stupid#9197: one moment
Moojuiceman#5661: If you're up for it, the type is LogicUI.MenuParts.InputSlider in LogicUI.dll
Moojuiceman#5661: Rather than everyone needing to paste a serialiser in their mods
Moojuiceman#5661: Plus in terms of getting something that everyone can use in their mods I think there should be a way that's somewhat accepted by the game. Using succ and the configurables system
Moojuiceman#5661: I didn't, partially because of effort. I started with trying the SECCS stuff that's in the game, wouldn't work for some types. Tried basic binaryformatter and it complained about no [serialisable]
Doctor Stupid#9197: did you try implementing a custom serializer? easier then its sounds and allows for shenanigans
Moojuiceman#5661: Already tried copying, + serialising and de to new object. Neither particularly helped
Moojuiceman#5661: Yeah I'm aware. I was more interested in the values though, since end goal is being able to create our own objects with the same values so our menus work the same as the built in ones
Doctor Stupid#9197: that will only grab fields... for what its worth there are more member types possible - https://docs.microsoft.com/en-us/dotnet/api/system.type.getmembers?view=net-5.0
Moojuiceman#5661: Not amazing, but did what I needed for seeing unity scene stuff
Moojuiceman#5661: 
Doctor Stupid#9197: thats what i get for jumping in late to the conversation! 😄
Moojuiceman#5661: Nothing fancy, just recursive find and access on fields, stopping at System
Moojuiceman#5661: Yeah I just did a simple version of that, over in the CS thread
Doctor Stupid#9197: few years ago i wrote code that took any object, reflected, and spit out a 'accsor name' / value dictionary. maybe something like that would work?
cheese3660#8641: make sure to import System.Reflection
Moojuiceman#5661: Sure. That's what I was using to get the GO stuff
cheese3660#8641: it should work with private/protected/internal
IsCoffeeTho#0001: ill try it
cheese3660#8641: something like <[newline]> ```cs <[newline]> Type typeInQuestion = typeof(TypeHidingTheField); <[newline]> FieldInfo field = typeInQuestion.GetField("FieldName", BindingFlags.NonPublic | BindingFlags.Instance); <[newline]> field.SetValue(instanceOfObject, newValue); <[newline]> ```
Moojuiceman#5661: Good for us though
Moojuiceman#5661: C# almost makes it too easy to fuck around with accessing things
cheese3660#8641: can Type.GetField(...) work?
Doctor Stupid#9197: it *should* be possible to implement an expando object that will ignore `internal` and always allow the call through
IsCoffeeTho#0001: i really do appreciate it
IsCoffeeTho#0001: thank you for the suggestion though
Moojuiceman#5661: Shhh don't tell that to everyone
Doctor Stupid#9197: to be clear `internal` is __*not*__  a security mechanism
Moojuiceman#5661: "Yes you should totally let me in. Because I say so"
IsCoffeeTho#0001: the `cheat` way
Moojuiceman#5661: *Bit* of a security oversight if not
IsCoffeeTho#0001: well
IsCoffeeTho#0001: the long way
Doctor Stupid#9197: oh yes, its the other way around isnt it
Moojuiceman#5661: Or rather you may as well just edit to make your changes
Moojuiceman#5661: You'd have to edit the main assembly, so no
IsCoffeeTho#0001: holup
IsCoffeeTho#0001: i would have to learn it rq
Doctor Stupid#9197: would `InternalsVisibleToAttribute` help?
cheese3660#8641: MCC ~~minecraft champonship~~
Moojuiceman#5661: Moojuiceman Cheese Coffer is an odd band name
Limón#7879: 
IsCoffeeTho#0001: ill find a way around but phasics is not it.
cheese3660#8641: use crazy reflection magic then
Moojuiceman#5661: I mean, that doesn't *have* to stop you
IsCoffeeTho#0001: fuck
IsCoffeeTho#0001: as well as secret link, they are keyworded `internal`
IsCoffeeTho#0001: figured out that it is impossible to edit the phasic link
IsCoffeeTho#0001: true true
Moojuiceman#5661: There's a lot of chat in the CS thread so if you need pointers there might be something in there already. If not just ask since we're all picking up different bits of info
IsCoffeeTho#0001: its been a bit since doing c# so i am relearning stuff
Limón#7879: That would make more sense
Limón#7879: Ah
Moojuiceman#5661: I think they mean looking at the dlls to know what's important in the documentation
Limón#7879: You usually don't need to edit dlls
IsCoffeeTho#0001: i only just got to ripping into the DLL so i can actually kinda understand what to edit and what to leave
IsCoffeeTho#0001: nah its all good, i can keep editing
Limón#7879: It looks very good though
Limón#7879: You didn't have to pr rn
IsCoffeeTho#0001: yeah i was mid way doing the polishing
Limón#7879: But I'll fix then when I get home
Limón#7879: I see some minor things
Limón#7879: Based
Limón#7879: Omg you did CS aswell
Limón#7879: Merged
IsCoffeeTho#0001: did just now
IsCoffeeTho#0001: not yet
Limón#7879: I don't see any
Limón#7879: Did you make a pr?
IsCoffeeTho#0001: all g
Limón#7879: I'll be updating it some more when I get home
Limón#7879: Fork moment
IsCoffeeTho#0001: im sure
IsCoffeeTho#0001: it wont be that bad
Moojuiceman#5661: Someone's gonna have to rewrite basically everything about the loader once the patch comes out. Bagsy not it (though I'll re-describe the format if needed)
IsCoffeeTho#0001: this has the most recent details on how to get started
IsCoffeeTho#0001: https://github.com/IsCoffeeTho/LW-Modding
Moojuiceman#5661: Plus there's a <#902235544946372688> thread where we hang out if you have questions
Moojuiceman#5661: <@!350975527324221451> check the pinned messages, Limon and Cheese have put together some tutorials and general docs
RyanT#1426: I really wanna make C# mods
RyanT#1426: HOW, PLEASE TELL ME
IsCoffeeTho#0001: maybe
Moojuiceman#5661: Or you can inherit from peg and override it so the phasic link is inverted
Moojuiceman#5661: I'd say dig into what the phasic system does to transfer states between pegs. Might be able to make it do what you want
IsCoffeeTho#0001: but its too hard to know
IsCoffeeTho#0001: maybe addresses are the answer
IsCoffeeTho#0001: so pretty much that ^^
IsCoffeeTho#0001: and then added the oneway
IsCoffeeTho#0001: i basically copied the "Relay" logic and inverted it
cheese3660#8641: This is the example code I have in CS-InputPeg.md <[newline]> ```cs <[newline]> protected override void DoLogicUpdate() { <[newline]>   if (base.Inputs[1].On) { <[newline]>     base.Inputs[0].AddOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>   } else { <[newline]>     base.Inputs[0].RemoveOneWayPhasicLinkTo(base.Inputs[2]); <[newline]>   } <[newline]> } <[newline]> ```
IsCoffeeTho#0001: hense why i am digging further
IsCoffeeTho#0001: i already have
IsCoffeeTho#0001: thats exactly what i have
Moojuiceman#5661: Unless you start messing with the secret/phasic links system
cheese3660#8641: Its something like (pseudocode) <[newline]> ```py <[newline]> if TOP_INPUT_ON: <[newline]>   create_one_way_link(BACK_INPUT,FRONT_INPUT) <[newline]> else: <[newline]>   destroy_link(BACK_INPUT,FRONT_INPUT) <[newline]> ```
Moojuiceman#5661: Inputs don't really "write" values out, so I don't think it'll work the way you want
IsCoffeeTho#0001: im trying to manipulate the input pegs to basically be output pegs
IsCoffeeTho#0001: always on unless the other input is on
Moojuiceman#5661: What do you mean by inverted in that context then?
IsCoffeeTho#0001: and its readonly for the most part
IsCoffeeTho#0001: but im only workin with inputs
Moojuiceman#5661: You're in full control of the in/out logic in c#. So it's open season on making it do what you want
cheese3660#8641: in the docs I was writing
IsCoffeeTho#0001: where?
cheese3660#8641: Is it the example controlled buffer code I wrote?
IsCoffeeTho#0001: yurt
cheese3660#8641: c#?
IsCoffeeTho#0001: might do a bit more digging to see if i can get an input pin to be inverted on its own
IsCoffeeTho#0001: tiniest demultiplexer
IsCoffeeTho#0001: made these tiny transistor type things <[newline]>  <[newline]> both are one way in the direction of protrusion (the extended part is outward) <[newline]>  <[newline]> red one is inverted block
IsCoffeeTho#0001: understood
cheese3660#8641: Since my markdown files are already in Limóns main one, id suggest that one
IsCoffeeTho#0001: i was wondering that
Limón#7879: There is quite a lot of them
Limón#7879: Which repository
IsCoffeeTho#0001: fair enough
cheese3660#8641: Then fork the repository and do such then make a pull request
IsCoffeeTho#0001: i would love to help clean up your markdown files
cheese3660#8641: I'm gonna have to write something on how modded UI is a pain in the behind rn
Limón#7879: Of things I find
Limón#7879: And making a write up
Limón#7879: I plan on doing some this weekend when I have time
Limón#7879: Cheese and Moojuice have gone through a lot
Limón#7879: I have barely dug into the code
Limón#7879: A lot of people
cheese3660#8641: Not just limon
IsCoffeeTho#0001: which is exactly what Limón here has done
Limón#7879: it just happens sometimes you need to read them to learn how to do something
Limón#7879: there is no need to modify dlls
Limón#7879: YES
Jimmy#8080: Thank <@!128545421579517952> for that, as soon as he saw y'all were trying to load csharp files he got right to work with the fix 😄
ieee 802.11ac#6337: WE'RE NOT DEAD IN THE WATER WOOOOOOO
cheese3660#8641: theres a way to mod the game with C# without modding dlls
cheese3660#8641: not true
Michael#8718: THanks
Jimmy#8080: Fix for custom script loading will arrive on friday
ieee 802.11ac#6337: fortunately/unfortunately it's the only way to mod the game if you don't want to modify dlls
ieee 802.11ac#6337: a custom scripting language pipe01 (?) threw together so that modding doesn't require c# knowledge
Michael#8718: What is this lsx thing?
Broyojo#2667: 🇫
Dragon Lord#6944: **F**
Limón#7879: or a
Limón#7879: it can also do e
Jimmy#8080: f
musashi#0210: F
Broyojo#2667: F
Verlio_H#0201: f
Limón#7879: 
Moojuiceman#5661: Technically you're already there. You just can't edit the component to select more than the first variant
cheese3660#8641: I'm close ... but I have to leave for work soon
Limón#7879: 1 bit adder can turn into a 32 bit adder
Limón#7879: And when someone figures out variants you can make it scalable
Limón#7879: It's more expandable
Control#8680: Why
Control#8680: But
Limón#7879: Just add up all pegs correctly and then covert to binary
Limón#7879: I already gave a solution
cheese3660#8641: it wouldn't be too hard
Limón#7879: Making a full adder with C# modding sounds great
Limón#7879: No
Limón#7879: Mo
Control#8680: So making a full adder with a full adder sounds great
Control#8680: Yes
Limón#7879: That's I assumed thats what you/whoever are/is making
Control#8680: A full adder
Control#8680: Thats just
Limón#7879: I mean if you can convert numbers to binary you could add up all the pegs
oddron#8955: Excellent
Control#8680: both are right
Control#8680: you have SoP i have PoS
oddron#8955: So I'm not wrong?
Moojuiceman#5661: I think they are equivalent, because each input appears in 2 things, so 2 have to be on
oddron#8955: I think there are two different, but equivalent, expressions for the carry
oddron#8955: Are you sure I'm wrong?
Moojuiceman#5661: I guess a+b+c != 2 for the output
Moojuiceman#5661: Oh the carry, right
Control#8680: >= 2
Control#8680: Uh
Moojuiceman#5661: a+b+c == 2
Control#8680: Since or gates are just pegs
Control#8680: Yup yup
Limón#7879: ```cc <[newline]> bool carry = (a || b) && (a || c) && (b || c)```
oddron#8955: And I have work
Control#8680: Lol
oddron#8955: Too early in the morning
oddron#8955: 🤣
Control#8680: lmao get rekt
Control#8680: Carry = (a or b) and (a or c) and (b or c)
Limón#7879: See the pinned message
Limón#7879: I like how the description is
Limón#7879: 
Limón#7879: Someone made ram
Limón#7879: You could do that
Moojuiceman#5661: Or yknow, a full 32 bit cpu implementation
Moojuiceman#5661: Well yeah...
oddron#8955: But there's no reason we couldn't just create a "full adder" component with 3 input pins and two output pins
Moojuiceman#5661: Would a 3 input xnor work for it?
Limón#7879: Lsx = Hot Reload <[newline]> Succ & C# = Game restart
oddron#8955: Full adder: Sum = 3 input XOR, Carry = AB or AC or BC <[newline]> The carry is *not* simply the AND of the 3 inputs
LolzDEV#3402: okay thx
Moojuiceman#5661: *In theory* we could adapt a loader to unload and reload the assembly on demand, but hasn't been done yet
Moojuiceman#5661: Nope. That gets compiled on mod load
LolzDEV#3402: what about cs?
Moojuiceman#5661: Although I had issues with it crashing because the editor was accessing the file and LW couldn't
Moojuiceman#5661: Yeah there's a listener on the files. If you change them you can see the behaviour change instantly
LolzDEV#3402: so lsx is loaded in realtime? cool
Moojuiceman#5661: If you're changing lsx, no. Anything else, yes (at least as far as we know)
LolzDEV#3402: do I need to restart the game every time I modify a mod?
Control#8680: Thx
Limón#7879: v90.1 best update
Limón#7879: Ping pong
IsCoffeeTho#0001: pinged you so you can find it easier
IsCoffeeTho#0001: this is the one <@!226691820225036289>
IsCoffeeTho#0001: there was a problem with it, i had a space in the incorrect spot
IsCoffeeTho#0001: all g
Control#8680: I gtg to uni rn soll ill test it in 6h maybe?
IsCoffeeTho#0001: if you have any problems with the game please do tell me
IsCoffeeTho#0001: this should just be the three pronged XOR
IsCoffeeTho#0001: <@!226691820225036289> done, sorry i took a bit
IsCoffeeTho#0001: you all good dude 👍
IsCoffeeTho#0001: yeah that makes sense.
Moojuiceman#5661: Limon and Cheese are the other 2 that have done some doc'ing currently. Check the pins for links to Limon's github
Moojuiceman#5661: Yeah sorry, didn't mean it like that. It's just that all this modding stuff is still pretty new, and apparently I'm the one who's done the most digging so far. So if people are running into issues they might already have a solution (albeit poorly documented)
IsCoffeeTho#0001: thats all g though
IsCoffeeTho#0001: right, that makes sense. it's just that last comment sounded like a "don't attempt a code challenge i may be working on" type thing
Moojuiceman#5661: I don't get the reference, sorry. If you mean I'm coming across badly then I don't mean to. Not trying to dissuade you from anything. Meant more as a "what problem are you facing, cause we might already know how to deal with it"
IsCoffeeTho#0001: yo <@!244503493996445697> i am getting "Kurtis" vibes from you, whats up?
Moojuiceman#5661: Since there's clearly some link between the server side simulation logic code, and updating the gameobjects to change colour of pegs etc, in theory you should be able to do gameobject stuff from inside your component code. But the how is TBD
Moojuiceman#5661: Or if the loader loads a dll, then that dll could have dependencies on the unity stuff
Moojuiceman#5661: If you can get a handle to the unity engine elements (probably reflection since you're only writing cs so no dll linking), then you can do that
LolzDEV#3402: what if I want to add gui elements?
Moojuiceman#5661: The only tricky thing is ordering it so things are loaded by the time other things call them
Moojuiceman#5661: Define "only"? You can basically run any code
LolzDEV#3402: currently mods can only create components right?
Moojuiceman#5661: Once the fix is in each mod will kind of need its own "loader" in that you have to define a metamod. And in there you can do any initialising for the mod. Since component types only get called when they're placed/updating
Moojuiceman#5661: If people want to try it then go ahead obvs. Just think you'd end up wasting time creating things that already have existing systems in place, and you'd get more out of your time to write gameplay mods
LolzDEV#3402: I was thinking about that yesterday
Moojuiceman#5661: Unless you mean like a mod downloader, but then you'd need a centralised place to store and manage them. Good luck with that if so
IsCoffeeTho#0001: woah man, i just i was tempted to write one
Moojuiceman#5661: Why would they need one though
IsCoffeeTho#0001: for the users
Moojuiceman#5661: For what purpose? The game has a built in modloader. And we have a "loader" currently which is just there to workaround an issue that supposedly a fix is coming for
IsCoffeeTho#0001: pretty tempted to make a mod loader
Control#8680: lol
IsCoffeeTho#0001: i would have been in school this year except coding is way more fun than remembering that carbon has a hydrogen kink
IsCoffeeTho#0001: most of my github is school work
LolzDEV#3402: I'm still at school lol
DADp#7461: wooo! school!!!!
Control#8680: i mean
IsCoffeeTho#0001: yeah i am just now getting home from studying
Control#8680: lmao
DADp#7461: yes i can let me get my computer pulled out from my blankets
Control#8680: haha timezones
IsCoffeeTho#0001: fair enough
DADp#7461: im in bed at 3am
IsCoffeeTho#0001: can you?
DADp#7461: c# it rn
Control#8680: lol yeah
IsCoffeeTho#0001: phrasing is hard when circuits are involved
IsCoffeeTho#0001: as in smart
IsCoffeeTho#0001: oh shit, thats huge
Control#8680: also full adders would then actually just be 2 gates, one 3 input AND, one 3 input XOR
IsCoffeeTho#0001: ill ping you when i get something made 👍🏽
Control#8680: wonderful
IsCoffeeTho#0001: aight bet
Control#8680: yeah
IsCoffeeTho#0001: tick delay
IsCoffeeTho#0001: oh yeah
Control#8680: lol
Control#8680: time
Control#8680: wha
Control#8680: and not enough space
IsCoffeeTho#0001: not enough room?
Control#8680: yeh ik
IsCoffeeTho#0001: for the mean time you can use an XOR into another XOR with the output of the first going into the input a of the second
Control#8680: 
IsCoffeeTho#0001: all g
Control#8680: omg ty so much
IsCoffeeTho#0001: ill be an hour ish
IsCoffeeTho#0001: im omw home, ill get it done unless someone beats me to it
Control#8680: yeah
IsCoffeeTho#0001: oh you want a mod made?
Control#8680: this is modding, right?
IsCoffeeTho#0001: i am not following
Control#8680: is what i mean :P
Control#8680: i need a 3 peg xor
Control#8680: but like
IsCoffeeTho#0001: `if (in[0] != in[1]) != in[2']`
Control#8680: that would be my preferred extension, yes
IsCoffeeTho#0001: (A xor B) xor C
Control#8680: im desperate
Control#8680: please
Control#8680: i need a 3 input xor
Control#8680: guys
IsCoffeeTho#0001: VERY
DADp#7461: just have to wait for it
DADp#7461: happy that they fixed mod loading
IsCoffeeTho#0001: very tempting to make a wikidoc for it
IsCoffeeTho#0001: POG
DADp#7461: game changing
DADp#7461: 🤯
DADp#7461: and it will ignore it
DADp#7461: you can put a "ignore" file in the mod
DADp#7461: no just
IsCoffeeTho#0001: is there homebrew docs on it?
DADp#7461: well only one
DADp#7461: mod scructure has a few things that was hidden
DADp#7461: have you seen the developments on it
IsCoffeeTho#0001: i really damn hope so
DADp#7461: i bet memory bigger than 256 bits is possible now
IsCoffeeTho#0001: i merged it as soon as i saw, thank you soo much dude
DADp#7461: 💃
IsCoffeeTho#0001: oh hell yeah
oddron#8955: <@!274012313785466881> I sent a pull request for the multiplexer and demultiplexer
DADp#7461: are you going to try the c#?
oddron#8955: It's better to fix naming errors as early as possible to minimize broken builds. I am willing to attempt to add a multiplexer (as described in Wikipedia) to the mod, but I can't do that without changing the name of the mislabeled demultiplexer that's already there.
IsCoffeeTho#0001: when i am home next, i will definitely
oddron#8955: Also the "multiplexer" component is technically a "demultiplexer". See https://en.wikipedia.org/wiki/Multiplexer
oddron#8955: <@!274012313785466881> In the documentation for the LWCommunityVersion mod, could you please edit the pictures to label the individual pins? This would be especially useful for the chips. Thank you
Nik#1011: well maybe not everything was 1 thread in TUNG, I don't know. but too many things were on the same thread that's for sure
Nik#1011: oh sorry, the game utilizes multiple threads. especially compared to TUNG where there was no server and literally everything ran on 1 thread and the world backing up automatically would cause the game to lock up until it was done lol
Vekenti#0001: The game is also quite early development.. it's in the first open access release so I'm sure everything is going to get optimized and fixed in time
circuitgamer77#0377: Not arguing, just not sure what you were referring to.
circuitgamer77#0377: What does not?  The running on a single thread, or the improving performance?
Saltypretzel#0321: Yeah multi thread optimization is very hard to make work right
Nik#1011: it does not
circuitgamer77#0377: I'm pretty sure the whole game runs on a single thread, including cloning, which I think could be multithreaded to improve performance.
Nik#1011: oh ye idk if threading is the issue with that but it do sure be laggy
circuitgamer77#0377: The simulation is running fine, I was thinking the cloning/rendering proccess.
Nik#1011: idk if that's what you were referring to exactly, but figured I'd give that info
Nik#1011: Jimmy has talked in the past how he's tried multi-threading the circuit simulation code without seeing any benefits from it unfortunately
Dragon Lord#6944: when you use the wrong method but still get the right answer
circuitgamer77#0377: For whatever reason, removing anything past the 4th carry line does not fix it.  Somehow the bug carried through 3 adders but not 4.
circuitgamer77#0377: Filesize...
circuitgamer77#0377: Would send a clip, but I don't know where to put it for discord...
circuitgamer77#0377: It definitely relies on other components/connections besides the relay itself.  It reliably happens in my divider, so I'm messing with that, and if I remove any of the first 3 carry lines (at least, haven't tested besides that), the first adder no longer bugs.  As soon as the whole thing is connected, it bugs again.
circuitgamer77#0377: I'm trying to find the exact circumstances in-game, but it's really hard to reproduce reliably...  But yes, that's my current thought.
Dragon Lord#6944: ohhhh... wait... so it *could* be polar if it's sub-tick dependant... like, if the update order within a relay is 'source gate drain' instead of 'source drain gate' that could cause something similar...
circuitgamer77#0377: I can't reliably reproduce it though...
circuitgamer77#0377: I'm wondering if the signal update order matters.  My current thought is that the function that connects the two pins in a relay can be run after whatever function turned on one of the two pins, which could possibly mean that the signal does not actually get passed through the connection created by the relay even though it exists.
circuitgamer77#0377: Ive had it stay on when the signal switches off in the same tick too.
circuitgamer77#0377: I could see that...  I haven't found anything so far that says the connection is made before the signal progresses.
Dragon Lord#6944: wait... every time i've seen it happen has been when both inputs turn on in the same tick... could that be part of it?
DADp#7461: c# modding is out, check pins
circuitgamer77#0377: Which sounds like it could exist on other components as well.
circuitgamer77#0377: I'm still trying to track down the relay bug...
circuitgamer77#0377: I have no experience with modding yet, so seeing how the system works seems like a good starting point.
circuitgamer77#0377: I'm going to explore the files later, to learn how it works :)
Limón#7879: cloning/placing can be optimized
circuitgamer77#0377: I could be very wrong, but I figured I'd share the idea.
circuitgamer77#0377: The simulation wouldn't change, just the actions of cloning/placing, and maybe rendering...
Limón#7879: I mean calculating things out of sync seems like a real problem
circuitgamer77#0377: At the moment I don't see why those couldn't be multithreaded...
Limón#7879: or something
Limón#7879: instead of 5 ticks
circuitgamer77#0377: Currently the only things that are slow for me are cloning and placing cloned objects...
Limón#7879: is calculating a whole circuit in one tick
Limón#7879: the only thing I would see being a performance mod
circuitgamer77#0377: Agreed
Limón#7879: I feel like it would be a lot of issues
circuitgamer77#0377: I have no clue how it would work, but it should be possible...
circuitgamer77#0377: Anyone think someone will make a multithreading mod for performance?
Limón#7879: 👍
Moojuiceman#5661: Just tried putting it in the server gamedata out of curiosity and it works fine. So as long as every player has the same mods it would probably work
Limón#7879: It's just gonna become a standard
Limón#7879: And hopefully if everyone else does too
Limón#7879: I am just gonna use the "standard" you use
Moojuiceman#5661: Yeah, need to make an example. Or a full "agreed standard"
Limón#7879: So do you deem it safe to release?
Moojuiceman#5661: Same here
Limón#7879: It's the components
Limón#7879: It's not the code that crashes it
Moojuiceman#5661: I think even lsx ones crash it the exact same way, and those are somewhat accepted by modders
Limón#7879: Yeah I was about to say
Moojuiceman#5661: But that's what private ones are for
Moojuiceman#5661: Well it crashes the server, so anyone who wants to be a dick could join random ones
Limón#7879: The only thing you could do is crash the server
Limón#7879: If it doesn't execute code or anything
Limón#7879: Is there any other security issues to worry about
Moojuiceman#5661: It's a string to number, then dictionary lookup, so should be fine
Limón#7879: I feel like that would be very hard
Limón#7879: I doubt you could
Moojuiceman#5661: And if you can then fair game imo
Moojuiceman#5661: Unless you can get an RCE exploint in a uint16 I doubt it
Limón#7879: Does it execute any code in the modded data and crashes
Moojuiceman#5661: It doesn't copy the mod code, and it doesn't run commands as such. But it does do a lookup with modded data and crashes
Limón#7879: I feel like it would be very hard to do
Limón#7879: Well if the server never downloads anything or executes commands from un"whitelisted" clients
Moojuiceman#5661: I think it was literally there just to open zoom:// links too....
Moojuiceman#5661: I know Zoom was doing that on Mac, hence massive scandal
Moojuiceman#5661: Probably. And it being an AV it's of course elevated (and basically removal proof)
Doctor Stupid#9197: shit wasn't there an antivirus a few years ago that was running a local server open to the internet that could do rce?
Moojuiceman#5661: Otherwise there'd be no CVE db
Limón#7879: That is true
Moojuiceman#5661: People miss things
Limón#7879: I would trust that
Limón#7879: I feel like if a dev told us there is no way
Moojuiceman#5661: Not sure there's 0 RCE possibility on the server in general, but it doesn't happen from this
Moojuiceman#5661: Security update, it causes exceptions on the server and you then can't connect anything you place (which you can do ignoring placing restrictions)
Moojuiceman#5661: Unless I want to make my thing open zips and place things at runtime, then it would be a full loader. But that's effort on my part
Limón#7879: Could be made
Limón#7879: Uninstall script/install script
Moojuiceman#5661: IDK we can figure out more from here
Moojuiceman#5661: Delete items in both places basically
oddron#8955: With auto merge, how will players remove a mod?
Limón#7879: Sounds good
Moojuiceman#5661: But if people used a standard then folders would auto merge
Moojuiceman#5661: It's more like number of mods * 2, with some manual file placing
Limón#7879: Since having 10 folders is not fun
Limón#7879: I'm just gonna use the "standard" you are using
Limón#7879: So standards
Moojuiceman#5661: Also if people want to distribute things using this way there should be consensus between mod devs, or people will have many many folders
Limón#7879: Anyway is an improvement tbh
Limón#7879: It just works
Moojuiceman#5661: Full disclosure my way isn't really ideal, and definitely not the intended way for c# mods to be loaded given the docs we have. But it works
Limón#7879: That would be nice
Doctor Stupid#9197: once theres some examples to work from (go lazyness woo) the first thing I want to try to get working is a text panel based integration of https://github.com/sklivvz/z80
Moojuiceman#5661: Seems to be c# both sides, although the server dll also has some PE
Moojuiceman#5661: That's lua to c, probably not applicable here at least
oddron#8955: FYI : https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-11615
Limón#7879: And personally I am really excited for C# modding
Limón#7879: That would open the floodgate
Limón#7879: You should make an example C# mod <@244503493996445697> on github maybe now that we know
pipe01#7194: Yeah of course, if we do add it it would be only for mods already on logicworld.net, and with a big danger popup on the client
Limón#7879: Sounds like C# modding is "safe"
Doctor Stupid#9197: better trust your server admins 🙂
Moojuiceman#5661: And that should probably be some kind of "here's a link to this maintained mod hosting site" so the client dl's it themselves
pipe01#7194: If we add the server -> client mod download then it would be, but that's still far out
Limón#7879: Sounds like it
Limón#7879: I am guessing yes
Limón#7879: So does this mean RCE is not possible
pipe01#7194: The client cannot and will never be able to send mods to the server, but in the future we *may* make it able for servers to send mods to clients
Moojuiceman#5661: Reverse for me then. Started with C++ in the hopes of game dev, moved over to unity. Then got a job with that c# experience
Doctor Stupid#9197: ive been working in c# for like 15+ years its just mostly full-stack business websites, know the ins and outs of c# and .net like the back of my hand..... but unity and gamedev is such a different animal
Moojuiceman#5661: More like "the IT guy" who does a bit of everything
Moojuiceman#5661: I did plenty of digging in c# and a bit of coding, but I'm definitely not a dev by trade
Moojuiceman#5661: Eh. I started as level 2 support for a c# web app. We got bought out, spent years moving clients over to their stuff which is java
Doctor Stupid#9197: its a nice distraction from boring line of business c# coding. hats off to you devops folks, i sure as heck don't want to be doing that work 😄
Limón#7879: Barely any C#
Limón#7879: I have only experience in like Rust and Pyrhon
Moojuiceman#5661: C# I'm way more experienced with, by years
Moojuiceman#5661: But it's better than doing my DevOps job which is mostly around groovy and bash
Moojuiceman#5661: Or potential undiagnosed ADHD
Limón#7879: You have determination
Moojuiceman#5661: Just digging, editing for logging, and testing
Limón#7879: I feel like a lot of what you did was digging through dlls
Moojuiceman#5661: 2 I think
Limón#7879: So like a day
Moojuiceman#5661: I posted that message right after I confirmed it worked fully vanilla. So from when I joined here till now
Limón#7879: How long did it take you to find the correct format
Limón#7879: Networking 😔
Moojuiceman#5661: Unless you're on the recieving end
Limón#7879: Fun
Moojuiceman#5661: Or distributed denial being ddos
Moojuiceman#5661: Yep
Limón#7879: Is denial of service what DOS stands for
Moojuiceman#5661: Like arbitrary code execution, meaning you can do anything, only remote
Limón#7879: Sounds fun
Moojuiceman#5661: Remote code execution
Limón#7879: RCE stands for?
Moojuiceman#5661: If it crashes the server that's not great, but it's only denial of service and not RCE
Limón#7879: That would be best case
Moojuiceman#5661: If I find anything I'll let him know. Hopefully it's just going to be client side
Limón#7879: If there is security risk you should wait til v90.1 for releasing on how bc I'm pretty sure that's when Jimmy is releasing better servers and bug fixes
Moojuiceman#5661: Cause if I can connect to a server on another machine and write a file, that's bad
Moojuiceman#5661: I plan to, with a VM
Limón#7879: You should setup a test server and do some testing
Limón#7879: No clue
Moojuiceman#5661: Does it crash with a component type lookup perchance
Doctor Stupid#9197: yep thought has crossed my mind
Limón#7879: Because I don't know exactly everything
Limón#7879: Take that with a grain of salt
Moojuiceman#5661: Testing won't stop people abusing it, but at least they'd have to figure out out on their own
Limón#7879: Ans that's why it crashes
Limón#7879: I have heard things from Jimmy saying stuff about how the server just complys with placing down modded components
Limón#7879: You should definitely test then
Moojuiceman#5661: And that was only using built in unity stuff. This is a hand rolled server so potential is even worse
Moojuiceman#5661: But given that I'm friends on Steam with the guy who made tabletop simulator because I found a security hole and told him, it happens
Limón#7879: That would be a massive security risk
Moojuiceman#5661: Me too
Limón#7879: I HOPE you cant
Moojuiceman#5661: That would be bad
Limón#7879: I don't think you can
Limón#7879: Oh
Rack Smix#3697: can i see the source code ?
Moojuiceman#5661: No, as in sent by a connecting client
Limón#7879: That's also the server owners fault for putting the mod on the server
Moojuiceman#5661: Unless the mod gets sent to the server. And considering its the integrated server that builds it...
Rack Smix#3697: i doesnt look like it's possible with logicScript
Limón#7879: Maybe with c# modding but regularly no
Limón#7879: I feel as if the only security risk would be to the user who has the mod
Limón#7879: So if the code inside the C# only runs with components down
Rack Smix#3697: can i make a component that changes color depending on the input pegs ?
Moojuiceman#5661: Were those things you injected or regular "intended" mods
Limón#7879: Placing down components
Moojuiceman#5661: Lsx?
Moojuiceman#5661: In what conditions?
Limón#7879: Yeah it crashes the server
Moojuiceman#5661: Do you know how multiplayer is affected modding wise? I saw you mentioned to someone about mp and modding
Moojuiceman#5661: Possible RCE
Limón#7879: Can you define security test?
Limón#7879: Ah ok
Moojuiceman#5661: But, not releasing my findings just yet because I want to do a security test
Moojuiceman#5661: It's working in vanilla, no edits
Limón#7879: Or if it's using the base tools without editing anything an example would probably do
Limón#7879: Or something
Limón#7879: Or inject code
Limón#7879: I am guessing you had to edit the files
Limón#7879: Or in the c# modding threwd
Limón#7879: If so please make a step by step tutorial here
Limón#7879: C# modding works?
Moojuiceman#5661: Considering I've got the "official" way working now, doubtful they'll release it before us
Whisper#7076: ***probably***
Whisper#7076: Hey if you wanna do it for fun then do it but the official one will be out before you finish
Limón#7879: and they are saying sometime in early access
Limón#7879: reverse engineering is fun
Whisper#7076: If you wanna just try and hook into random functions you will have to restructure your loader every update lol + all of the reverse engineering
Whisper#7076: It aint worth it, we were talking about it this morning just wait for the official api
IsCoffeeTho#0001: huge pog
JC Denton#9567: 256 16-bit memory cells 🙂
JC Denton#9567: 
JC Denton#9567: Now I can just duplicate these next to eachother and get a RAM grid
JC Denton#9567: 
Moojuiceman#5661: So yeah clearly the parsing still needs some work
JC Denton#9567: because 10 = 2' and 11 = 3'
JC Denton#9567: yes
Moojuiceman#5661: How'd you fix it for reference? Using ' ?
JC Denton#9567: My mod is ready! 😃
JC Denton#9567: 
JC Denton#9567: fixed that and
JC Denton#9567: yep
Moojuiceman#5661: "The number inside an indexer will always be treated as a decimal number" So that's a lie
Moojuiceman#5661: There's an override, dunno if it works though
Moojuiceman#5661: It's just that all numbers are binary unless told otherwise
JC Denton#9567: I really don't understand why somebody would index with binary
Moojuiceman#5661: Anything not 0 or 1 should be specified as decimal, or you're gonna have a bad time
JC Denton#9567: 10 = 2
JC Denton#9567: OH
JC Denton#9567: but it goes from two places
JC Denton#9567: in the component it should go through
JC Denton#9567: can't spot anything wrong with my code
JC Denton#9567: in[10] == in[2] or something
JC Denton#9567: 
JC Denton#9567: 
Moojuiceman#5661: I should try bep 6 in case 5 is why it breaks... But first breakfast, and also work I guess
Limón#7879: instructions
Limón#7879: so yeah
Limón#7879: for legal reasons
Limón#7879: which he said he won't
Limón#7879: unless Jimmy give's us blessing (for distributing)
Moojuiceman#5661: Or use something that does patching for you, like Harmony/bep
Moojuiceman#5661: But you can't distribute the server.dll. So you'd have to give instructions for them to patch
Limón#7879: or injecting code
Limón#7879: I don't think there is any way to do C# modding without editing dlls
Limón#7879: they will have to install the server.dll
Moojuiceman#5661: But on theirs?
Moojuiceman#5661: It'll work on your machine, with your patched server.dll
Limón#7879: I doubt it will
Limón#7879: without that
Limón#7879: this will work
Limón#7879: that allows me to see what component it is
Limón#7879: if there is a base.name or something
Moojuiceman#5661: So how will end user of your/people's dll components use them in their game?
Limón#7879: which can run other dlls
Limón#7879: I plan on injecting a class in the Server.dll
Limón#7879: I have little plans or idea on how to fix
Moojuiceman#5661: Do you have a plan on how? Like making your own injector, or fixing the loader, or using some mod framework?
Limón#7879: I should work on that
Moojuiceman#5661: Unless someone can get C# working
JC Denton#9567: but I still have 50% to do since there are a ton of inputs and outputs
JC Denton#9567: indeed
Limón#7879: I would say that it was worth the pain of dealing with lsx then
JC Denton#9567: also would require so many components that it would lag/glitch when multiplied by 256
JC Denton#9567: it would be horribly large if done with basic components
Limón#7879: long boy
JC Denton#9567: It's gonna be a 16-bit RAM cell 🙂
JC Denton#9567: 
JC Denton#9567: now I probably have no problems finishing this component
JC Denton#9567: thank you
JC Denton#9567: yes now it works
Limón#7879: case/if
Moojuiceman#5661: But if isn't a case?
Limón#7879: it's very weird
Limón#7879: it only works in case statements
JC Denton#9567: it's weird that it doesn't work like I wrote?
Limón#7879: var1 & var2
JC Denton#9567: yes, but what is the expression?
Limón#7879: if it's only 2 values this will work
Limón#7879: if expression <[newline]>    ... <[newline]> else <[newline]>  <[newline]> end
JC Denton#9567: however how do I say it in a if statement or do I need to make an if statement inside an if statement?
JC Denton#9567: yes just looked that
Moojuiceman#5661: https://github.com/pipe01/LogicScript/wiki/Syntax-reference
JC Denton#9567: thought this was so crippled that there weren't :D
JC Denton#9567: oh there's if statements
Limón#7879: if statements
JC Denton#9567: So do you have any clue how to make the and logic work here?
JC Denton#9567: 
Limón#7879: which means manually editing each value
Moojuiceman#5661: Can you index with a variable instead of a literal?
Limón#7879: I am guessing
Limón#7879: nope can't have end positions
Limón#7879: the exclusive just makes everything annoying to read
Moojuiceman#5661: or 16, fuck knows
Moojuiceman#5661: Because binary 0 ends after 1 number, and you're setting 15
Moojuiceman#5661: Try 0', or 000000000000000
Limón#7879: `out[0..16] = 0`
Limón#7879: 
Moojuiceman#5661: Have you tried my mem[] x/y thing? If you treat mem as a series of registers
Limón#7879: workaround would be if statements
JC Denton#9567: now the tricky part is to make the AND work with two inputs
Limón#7879: it sounds so stupid
Limón#7879: I can't tell if you are being serious or not
Moojuiceman#5661: This is groundbreaking work in maths
JC Denton#9567: 0 != 0
Moojuiceman#5661: I guess binary 0 and decimal 0 are different values
JC Denton#9567: It was this
JC Denton#9567: 
JC Denton#9567: actually :D
Limón#7879: maybe that makes sense and will help
Limón#7879: it will stay as 1
Limón#7879: and instead change out = 100 (which should be equal to out[0..3] = 100)
Limón#7879: and then never change out[1]
Limón#7879: so if you say out[1] = 1
Limón#7879: out's don't get overwritten unless you tell them to
Limón#7879: (maybe)
Limón#7879: I know why
Limón#7879: ok
JC Denton#9567: I still don't get why out[0] stays on after read goes 0
JC Denton#9567: That's what I did and it worked, didn't try mem[1] though
Limón#7879: it's weird
Limón#7879: it's should though
Limón#7879: it doesn't even set the other bits to 0
Limón#7879: this code hurts
Limón#7879: ``` <[newline]> when !in[0] & !in[1] & !in[2] & !in[3] <[newline]>     out = 1' <[newline]> end <[newline]>  <[newline]> when !in[0] & !in[1] & !in[2] & in[3] <[newline]>     out = 2' <[newline]> end <[newline]>  <[newline]> when !in[0] & !in[1] & in[2] & !in[3] <[newline]>     out = 3' <[newline]> end <[newline]>  <[newline]> when !in[0] & !in[1] & in[2] & in[3] <[newline]>     out = 4' <[newline]> end <[newline]>  <[newline]> when !in[0] & in[1] & !in[2] & !in[3] <[newline]>     out = 5' <[newline]> end <[newline]>  <[newline]> when !in[0] & in[1] & !in[2] & in[3] <[newline]>     out = 6' <[newline]> end <[newline]>  <[newline]> when !in[0] & in[1] & in[2] & !in[3] <[newline]>     out = 7' <[newline]> end <[newline]>  <[newline]> when !in[0] & in[1] & in[2] & in[3] <[newline]>     out = 8' <[newline]> end <[newline]>  <[newline]> when in[0] & !in[1] & !in[2] & !in[3] <[newline]>     out = 9' <[newline]> end <[newline]>  <[newline]> when in[0] & !in[1] & !in[2] & in[3] <[newline]>     out = 10' <[newline]> end <[newline]>  <[newline]> when in[0] & !in[1] & in[2] & !in[3] <[newline]>     out = 11' <[newline]> end <[newline]>  <[newline]> when in[0] & !in[1] & in[2] & in[3] <[newline]>     out = 12' <[newline]> end <[newline]>  <[newline]> when in[0] & in[1] & !in[2] & !in[3] <[newline]>     out = 13' <[newline]> end <[newline]>  <[newline]> when in[0] & in[1] & !in[2] & in[3] <[newline]>     out = 14' <[newline]> end <[newline]>  <[newline]> when in[0] & in[1] & in[2] & !in[3] <[newline]>     out = 15' <[newline]> end```
Limón#7879: time to make everything decimal
Limón#7879: this is great
Limón#7879: it thinks my binary numbers are decimal
Moojuiceman#5661: You might gnaw it off yourself in frustration
Limón#7879: loses an arm to lsx
Moojuiceman#5661: Experimentation is key to scientific discoveries. Sure someone will lose an arm now and then but that's all part of progress
Moojuiceman#5661: I guess just try mem[] something and see if it works
Moojuiceman#5661: But in/out are listed as slots, and slots can be indexed
Limón#7879: so maybe I am wrong
Limón#7879: at least that's how I see them
Limón#7879: slots just seem to be vars that they (they being the game) create themselves
Moojuiceman#5661: At least according to the syntax ref
Moojuiceman#5661: Mem is a slot, not a var
JC Denton#9567: and mem 10 etc
Limón#7879: I presume
Limón#7879: not mem[0] = 1
Limón#7879: you can do mem = 1
Limón#7879: no
JC Denton#9567: so can you only store 1 bit?
Limón#7879: I am pretty sure
Limón#7879: mem is just a variable that's get's saved
Moojuiceman#5661: As in not a variable but a storage
Moojuiceman#5661: But mem is special no?
Limón#7879: it means you can not do mem[0] = 1
Limón#7879: so if I think what it means is what it actually means
Limón#7879: they can not be assigned using an indexer
Limón#7879: 
Moojuiceman#5661: Something like mem[X] = a, mem[Y] = b, then and(mem[X..Y]) ?
JC Denton#9567: so what is wrong?
Limón#7879: yeah
Limón#7879: and only takes on arg
Moojuiceman#5661: I think & only works in cases? According to <@859806257774723102>
JC Denton#9567: how do you do that with two variables? and(writeA,writeB) ?
Moojuiceman#5661: Use and()
JC Denton#9567: I can't get this to work. There is probably something wrong with &
JC Denton#9567: 
Moojuiceman#5661: Apparently they got the write to work so I'd guess so
JC Denton#9567: somewhat yes
Limón#7879: do when statements even work
JC Denton#9567: oh yeah
Moojuiceman#5661: If ! doesn't maybe do == 0
Limón#7879: out[0] = or(0')
Limón#7879: maybe
Limón#7879: or the bit
JC Denton#9567: this does not work?
JC Denton#9567: 
Moojuiceman#5661: If you want a pulse maybe set a var of hasWritten and check it on any, if true set to false and out 0
Moojuiceman#5661: When is just a trigger, but the out keeps its value until overwritten
JC Denton#9567: problem is that the output now stays on even read isn't active
JC Denton#9567: I just put the wrong input for read/write 😅
JC Denton#9567: oh it does work
Limón#7879: I doubt they even know everything
Moojuiceman#5661: Idk, maybe falsepattern
Limón#7879: try or(mem[0])
Limón#7879: no one is
JC Denton#9567: because it didn't work
Moojuiceman#5661: Looks ok to me but I'm no lsx expert
JC Denton#9567: in[18] is write signal and in[19] is read signal
JC Denton#9567: So would this work?
JC Denton#9567: 
Moojuiceman#5661: Welcome to the fun of indexing arrays and off by one errors
Limón#7879: because of what you said <@!108289447799308288>
Limón#7879: I think it's 5
Limón#7879: I like double inclusive
Limón#7879: it's so weird
Limón#7879: idk
Moojuiceman#5661: Hence why I said 5
Limón#7879: [0,5)
JC Denton#9567: exclusive lower end too?
JC Denton#9567: 0,1,2,3,4
Limón#7879: mem[0..5]
Limón#7879: exclusive upper end
Moojuiceman#5661: Wouldn't that be 5?
JC Denton#9567: Im actually implementing a 16-bit register
Limón#7879: mem[1..6] can be for 4 bits
JC Denton#9567: Does this work?
JC Denton#9567: 
Limón#7879: so like you can use mem[0] as a 1 bit number storage
JC Denton#9567: Good
Moojuiceman#5661: It's like a register
Limón#7879: store numbers in memeory
Moojuiceman#5661: Then yeah index it
JC Denton#9567: what does mem do?
JC Denton#9567: I want memory indeed
Moojuiceman#5661: If you want variables I'd advise against using mem anyway, since that's a built in thing like in and out
JC Denton#9567: there is a lot of problem with parsing and indescriptive errors
Limón#7879: it's a very bad language rn
Dragon Lord#6944: ooooo
Limón#7879: yes
Dragon Lord#6944: is that custom for LW?
Limón#7879: logicscript
Dragon Lord#6944: huh
Limón#7879: lsx
Dragon Lord#6944: what language?
Limón#7879: this breaks the game
Limón#7879: ``` <[newline]> any <[newline]>     if in[0..5] == 0000 <[newline]>         out = 0 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0001 <[newline]>         out = 10 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0010 <[newline]>         out = 100 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0011 <[newline]>         out = 1000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0100 <[newline]>         out = 10000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0101 <[newline]>         out = 100000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0110 <[newline]>         out = 1000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 0111 <[newline]>         out = 10000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1000 <[newline]>         out = 100000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1001 <[newline]>         out = 1000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1010 <[newline]>         out = 10000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1011 <[newline]>         out = 100000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1100 <[newline]>         out = 1000000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1101 <[newline]>         out = 10000000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1110 <[newline]>         out = 100000000000000 <[newline]>     end <[newline]>  <[newline]>     if in[0..5] == 1111 <[newline]>         out = 1000000000000000 <[newline]>     end <[newline]> end```
Moojuiceman#5661: Probably not
JC Denton#9567: you can't have numbers in variable names? 🤨
Moojuiceman#5661: mem[0] ?
JC Denton#9567: what could this mean
JC Denton#9567: 
JC Denton#9567: 
DADp#7461: ahh yes
DADp#7461: 
Limón#7879: it's very annoying
Limón#7879: I hate positing inputs
Limón#7879: anyways
Limón#7879: 1 year with 0 downtime seems very hard
JoshuaSpeedy#3545: Whoever first triggers this Easter egg legit has my eternal respect
Red_3D#3062: <:bobby_ok:692790276623958087> Will make a new pr later today
Jimmy#8080: brb
Jimmy#8080: And he said "yeah just lemme know when it comes out"
Jimmy#8080: I emailed him like 3 years ago to say "hey can I put your cows in my game as an easter egg"
Jimmy#8080: Oh man I should email david
Limón#7879: great easter egg ty
Limón#7879: 
Limón#7879: 
Limón#7879: 
Dragon Lord#6944: ah, so it's when two relays are on the same node then?
Limón#7879: other wise I am just gonna edit it
Limón#7879: anyone want to run a server for a year
Limón#7879: 
Limón#7879: 
Limón#7879: yo what
Jimmy#8080: See https://logicworld.net/tracker/111 for investigation/discussion/documentation of the issue
Dragon Lord#6944: kinda wonder if it acutally fixes it, or if it's something else
Dragon Lord#6944: you could try reversing them and see if it fixes them
Dragon Lord#6944: ^^
Saltypretzel#0321: Like my 128 bit adder lmao
Saltypretzel#0321: And with large propagations they cause problems too
Dragon Lord#6944: reversing them seems to fix it, so i wonder if they're slightly polarized in some cases
Dragon Lord#6944: see here for at least 2 documented cases <[newline]> https://discord.com/channels/401255675264761866/901158328405729371/901762007991189504
DayDun#2309: hmm, alright
Dragon Lord#6944: no, they're just unreliable. if you turn on the 'gate' pin, they don't always conduct
DayDun#2309: are relays slow?
Dragon Lord#6944: with how reliable relays are atm, it might as well be a qbit lol
oddron#8955: True, but there are plenty of *large* circuits in <#901195561980543007>
DayDun#2309: you can still easily emulate it for small circuits. As https://algassert.com/quirk and https://wybiral.github.io/quantum/ does
oddron#8955: When quantum coprocessors are a standard part of computers. Quantum computing depends on entanglement, and the state vector for N qubits has (2^N) - 2 degrees of freedom
DayDun#2309: probably 0-tick conditional links between groups of wires
DayDun#2309: quantum world when
DADp#7461: you never know what this game is capable of.
DADp#7461: contacting the 4th dimention probably
cheese3660#8641: dafuq are phasic links
Jimmy#8080: https://docs.unity3d.com/ScriptReference/MonoBehaviour.OnAudioFilterRead.html
Jimmy#8080: They can, select the "sine wave" instrument
oddron#8955: Is it possible to programmatically generate audio waveforms from within Unity?
Verlio_H#0201: jimmy what if singers could produce sin waves of specified frequency
Jimmy#8080: "somehow"? just make a custom instrument for the singers/drums lol
ieee 802.11ac#6337: 6 days and we somehow manage to play wavs on demand
cheese3660#8641: Whats next 6 days and bad apple with audio?
DADp#7461: 3 days and bad apple
cheese3660#8641: So it doesnt always log
cheese3660#8641: Input
cheese3660#8641: Maybe add a clock
Moojuiceman#5661: Probably extend and gate and get the resizing logic it has
circuitgamer77#0377: Mod idea - logger block.  Outputs text representation of logic inputs in chat.  Resizeable for different bitwidths.  Could be a challenging one, but very helpful in some cases!
cheese3660#8641: Like give a number and a spacing
cheese3660#8641: Procedurally generated outputs when
FalsePattern#7777: 
FalsePattern#7777: 4096 outputs
cheese3660#8641: 401kb succ file wtf
FalsePattern#7777: for running it, feed a binary counter's output into the back, the LSB is at the outer edge of the component, and set the tickrate so that the counter does 30 steps per second (for 30 fps playback)
FalsePattern#7777: script:
FalsePattern#7777: component:
PseudoGoose#2841: also I love the dithering, though it does make some edges a lil fuzzy
PseudoGoose#2841: (not modded)
PseudoGoose#2841: I guess mine is still pretty unique
PseudoGoose#2841: beat me to it 😔 <[newline]> if only the dang world would load
cheese3660#8641: That was my second guess for wbat it would be
Jimmy#8080: tbh I was expecting Rick Astley lol
cheese3660#8641: Ofc bad apple is the first video in LW
Moojuiceman#5661: I just came across it last night while doing other things. Must be a talent
Jimmy#8080: This is the first I've heard somebody mention it! Nice find 😄
Moojuiceman#5661: Do you know if anyone else has found the server uptime one?
FalsePattern#7777: fun fact: the server is using 1GB of ram to run just that component + a counter
cheese3660#8641: And those with varying input amounts
cheese3660#8641: What does the code look like for resizable components?
Moojuiceman#5661: I'm always amazed by how legible it is on things with 0 resolution
Moojuiceman#5661: Classic
FalsePattern#7777: 
Moojuiceman#5661: More fun
AKShredder8#2904: alr
Moojuiceman#5661: Find both instances of LogicLogger (LogicLog.dll in Server and Logic_World_Data\Managed), change the default log level to trace, and add a stack trace to the Error method
Moojuiceman#5661: You could do what I've done to see if there's anything being logged for you
AKShredder8#2904: im trying to add xor to the scripts
circuitgamer77#0377: it's...  a start?
AKShredder8#2904: lol
Moojuiceman#5661: No, but at least I made it scream
AKShredder8#2904: have you managed to find a way to stop the black screen?
cheese3660#8641: Okii, imma open it up in dnspy once im done with this hell called work
Moojuiceman#5661: For extra redundancy check the redundancy folder
circuitgamer77#0377: 
cheese3660#8641: Okii
Moojuiceman#5661: server.dll in the Server folder
cheese3660#8641: Anyways which dll is it?
cheese3660#8641: Wrong message fuck
cheese3660#8641: I now want to look at the relay code
Moojuiceman#5661: mscorlib was boring, so I made my own
circuitgamer77#0377: When is DoLogicUpdate() called?  I'm trying to work out an alternate implementation of a relay...
cheese3660#8641: Now just time to find a way to make that evaluate to true and activate it
Jimmy#8080: `default_motds.txt` is my happy place, whenever I'm feeling down I just chill out there and type whatever comes to mind
Moojuiceman#5661: Not sure if anyone else has seen all the motds yet but those were good
Jimmy#8080: Damn, well done 😄
Jimmy#8080: Hahahaha I thought nobody would ever find that easter egg!!
IsCoffeeTho#0001: <@!284602593597194250> i'd love to add your changes to LWCV to the main repo.
Moojuiceman#5661: Welcome to my hell
AKShredder8#2904: so i added a FullAdder and my game loads as a black screen lol
circuitgamer77#0377: I think it's possible for the relay to create a link between it's pins if it's cloned a certain way but not remove it, which would then lead to there being two links, one of which will never be removed.  I don't know if this could cause the bug, but I think it's possible.
ieee 802.11ac#6337: oh
circuitgamer77#0377: Where the relay is on but the signal doesn't go through unless the circuit is updated somewhere.
ieee 802.11ac#6337: relay bug?
circuitgamer77#0377: I have a very tentative guess as to what's causing the relay bug...
circuitgamer77#0377: Oh no...
Moojuiceman#5661: C#: "Oh you're from C++? Good news you can stop worrying about memory management. What's that? No don't look at the task manager..."
circuitgamer77#0377: That description is fairly accurate...
cheese3660#8641: Its better than java tho
ieee 802.11ac#6337: as many have joked before, c# is just microsoft java
cheese3660#8641: My main is currently zig and c++
circuitgamer77#0377: My main language at the moment is C++, so C# is an interesting transition...
cheese3660#8641: Lmao
ieee 802.11ac#6337: i write c++
Moojuiceman#5661: It is
ieee 802.11ac#6337: probably
circuitgamer77#0377: The default value for  a boolean in c# is false, right?
circuitgamer77#0377: But that will be helpful later, thank you :)
circuitgamer77#0377: In this case I can see based on the code :)
ieee 802.11ac#6337: because the ordering is [0] then [1] then [2] then ...
ieee 802.11ac#6337: you can try to guess based on the .succ file
circuitgamer77#0377: Wait - I think I got it :)
circuitgamer77#0377: Example: a relay has 3 inputs, but I don't know which one is the middle one.
circuitgamer77#0377: Is there a way to see which input is which on a component?
Moojuiceman#5661: 
ieee 802.11ac#6337: oh no
FalsePattern#7777: before then it was super verbose: <[newline]>  <[newline]> java 8: <[newline]> ```java <[newline]> ArrayList<Integer> list = new ArrayList<>(); <[newline]> ``` <[newline]> java 11+: <[newline]> ```java <[newline]> var list = new ArrayList<Integer>(); <[newline]> ```
FalsePattern#7777: you can replace any local variable's type with `var` as long as the type can be inferred during compile time
FalsePattern#7777: it's a new feature since java 11
ieee 802.11ac#6337: i didn't realize nondescript types were one of its downsides
ieee 802.11ac#6337: sorry i'm not used to java
ieee 802.11ac#6337: OH
FalsePattern#7777: java
ieee 802.11ac#6337: fun with (js? python?)
FalsePattern#7777: but it's not working yet
FalsePattern#7777: homebrew code
cheese3660#8641: What are you using to generate it
ieee 802.11ac#6337: what's the generator code in question
ieee 802.11ac#6337: oh thank god
FalsePattern#7777: generated with code
cheese3660#8641: Oh gosh no
FalsePattern#7777: nah
ieee 802.11ac#6337: are you manually inputting bits
FalsePattern#7777: for a 64x64 video
FalsePattern#7777: 30MB lsx
ieee 802.11ac#6337: oh no
FalsePattern#7777: yes
ieee 802.11ac#6337: in .lsx?
FalsePattern#7777: i am trying to write a video player
ieee 802.11ac#6337: how
FalsePattern#7777: using only lsx scripts
FalsePattern#7777: ok so... <[newline]>  <[newline]> i somehow made the server puke out IL into the log
circuitgamer77#0377: I'm trying to see if the cause of the relay bug is easy to spot...
circuitgamer77#0377: I see now :)  Thanks!
Moojuiceman#5661: 2 pins, same component
Moojuiceman#5661: Think through pegs
circuitgamer77#0377: I can't tell what it does!
circuitgamer77#0377: Now I'm trying to understand this function:
Moojuiceman#5661: idk about dotpeek. use dnSpy
circuitgamer77#0377: Not sure yet, at the moment I'm just trying to understand the code.
AKShredder8#2904: is there a way to edit a dll in dotPeek?
circuitgamer77#0377: Nevermind, found the confusing part :)
Moojuiceman#5661: So it's going well...
Moojuiceman#5661: 
Moojuiceman#5661: 
Moojuiceman#5661: Here's where I am with bep:
circuitgamer77#0377: This line is confusing me:
IsCoffeeTho#0001: <:iscoffChamp:790189075298648104>
circuitgamer77#0377: 
circuitgamer77#0377: Found it!
IsCoffeeTho#0001: noted
Moojuiceman#5661: So far we're at "just edit the dll", anything else is hit and miss, and won't fully work
IsCoffeeTho#0001: for LW
Moojuiceman#5661: For LW or in general you mean?
IsCoffeeTho#0001: If there is no attempt of a guide id be happy to make one with someone that knows the recents of modding in C#
IsCoffeeTho#0001: story of my life
Moojuiceman#5661: Don't
Moojuiceman#5661: I can give you a guide in 1 word
IsCoffeeTho#0001: waiting for giant MD repo of guides to C# modding
DADp#7461: in the server folder
DADp#7461: its in server.dll
Moojuiceman#5661: https://discord.com/channels/401255675264761866/901659878869844048/901943311777005628
circuitgamer77#0377: I'm using dotPeek for the first time, but it's been helpful so far.
AKShredder8#2904: im still trying to find out how to look inside and modify dlls lol
circuitgamer77#0377: Has anyone found which dll has the logic for gates?
IsCoffeeTho#0001: if you like hurt
IsCoffeeTho#0001: floats are fun
Dragon Lord#6944: Like floats
IsCoffeeTho#0001: just a quick reminder if anyone has components they want to add to LWCV feel free to mention me with your components
cheese3660#8641: Well for 1 bit it does
Moojuiceman#5661: If it doesn't you probably have bigger problems anyway
Moojuiceman#5661: Usually
cheese3660#8641: So it does work
cheese3660#8641: I forgot that 0 does in fact equal 0
cheese3660#8641: Nvm
cheese3660#8641: ?
cheese3660#8641: For xor
IsCoffeeTho#0001: != works wonders
AKShredder8#2904: yea
cheese3660#8641: ^?
Moojuiceman#5661: !=
AKShredder8#2904: ngl i wish there was xor in the bitwise operators for lsx files
FalsePattern#7777: ``` <[newline]> | ERROR | [SceneAndNetworkManager] going to error screen with message: "Error was so bad that there wasn't even an error message. So you have this instead. (Sorry)" <[newline]> ```
Jimmy#8080: For legal reasons I cannot give you my blessing to fuck with the dlls
DADp#7461: newlines are the death to logic world
IsCoffeeTho#0001: noted
FalsePattern#7777: yep, it seems like it
cheese3660#8641: An extra newline breaks it?
IsCoffeeTho#0001: i might make a Command Line tool to check if a LSX file is so called "normed"
Moojuiceman#5661: Have y'all looked at the motds
FalsePattern#7777: i fixed it locally afterwards but the one i uploaded still has an extra newline
DADp#7461: ahhh
FalsePattern#7777: 
FalsePattern#7777: ah found the issue
FalsePattern#7777: nope
IsCoffeeTho#0001: imagine
IsCoffeeTho#0001: 😱
DADp#7461: <@!437296986593427458> are you getting this error when you start your mod?
cheese3660#8641: Makes a 16 bit ram/rom nigh impossible
DADp#7461: <@!859806257774723102> have you seen this?
DADp#7461: 
DADp#7461: 
IsCoffeeTho#0001: yurt
DADp#7461: time to smash components together.
IsCoffeeTho#0001: was a shame figuring it out writing a RAM Chip
IsCoffeeTho#0001: bits
DADp#7461: i think
DADp#7461: bits
FalsePattern#7777: bits or integer value?
IsCoffeeTho#0001: friendly reminder that mem is capped at 256
DADp#7461: and not enough to do this
DADp#7461: i did do a lil research but not a lot
DADp#7461: nope
Moojuiceman#5661: Have you used it before? If so you can probably put it together yourself. Nothing really beyond loading it
Moojuiceman#5661: Haven't started it, so *technically* no
DADp#7461: <@!244503493996445697> are you still doing bep?
FalsePattern#7777: the advantage of SUCC's relatively simple syntax
Limón#7879: <@!437296986593427458> you can write a script for that
FalsePattern#7777: mod with the alu (and the full adder)
FalsePattern#7777: 
DADp#7461: oh lord
FalsePattern#7777: 
FalsePattern#7777: the HACK alu from nand2tetris as a logic world mod
DADp#7461: trunc is fun
Limón#7879: small
DADp#7461: there you go
DADp#7461: spent some time making a fulladder code
DADp#7461: ``` <[newline]> any <[newline]>     mem[1] = sum(in[0..3']) <[newline]>     mem[0] = trunc(sum(in[0..3']), 2') <[newline]>     for i to 2' <[newline]>         out[i] = mem[i] <[newline]>     end <[newline]> end <[newline]> ```
Limón#7879: LogicLog.dll
cheese3660#8641: Because if it is true, then the amount of logs is greater than when the if is false
Moojuiceman#5661: Yeah but from where? Cause there's like 100 and they're registered by the class that uses them
cheese3660#8641: Not necessarily with say the if statements
Limón#7879: I am using the one the game has
Limón#7879: and see which line it crashed
Limón#7879: you can count the amount of logs
Limón#7879: yes
cheese3660#8641: Maybe put in a description of each log message?
Moojuiceman#5661: Do you even have a Logger?
Moojuiceman#5661: So if you set your logiccode back to your half adder then run it, you should crash. And hopefully have some logging
Limón#7879: <@!118121598388666375> debugging
Limón#7879: 
FalsePattern#7777: aaaaa
FalsePattern#7777: 
FalsePattern#7777: i'm going to turn it into an ALU, i'm just having some problems with positioning pegs in the succ file
Limón#7879: add cin
Moojuiceman#5661: I don't, I'm writing to a file
Limón#7879: how do you log to console?
FalsePattern#7777: 
FalsePattern#7777: 16 bit adder
FalsePattern#7777: lsx progress report: for loops seem to work
Moojuiceman#5661: This
Limón#7879: what class are we checking?
Moojuiceman#5661: Well, I didn't add a print. But I set a variable then print it at the end. Could be an issue there but it was the easiest way to do every line
Moojuiceman#5661: Yeah I did...
Limón#7879: add a print every line
Moojuiceman#5661: But still couldn't get my logging to print anything so not sure what line it breaks on
Moojuiceman#5661: I took the open source code for that class, and can edit it then paste the whole thing into dnSpy
Limón#7879: succ.dll?
Moojuiceman#5661: This
Moojuiceman#5661: Mainly digging into this succ parser and how it's loading the type
Limón#7879: you said something null ref
Limón#7879: how can I help
Moojuiceman#5661: But if you injected that class into the main dll, you should be able to reference it
Moojuiceman#5661: It won't run any non-built in code. Like the definitions in your hAdder.cs. That's what I'm trying to fix
Limón#7879: 
Limón#7879: yeah
Moojuiceman#5661: I do, and it inverts
Moojuiceman#5661: And you don't crash? So do you see the gate in the list?
Limón#7879: logicCode: LogicWorld.LogicCode.Inverter
Moojuiceman#5661: What's your logicCode set to
Moojuiceman#5661: 
Limón#7879: idk why it wouldn't load
Limón#7879: so unless I named something wrong
Limón#7879: mine looks like this
Limón#7879: can I see your file structure?
Limón#7879: ```cs <[newline]> using LogicWorld.Server.Circuitry; <[newline]> using LogicWorld.LogicCode; <[newline]> using LogicAPI.Server; <[newline]>  <[newline]> namespace somethingmORe <[newline]> { <[newline]>     public class somethingmORe : LogicAPI.Server.ServerMod {} <[newline]>  <[newline]>     public class CoolGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() <[newline]>         { <[newline]>             base.Outputs[0].On = !base.Inputs[0].On; <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
Moojuiceman#5661: You mean adding the logicapi.server before? You only need the using OR the full namespace in declaration
Limón#7879: I am testing things with namespace
Limón#7879: ```cs <[newline]> using LogicWorld.Server.Circuitry; <[newline]> using LogicWorld.SharedCode.ComponentCustomData; <[newline]> using LogicAPI.Server; <[newline]>  <[newline]> namespace LogicWorld.LogicCode <[newline]> { <[newline]>     public class somethingmORe : LogicAPI.Server.ServerMod {} <[newline]>  <[newline]>     public class CoolGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() <[newline]>         { <[newline]>             base.Outputs[0].On = !base.Inputs[0].On; <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
Limón#7879: nope
Moojuiceman#5661: Do you get a crash or any output?
Limón#7879: still having no luck with it loading
Limón#7879: enjoy :)
Limón#7879: that's gonna be fun
FalsePattern#7777: time to write an ALU using the broken lsx <a:trolling:901937048410284102>
Limón#7879: but you do you
Limón#7879: they are nice
Limón#7879: personally I like the colors
Moojuiceman#5661: I know there's a thing for it but I don't need it
Moojuiceman#5661: sublime text
FalsePattern#7777: lsx-based example mod with full adder <[newline]>  <[newline]> just put the folder in the archive into gamedata and it should work
Limón#7879: or something
Limón#7879: which looks like vim
Limón#7879: if you are using vscode
Limón#7879: there is a succ syntax highlighter I made
Moojuiceman#5661: That's the final bit I'm trying to get done
DADp#7461: 256
Limón#7879: it's different than yours htough
Moojuiceman#5661: 
Moojuiceman#5661: Yeah your logicCode still needs to point at something existing
Limón#7879: ```cs <[newline]> public class somethingmORe : LogicAPI.Server.ServerMod {} <[newline]>  <[newline]> public class CoolGate : LogicComponent <[newline]> { <[newline]>     protected override void DoLogicUpdate() <[newline]>     { <[newline]>         base.Outputs[0].On = true; <[newline]>     } <[newline]> }```
Limón#7879: 
Limón#7879: 
Limón#7879: yeah
Moojuiceman#5661: Did you try this yet?
Limón#7879: File Structure <[newline]> ``` <[newline]> Mod/ <[newline]>     - backgrounds/ <[newline]>     - components/ <[newline]>     - crosshairs/ <[newline]>     - FancyInput/ <[newline]>     - flags/ <[newline]>     - ground/ <[newline]>     - instruments/ <[newline]>     - languages/ <[newline]>     - lib/ <[newline]>     - music/ <[newline]>     - palettes/ <[newline]>     - scripts/ <[newline]>     - settings/ <[newline]>     - sounds/ <[newline]>     - src/ <[newline]>         - client/ <[newline]>         - server/ <[newline]>         - shared/ <[newline]>     - thumbs/ <[newline]>     - worldtypes/ <[newline]>     - manifest.succ```
Doctor Stupid#9197: pin that ⬆️  😄
FalsePattern#7777: good news: i figured out a solution for both the binary operator to output assignment, as well as the variable problem <[newline]> every time you want to put a single bit on the output <[newline]> just use the `or()` function <[newline]> or() turns the broken bit count into a single bit, which can be directly assigned to outputs
Limón#7879: they give us an inch we go a mile
Doctor Stupid#9197: well i mean yeah, considering its just barely into early access and its not officially supported yet. the fact that half-way decent documentation exists at all is pretty amazing
Limón#7879: I am making tutorial/new documentation
Limón#7879: https://github.com/LonnonDev/LW-Modding
DADp#7461: amazing documentation right?
FalsePattern#7777: yeah found it
DADp#7461: even though documentation says its not needed.
DADp#7461: console warns for `'`
DADp#7461: it chaged
DADp#7461: but
DADp#7461: oh yes.
FalsePattern#7777: afaik indexes are decimal by default
Limón#7879: it's very cool
Limón#7879: it will warn you in the console if you don't
DADp#7461: also make sure you put `'` after numbers bigger than 1
DADp#7461: brute forced it
DADp#7461: better than iso <[newline]> ``` <[newline]> any <[newline]>     out[0] = 0 <[newline]>     out[1] = 0 <[newline]>     if in[0] + in[1] + in[2] == 1' <[newline]>         out[0] = 1 <[newline]>         out[1] = 0 <[newline]>     end <[newline]>     if in[0] + in[1] + in[2] == 2' <[newline]>         out[0] = 0 <[newline]>         out[1] = 1 <[newline]>     end <[newline]>     if in[0] + in[1] + in[2] == 3' <[newline]>         out[0] = 1 <[newline]>         out[1] = 1 <[newline]>     end <[newline]> end <[newline]> ```
Limón#7879: it's sad 😔
Limón#7879: most things don't work
Limón#7879: this is usually how you program thing rn
FalsePattern#7777: I DID IT <[newline]>  <[newline]> FULLADDER WITH LSX <[newline]>  <[newline]> variables don't work, and you can't assign the result of binary operations to outputs, so i wrote a half adder with a workaround: <[newline]> ``` <[newline]> any <[newline]>     if sum(in[0..3]) & 1 <[newline]>         out[0] = 1 <[newline]>     else <[newline]>         out[0] = 0 <[newline]>     end <[newline]>     if sum(in[0..3]) > 1 <[newline]>         out[1] = 1 <[newline]>     else <[newline]>         out[1] = 0 <[newline]>     end <[newline]> end <[newline]> ```
Moojuiceman#5661: I'll double check in a min, getting dinner
Limón#7879: maybe I should make a new world
Limón#7879: still no cache
Moojuiceman#5661: Should be
Limón#7879: so this?
Limón#7879: ```cs <[newline]> public class somethingmORe : LogicAPI.Server.ServerMod {} <[newline]>  <[newline]> public class CoolGate : LogicComponent <[newline]> { <[newline]>     protected override void DoLogicUpdate() <[newline]>     { <[newline]>         base.Outputs[0].On = true; <[newline]>     } <[newline]> }```
Moojuiceman#5661: You just add the servermod as well
Moojuiceman#5661: Any other class, like what's there already
Limón#7879: what has the gate code in it then
Moojuiceman#5661: Servermod doesn't have the gate code in, you just need one in there for the file to parse and be built
Limón#7879: ```cs <[newline]> public class somethingmORe : LogicAPI.Server.ServerMod { <[newline]>     void DoLogicUpdate() { <[newline]>         base.Outputs[0].On = true; <[newline]>     } <[newline]> }```
Limón#7879: nothing actually
Moojuiceman#5661: Look in the server folder, should be a cache now
Limón#7879: no errors
Limón#7879: it does nothing
Limón#7879: with no logicCode in the succ
Limón#7879: when I have it like this
Moojuiceman#5661: Didn't have to change it. But we're still at the "logicCode" problem
Limón#7879: but no &
Limón#7879: and()
Limón#7879: yeah
FalsePattern#7777: i couldn't manage to make dual-variable functions to work (and, or, xor, etc.)
FalsePattern#7777: writing an inverter in lsx works
FalsePattern#7777: lsx files
Limón#7879: what did you do o.o
FalsePattern#7777: ah
Limón#7879: what's your succ file look like?
Doctor Stupid#9197: thats exciting stuff. i'm thinking ocilliscope panels, and something like maybe a lua intreprater text panel or perhaps maybe a z80 cpu w/ editor panel
Moojuiceman#5661: Sure
oddron#8955: Is it feasible to use this capability to help with bug-fixing?
Moojuiceman#5661: You should be able to derive from anything, and make it do anything. You're inside the game at that point
Doctor Stupid#9197: so with this working, can you derive from the text panel component?
Moojuiceman#5661: I might just make a bep version anyway since that should be super simple, and let you all start making things that end users could use without editing dlls themselves
Doctor Stupid#9197: fun stuff <@!437296986593427458> !
FalsePattern#7777: 
Moojuiceman#5661: Could segue into a bep loader instead, but I want this to work somewhat officially
cheese3660#8641: Oh gosh, dll injection, fun times
Moojuiceman#5661: Yeah I'm still working on the "proper" way. But you can inject anything you want for now
DADp#7461: yea ok
DADp#7461: oph
FalsePattern#7777: inject this code into `Server.dll`
FalsePattern#7777: 
DADp#7461: show
DADp#7461: 🤨
FalsePattern#7777: alright, i think i figured out dll-based modding <[newline]> (full adder prototype)
Doctor Stupid#9197: welp i've read it up and down and i got nothin. i think it could be implemented better (probably) but the null ref is hiding itself pretty well. to get any deeper i'd need to fire up a debugger and step through with some test values and i've got to get back to work coding
DADp#7461: <:thunking:446109191392985108> mm yes this makes sense
Limón#7879: C# dlls hurt me
Doctor Stupid#9197: more or less the only option if  you want to rebuild it from the decompiltion
Doctor Stupid#9197: rename it to a legal identifier
Moojuiceman#5661: 
Doctor Stupid#9197: it guantees it can create types that will never conflict with user created types
Moojuiceman#5661: Yeah but dnspy doesn't let me edit it anymore because it complains about <>
Moojuiceman#5661: No it's passing it in, but somewhere in there it hits a nullref. This whole thing is inside a tryparse, and if an exception happens it just says false and moves on to try parse as shortcut (which I don't think we want)
Doctor Stupid#9197: `CS$<>8__locals1` is fine. it's a valid type name in the runtime, just not a valid identifier that a user can type. the compiler does this automatically.
Doctor Stupid#9197: but i mean that much is obvious
Doctor Stupid#9197: i suspect either the mod loading code is not passing your type name in at all, notice no null guard around the `typeName` before touching it  on line 55... <[newline]>  <[newline]> or there's a bug in the parsing logic
Moojuiceman#5661: Yes, in C#. But once it gets to IL and back (which is what dnSpy sees) it gets all "CS$<>8__locals1" ified
Doctor Stupid#9197: its a perfecly valid syntax for creating a new stack<t>
Moojuiceman#5661: Why not?
Moojuiceman#5661: There's like 20 layers of "is this a type I recognise" buried underneath it all
Doctor Stupid#9197: no that can't be the issue
Doctor Stupid#9197: instead of trying to parse the string value of the type to determine the generic arguemnt type names
Doctor Stupid#9197: seems like you could just search for the type by name, if found reflect to get the generic argument types, then call the makegeneric
Moojuiceman#5661: LINQ, sometimes I love you but sometimes...
Moojuiceman#5661: **var** typeStack = new Stack<ParsingType>(); <[newline]> I bet these 3 letters are 90% of the damn problem and why I can't just dnSpy edit it
Doctor Stupid#9197: ooook i see what its doing.... it does seem a sort of weird method though
Limón#7879: Indirectly
Doctor Stupid#9197: ew gross super old inner method syntax 😛
Limón#7879: Then we can say the dev helped us with modding
Limón#7879: If you figure this out
Doctor Stupid#9197: no debug environment in front of me atm though
Doctor Stupid#9197: thats a link directly to the method
Moojuiceman#5661: Idgaf what they use it for. I can just clone this, see what that method is *supposed* to do, or even edit it to log useful stuff and replace what the game uses
Limón#7879: There is no client side things yet
Doctor Stupid#9197: https://github.com/JimmyCushnie/SUCC/blob/d4357bdd65038442c72541d4db0357603aea2563/SUCC/Parsing%20Logic/Types/Base%20Types/Built-in%20base%20type%20logics/BaseTypeLogic_Type.cs#L53
Limón#7879: Yeah
FalsePattern#7777: hmmm... c# code is only needed serverside, right?
Limón#7879: But not what they use it for is most likely
Limón#7879: Succ interpreter or whatever it is
DADp#7461: https://github.com/JimmyCushnie/SUCC
DADp#7461: yes
Moojuiceman#5661: Wait a fuckin minute... Isn't the succ stuff open sourced already?
Limón#7879: They're the same thing in some case :p
Moojuiceman#5661: Or stupid
Limón#7879: You are brave for going through this code
Moojuiceman#5661: They won't mean anything since I'm editing stuff, and the lines won't match with what the exception says either
Doctor Stupid#9197: can you include line numbers there ? 😄
Limón#7879: 😭
Moojuiceman#5661: See that logging at the top? I had to IL that in
Limón#7879: So
Limón#7879: It looks
Moojuiceman#5661: Have fun with this shit
Doctor Stupid#9197: its impossible to really say without knowing what that method is doing
Doctor Stupid#9197: `BaseTypeLogic.ParseItem`
Limón#7879: So it doesn't exist?
Limón#7879: Oh
Moojuiceman#5661: Well a nullref / "not set to an instance of an object" is basically when you try to do a item.method call but item is null
Doctor Stupid#9197: should be in ilspy
Doctor Stupid#9197: can you dig up the source for that function?
Limón#7879: The error message isn't that descriptive to me ig
Limón#7879: I mainly work with rust now
Limón#7879: Nope
Moojuiceman#5661: You do much c# dev in general?
Limón#7879: The errors are so vague to me
Limón#7879: I don't know what the error is
Limón#7879: Based
Moojuiceman#5661: 
Moojuiceman#5661: 
Limón#7879: I don't know if I am smarter but I'll jump in when I get home
Moojuiceman#5661: If someone smarter than me wants to jump in that'd be great...
Limón#7879: Maybe we'll have c# modding done before Jimmy
Limón#7879: Well at least you are getting somewhere
Limón#7879: Not surprised but surprised
Moojuiceman#5661: Still fails with the componentInfo error, but it has loaded and built the assembly. It's just the logicCode pointing at something. If you point it to another gate it still builds fine
Limón#7879: What the fuck
Moojuiceman#5661: code goes in "GameData/<modname>/src/server/" <[newline]> put your .cs (NOT .csx) files in there <[newline]> Inside your .cs file include a <[newline]> ``` <[newline]> public class MyMod : LogicAPI.Server.ServerMod { } <[newline]> ```
Limón#7879: I feel like the hardest part is trying to understand the structure of the project and where things are
Moojuiceman#5661: Work out the format and file system it's expecting
Limón#7879: What did you have to do to achieve that?
Limón#7879: That's really good
Limón#7879: 🤩
Moojuiceman#5661: Right now I'm editing the dlls for logging purposes. But without modding the actual load logic I've got it to read the gamedata folder and compile our custom c# into an assembly
FalsePattern#7777: ah
Limón#7879: And it works
Limón#7879: I did that already
Limón#7879: Or is this all just editing dlls
FalsePattern#7777: i wonder if custom logic could be done with a dll loader, TUNG modding style
Limón#7879: Did you add any of the tools you were talking about
Moojuiceman#5661: Oh I'm past that point. The issue is linking the gate logiccode to an actual class. If you point it at something built in then it works fine
Limón#7879: If we have a different starting point we could literally do anything
Limón#7879: From Server
Limón#7879: I want to find the thing that loads the file
Limón#7879: Modding is funny
Limón#7879: That's amazing
Moojuiceman#5661: Fuck knows. It's a nullref. So literally anything**.**something could be the failure
Limón#7879: I am guessing loading files maybe
Limón#7879: Or related to
Limón#7879: What's the null ref for
Moojuiceman#5661: Yeah, turning our namspace.class into an object
Limón#7879: Is it for logiccode?
Limón#7879: What's it for?
Limón#7879: Long name
Moojuiceman#5661: SUCC.BuiltInBaseTypeRules.TypeStrings.ParseCsharpTypeName(string)
Limón#7879: Which class/namespace
Moojuiceman#5661: Eeyup
Limón#7879: In one if the LW dlls?
Moojuiceman#5661: Don't you just love it when there's a null ref somewhere in 53 lines of uneditable code
Moojuiceman#5661: FML
DADp#7461: good enough
Limón#7879: I just archived it, so that should be good
DADp#7461: *if they can*
DADp#7461: or a mod deletes it
DADp#7461: just ganna let the bottom one die
DADp#7461: nah
Limón#7879: I don't think I can delete them either
DADp#7461: use top one
Limón#7879: Discord mobile 😔
Moojuiceman#5661: It's called multithreading? It's for performance
Limón#7879: WHY???
DADp#7461: <@!859806257774723102> lmao 2 threads
Limón#7879: C Modding
DADp#7461: abstract suntax tree
DADp#7461: ah yes
Limón#7879: The closest thing I can think of is that doc and my syntax highlighter plugin (which uses regex)
Limón#7879: But no I don't think there is anything like this available to us
Doctor Stupid#9197: abstract syntax tree
Limón#7879: Looks like a binary tree
Doctor Stupid#9197: https://medium.com/@santoshsingh.codeguru/creating-external-dsls-using-antlr-and-c-98677c04a750
Limón#7879: So idk what it looks like
Limón#7879: I can't view that rn
Doctor Stupid#9197: it formally defines the syntax of the language. you could take it and machine generate a .net parser for instance https://tomassetti.me/getting-started-with-antlr-in-csharp/
Limón#7879: What is a grammar definition
Doctor Stupid#9197: i was thinking more like a antlr4 formal grammar definition
Limón#7879: I mean there is a doc saying the syntax
Doctor Stupid#9197: i wonder if a formal grammar definition for succ exists....
Limón#7879: In some aspects
Limón#7879: Weird
Limón#7879: This language is very
Moojuiceman#5661: I'm much more interested in getting c# to work instead. I'm way more familiar with reverse engineering and modifying c# than using a newly made up parsed language
Limón#7879: Can't wait for C# modding
Moojuiceman#5661: If you bit flipped it then it would be the same but backwards, and presumably only in[1] would do anything
Moojuiceman#5661: I meant flipping the switch I attached to it, not bit flipping
Limón#7879: I think it would be
Limón#7879: Idk if that would still be nand
Limón#7879: Could you flip in itself
Moojuiceman#5661: Tried doing in 2 steps to avoid brackets, still no luck
Moojuiceman#5661: Nope, any () made it explode it seemed
Limón#7879: I can't test right now so who knows
Limón#7879: Maybe out = !(and(in)) would've worked
Limón#7879: Very buggy
Limón#7879: Weird
Moojuiceman#5661: Essentially out would match in[0], in[1] did nothing at all when flipping it
JC Denton#9567: So and(in) works, thank you 🙂
Moojuiceman#5661: That's what I was doing and it no work :(
Limón#7879: So you could've done out = !and(in)
Limón#7879: Unary operators work at least
Moojuiceman#5661: So my assumption when making my nand was that in is an array, hence in[0] etc. And the and(1010) example applied to in would be an and of in[0] and in[1] since only 2 inputs. But it wasn't reading the second input properly at all
DADp#7461: ill help
Limón#7879: So that the official docs don't confuse people
Limón#7879: I am working on writing a doc currently
JC Denton#9567: well thought it would be a minor fix but that is right
Limón#7879: It only works in when and if statements
Moojuiceman#5661: Modding isn't official yet, so no docs and no support
DADp#7461: devs got bigger problems than modding support rn
Limón#7879: Yes I know
JC Denton#9567: what 🤨
Moojuiceman#5661: It *should* be doing a bitwise and
Moojuiceman#5661: Do you know it doesn't work? Like from experience
Limón#7879: Not yet
DADp#7461: it wont
Limón#7879: And(in[0..2]) and the first 2 inputs
JC Denton#9567: the guide should be updated then
Moojuiceman#5661: You would, but we're talking about inside logicscript, what if a variable (or input/output) is actually multiple bits
JC Denton#9567: then you can't select which inputs
Moojuiceman#5661: Been in work meeting, but let me reply to some things
Limón#7879: & doesn't work in normal expressions
Limón#7879: Use and(in)
Limón#7879: Don't use &
DADp#7461: .
JC Denton#9567: ?
DADp#7461: read pins 🙂
JC Denton#9567: don't people start off from that? And if it doesn't work any & operation probably doesn't
JC Denton#9567: but seriously how is it possible that the guide example doesn't work 😂
DADp#7461: but im pretty sure now that we are injecting it *might* be possible
DADp#7461: had a whole problem with that
DADp#7461: this uses dynamic inputs, but devs say that its not fully supported
Riku#9814: Hmm I think the devs made sockets for that purpose in a way. So that it encourages you to build interfaces instead. Though I still haven't fully realized the utilities of sockets yet
JC Denton#9567: it's transferring numbers through wires
JC Denton#9567: But that is kind of weird in this kind of a game
JC Denton#9567: Would be useful to connect just one pin to another instead of multiple pins to multiple pins 😃
Riku#9814: Wait so why not just use more pins? <:thonking:432741465844875264>
JC Denton#9567: Ahh. 😦
Moojuiceman#5661: Doesn't work yet, that's what we've been trying to hack together
Moojuiceman#5661: That's multiple pins, but still only 1 bit per pin. Rather than multi-bit per pin
JC Denton#9567: I have some experience of C# with Unity
JC Denton#9567: I wonder should I try with C# if that is possible
Riku#9814: Ik I'm not really part of the discussion, but the screen item lets you choose the amount of inputs to use. So it's in the engine somewhere
Moojuiceman#5661: Not sure you can, at least with the gates. But with logicscript I don't know
JC Denton#9567: though I didn't know you can have multi bit output or input in this game
JC Denton#9567: Even if it was multiple bits for inputs and outputs it should still work?
Moojuiceman#5661: That was before I even came here or knew there was "real" docs. I was just guessing from the dev video
Moojuiceman#5661: Nope, but I only tried for a bit before giving up thinking I was just an idiot
JC Denton#9567: So you've had no luck with logic script whatsoever?
Moojuiceman#5661: If they were then my attempt at a nand should have worked, but I was getting really weird behaviour
JC Denton#9567: though I really wonder why the guide example wouldn't work
JC Denton#9567: but that could make sense
JC Denton#9567: they should be?
Moojuiceman#5661: But I have my doubts on that assumption
Moojuiceman#5661: Now if we assume both inputs are 1 bit, then yes
Moojuiceman#5661: Well technically it isn't... It's a bitwise and of the 2 inputs
JC Denton#9567: it's AND gate
JC Denton#9567: This is https://docs.logicworld.net/articles/intro.html
Moojuiceman#5661: What gate logic are you trying to make? As in what was your reasoning for the & originally
JC Denton#9567: I thought that in[1] was out of bounds but it means something different then
JC Denton#9567: What is going on. It works with out[0] = in[1]
Moojuiceman#5661: The 1 line thing is because the file is read as a multline string, then parsed into custom language. Depending on the parser it's possible "blank" lines actually make a difference
Moojuiceman#5661: So it should be possible to have multiple inputs and index them without getting that index error, but whether they actually work
Moojuiceman#5661: So when I tried logicscript I had 2 inputs, and I could use either with in[0] or in[1], but couldn't get my actual logic to work using both inputs
JC Denton#9567: I guess so?
JC Denton#9567: 
JC Denton#9567: It runs but doesn't fix the problem
Moojuiceman#5661: Did you define 2 inputs?
JC Denton#9567: Removed in[1] and now it works
Moojuiceman#5661: Random idea. Have 1 blank line at the end of the file
JC Denton#9567: 
JC Denton#9567: Now I am getting an endless `ERROR | [Server] System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection. (Parameter 'index')`
JC Denton#9567: Apparently removing two blank lines at the end of the file did something
JC Denton#9567: of course I am doing in it single player 😅
DADp#7461: <@108289447799308288> also i would test the mod in single player before moving it to multiplayer
DADp#7461: yea idk the problem
DADp#7461: huh.
DADp#7461: hmmmmm
JC Denton#9567: 
DADp#7461: show your andgate.lsx file here
JC Denton#9567: Seems it can't find andgate.lsx because it didn't compile due to `Error at 4:2: expected case, found EOF` but not sure what this means
Limón#7879: Injected into the server.dll
Limón#7879: With just one class
Limón#7879: You could run other dlls based on id (if id exists)
Moojuiceman#5661: Which... In theory means my bep mod would be "1: load the plugin. 2: have a cup of tea "
Limón#7879: With that knowledge you could probably do a lot
Moojuiceman#5661: So yeah the problem is class injection/loading
Limón#7879: Yes
Moojuiceman#5661: ^
Moojuiceman#5661: Did you end up with a succ file that used "logicCode: namespace.class"
Limón#7879: And set the logicCode to LogicWorld.LogicCode.ClassName
Limón#7879: Then I saved it
Limón#7879: Into the dologic method
Limón#7879: Then added base.outputs[0].On = true
Limón#7879: Made that class follow all of the other logic gates classes
Limón#7879: And then added a class
Limón#7879: I used dnSpy to open the server file
Limón#7879: The process is pretty simple
Moojuiceman#5661: If I knew what you did, I could bep-ify that
Moojuiceman#5661: Would need to co-op with you, since you're the one who got an injected gate working
DADp#7461: just make sure that the server has the mod
JC Denton#9567: Anyway does somebody know why `logicScript: andgate` does not find `andgate.lsx` ?
Limón#7879: That would be good
DADp#7461: mmmmm
JC Denton#9567: it's every 5 minutes if I remember correctly
DADp#7461: its a monster at backups wen i needed them, not sure thr timing
Limón#7879: Loss of progress is not fun
JC Denton#9567: that way you could have much more RAM
JC Denton#9567: I would like to make a 8-bit register mod to make a register use far less components
DADp#7461: game auto backups
JC Denton#9567: you can always backup?
Limón#7879: Everything you can do with mods you can do with gates that already exist
Limón#7879: So i would assume it's not worth the risk
DADp#7461: yep
Limón#7879: I've heard many crashes and corruptions from mods
DADp#7461: they do but its buggy
JC Denton#9567: I tried the getting started example and got ```ystem.Collections.Generic.KeyNotFoundException: Script andgate not found```
Limón#7879: I don't think so
DADp#7461: hmmmm
Moojuiceman#5661: What aspect do you want progress on? Cause making a bep loader is still a possibility
Moojuiceman#5661: May have been going down the wrong path. As in one that I think would work to get code in the game, but isn't really "fixing the csx system"
DADp#7461: <@244503493996445697> progress if any?
JC Denton#9567: Do mods work in multiplayer?
Limón#7879: Maybe
Limón#7879: And would be easier than what I wanted to do
Limón#7879: It would definitely allow for much more
Moojuiceman#5661: Maybe. If my theories so far are right then I'd just need to make a mod that updates the modloader function, then let the games internal system handle the rest
Limón#7879: The game to support loading of csx
Moojuiceman#5661: Edit how? You mean change your mod logic and reload it while game is running?
Limón#7879: It seems like a chore to edit it
Limón#7879: I like that too but
Moojuiceman#5661: But I like the system of in game compiling csx and loading it in a way it knows how to use. Needs more upfront work though
Moojuiceman#5661: I mean, if you just want a mod in there you can inject it yourself. Next level up is a way to inject stuff that you write separately. But issues with the game knowing "this is a gate, I need to call it's do logic function" etc. Since you already got that bit somehow we could combine stuff so you can distribute injectables in your format, without having to share game code
Limón#7879: I was thinking just making a modified server.dll and making it run another function in a dll and you can edit that
Limón#7879: I can't do it rn since I am at school
Limón#7879: Yeah
Moojuiceman#5661: Would you be willing to help figure out format stuff if I got your loader working? That's a fairly easy change you could inject yourself, or I can try to make the bep version but that's going to take longer
Limón#7879: C# would be 10x better
Limón#7879: It's very finnicky
Limón#7879: Yeah logicScript works sometimes
Moojuiceman#5661: Although I couldn't get mine to. Probably my fault on use rather than the system being borked
Moojuiceman#5661: I think logicScript ones work normally right?
Limón#7879: Yeah
JC Denton#9567: But you can of course run mods in game?
Moojuiceman#5661: Modding isn't officially in. We're here trying to make it work. See pins for what we know so far, if you're any good with C# modding
JC Denton#9567: Do people post mods somewhere? Can somebody share a RAM mod if there is one?
Moojuiceman#5661: Well, I fixed the loader I think. Figuring out format stuff is the hard part
Moojuiceman#5661: As in I doubt my abilities to accomplish that
Limón#7879: Problem with that wording?
Limón#7879: The flood gates are open
Moojuiceman#5661: "If"
Limón#7879: If you fix that
Limón#7879: That sounds very useful
Moojuiceman#5661: I used to use UnityModManager, but with that you had to configure entrypoints and use mod manifests etc. bep just works, by magic I presume
Moojuiceman#5661: You drop it in with the game, stick your dll in the plugins folder, and it patches the game using HarmonyX
Moojuiceman#5661: It's a mod loader system
Limón#7879: What is bepinex
Moojuiceman#5661: My aim currently is to make a bep mod, that fixes the csx loader, while figuring out the format for a csx mod. Then we'll have the "intended" way, and it'll actually load
Moojuiceman#5661: Just use BepInEx
Limón#7879: For c#
Limón#7879: I think with this stance I will make a jank mod loader
Limón#7879: That is true
Moojuiceman#5661: You could argue that reverse engineering breaks whatever terms, but we've been doing that pretty openly and we're all still here
Moojuiceman#5661: Would depend if you're distributing the game files no? If you edit it and provide the whole thing as the mod, then you're sharing proprietary code. But if you distribute a patch for the main game, it's only your code so it's fine (if frowned upon by some)
Limón#7879: Modding this game makes me want to get back into modding other games
Limón#7879: Are we allowed to edit dlls for modding purposes, because that could be illegal since I see no license so all rights reserved is assumed
Stenodyon#8192: There are resources in the pinned messages
Control#8680: How does one mod the game
Jimmy#8080: When I say "not supported" I mean "we won't help you with it, use at your own risk"
Jimmy#8080: We've been working on modding since 2018, so lots of systems for it are in place, but the mod support isn't finished yet. People are discovering these systems and playing with them, but there are limitations and issues and bugs.
JC Denton#9567: Where can I find mods? Has anybody implemented a RAM mod? Also what does mean that modding is not supported? Does it mean that you can still add mods to the game?
pipe01#7194: It's so fun watching you guys try to mod the game, it's like when I modded TUNG
Limón#7879: instead of just defaulting to Server.dll
Limón#7879: `Server.eclipse`
Limón#7879: it would be more functional if it was
musashi#0210: cringe
ieee 802.11ac#6337: i said next time
Jimmy#8080: see the pinned message :P
Moojuiceman#5661: 
Moojuiceman#5661: Imma call it for tonight. But here's my log after moving the "load assembly" before the "check for assembly"
Moojuiceman#5661: Can't just edit the c# cause dnspy complains about iterators and <>
Moojuiceman#5661: And here I am at 3am trying to work out the IL for "foreach in array, print var.tostring"
DADp#7461: flawed coded smh 🙄
Moojuiceman#5661: Technically you need to put your csx in src/server or src/client (but don't use client because it only loads server)
Moojuiceman#5661: "ComponentInfo", it's trying to load an object of that type from the given succ, but it fails because reasons
Moojuiceman#5661: Nah, keep reading down that line
DADp#7461: are we suppose to put this in "shared" folder
DADp#7461: why is it getting angry about shared code
DADp#7461: <:thonking:432741465844875264> :
ieee 802.11ac#6337: in one of the vcs
ieee 802.11ac#6337: didn't somebody crack open wireshark the other day
DADp#7461: we are the cheeky hackers
ieee 802.11ac#6337: there's a reason my nickname ends in ">:)"
DADp#7461: 💀 we are still doing it
DADp#7461: yes
musashi#0210: yall were told 💀
DADp#7461: sh
musashi#0210: https://discord.com/channels/401255675264761866/901659878869844048/901659995429556224 like
DADp#7461: shhhhhhhhh
ieee 802.11ac#6337: because officially added mods would have been UNIT TESTED
ieee 802.11ac#6337: yeah we figured that out on our own
musashi#0210: mods arent even officially added tho
ieee 802.11ac#6337: <@!154964593397989376> write functional software next time
Moojuiceman#5661: But it hasn't compiled/loaded your assembly yet, so it doesn't exist
Moojuiceman#5661: I mean type as in typeof(MyCustomGate), since it looks for types in loaded assemblies
cheese3660#8641: ahh, i was wondering what set the type looking at thr code
Moojuiceman#5661: So you wanna load a csx mod type? Ok well first let me check if there's an assembly. What sets the "is there an assembly" flag? Why loading the mod type of course
ieee 802.11ac#6337: i meant like "be more specific"
cheese3660#8641: how so
Limón#7879: wait what, what then
ieee 802.11ac#6337: that's not what i meant by what
Limón#7879: we could never load the file
Limón#7879: they are saying even if we figured out how
ieee 802.11ac#6337: wait what
Moojuiceman#5661: Even if we guessed the right formats, it wouldn't load
Moojuiceman#5661: TLDR there's a chicken and egg problem, on top of trying to figure out the right succ /csx formats
Limón#7879: I just edited the Server.dll
Moojuiceman#5661: (I'm reversing it)
Moojuiceman#5661: Only because the modload order is wrong
Limón#7879: there is no other way
Moojuiceman#5661: Boo, that's cheating
Limón#7879: 
Limón#7879: injecting
Moojuiceman#5661: How
Limón#7879: yeah
Moojuiceman#5661: And it worked?
Limón#7879: Just made C# mod
Limón#7879: https://stackoverflow.com/questions/4090491/how-to-get-the-first-element-of-an-array
Limón#7879: 
Stenodyon#8192: oh I think iso was referring to "usable" and not "0 indexed" lol
Limón#7879: I don't think it is
Stenodyon#8192: js is 1 indexed ?
ieee 802.11ac#6337: js users <:bobby_sob:692807893023588363>
Limón#7879: lua users: 😭
ieee 802.11ac#6337: yeah because it's 0 indexed because it's a usable language
DADp#7461: for 2 inputs
DADp#7461: its in[0] then in[1]
DADp#7461: also accurate
DADp#7461: wait
DADp#7461: accurate
Limón#7879: for a component that has 2 inputs
Limón#7879: you can't do in[2]
DADp#7461: what the correct ammount <:thonking:432741465844875264>
Limón#7879: if they have the correct amount of inputs
Limón#7879: you can load existing things
Limón#7879: and it makes me 😭
Limón#7879: it's that it's bad
Limón#7879: what I have figured out
Limón#7879: ok
cheese3660#8641: i'll look at this more tomorrow prolly thne
cheese3660#8641: hmm
ieee 802.11ac#6337: 
Limón#7879: 
ieee 802.11ac#6337: that is the fixed commit
Limón#7879: nope
cheese3660#8641: is there any logs from ```ModCompiler```?
DADp#7461: or we are ass
ieee 802.11ac#6337: ok so logicCode is actually just broken
DADp#7461: 🙄
ieee 802.11ac#6337: so that it's logicCode
ieee 802.11ac#6337: i fixed it again
DADp#7461: thats the fixed one
DADp#7461: i got the "fixed one"
ieee 802.11ac#6337: i fixed it
ieee 802.11ac#6337: yeah old i know
DADp#7461: <@!487413285403099136> : *old repo*
ieee 802.11ac#6337: bad news <[newline]> adding `using LogicWorld.Server.Circuitry;` doesn't fix it
cheese3660#8641: whats the name of the csx file
Moojuiceman#5661: Does your succ say logicScript or logicCode
DADp#7461: legit stole the inverter
DADp#7461: ``` <[newline]> using LogicWorld.Server; <[newline]> using LogicWorld.LogicCode; <[newline]> namespace LogicWorld.LogicCode <[newline]>  <[newline]> { <[newline]>     public class HalfAdder : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate () <[newline]>         { <[newline]>             base.Outputs[0].On = !base.Inputs[0].On; <[newline]>         } <[newline]>     } <[newline]> } <[newline]> ```
Limón#7879: what does your csx file look like?
DADp#7461: 
DADp#7461: the code was messed up, i replaced it with inverter code
cheese3660#8641: So, the csx code in ```server``` should always be loaded
DADp#7461: so my game didnt crash
DADp#7461: ok
cheese3660#8641: Also, assemblies seem to always be loaded
DADp#7461: OH SHI
Limón#7879: now
Limón#7879: I see LogicCode (csx)
Limón#7879: nvm
Limón#7879: I am blind
Limón#7879: only LogicScript
cheese3660#8641: it should be attached
Limón#7879: I see no C#
ieee 802.11ac#6337: ooh spicy
Limón#7879: ieee 802.11ac
ieee 802.11ac#6337: the actual name is different from the repo name
ieee 802.11ac#6337: yeah? github.com/ieee802dot11ac/garbagemod
Moojuiceman#5661: You guys are reading a repo? I'm just looking at the old screenshots
ieee 802.11ac#6337: fix it
ieee 802.11ac#6337: there pushed
cheese3660#8641: Should Contain all the keys for a component SUCC file
ieee 802.11ac#6337: gimme a sec to push my local repo so i can fix it
DADp#7461: then push smh 🙄
ieee 802.11ac#6337: you're reading un-pushed code
ieee 802.11ac#6337: guys
DADp#7461: 9/10
Limón#7879: what if we are getting baited and it does nothing with the csx file
cheese3660#8641: the2 keys are "logicCode" and "logicScript"
cheese3660#8641: nevermind
cheese3660#8641: try logicCodeType: HalfAdder
cheese3660#8641: theres an error for having both logic code and logic script defined
Moojuiceman#5661: File name shouldn't matter though if it's using reflection as I imagine it has to when loading namespace.class
cheese3660#8641: wait
Limón#7879: that would make the most sense
Limón#7879: I think it would be hAdder.HalfAdder
DADp#7461: <@!487413285403099136>
Limón#7879: update
circuitgamer77#0377: What do you think will come first - performance update or performance mod?
cheese3660#8641: This might be useful, this is from the loading of components
Limón#7879: just Server.dll
Limón#7879: is LogicWorld.Server
DADp#7461: will sneeze over this code
ieee 802.11ac#6337: we're getting somewhere
Moojuiceman#5661: If you're not using anything from it, you don't need the using
Moojuiceman#5661: You'd only need whatever your code references
Limón#7879: oh
ieee 802.11ac#6337: i meant line 2
Limón#7879: I think
Limón#7879: library
Limón#7879: system is std
ieee 802.11ac#6337: because if it is i'm gonna kill someone
ieee 802.11ac#6337: hope this isn't another dll we need to include
cheese3660#8641: aight thanks
Moojuiceman#5661: You made a game about nerd stuff. Gotta expect us nerds to be the ones you attract
cheese3660#8641: lmao yeah
DADp#7461: keepin us in check
Limón#7879: gotta make sure we know we are cheeky little hackers
Jimmy#8080: I changed the order so it's the first pinned message again
Moojuiceman#5661: Try dnSpy
ieee 802.11ac#6337: jimmy it's still pinned
DADp#7461: ok jimmy
Jimmy#8080: 
cheese3660#8641: I was trying to look at the modloader, but ILSpy is kinda lacking in things I want, like control clicking to follow function definitions and automatic reading of dlls from workspace that contain the functions
ieee 802.11ac#6337: good news: the world doesn't crash <[newline]> bad news: the ghosts still exist
Limón#7879: unless someone figures it out
Limón#7879: it seems the only option now is to inject code 😔
Limón#7879: great name
ieee 802.11ac#6337: rate my sandbox name
Moojuiceman#5661: Idk, I prefer crashes to hangs
Limón#7879: that doesn't sound better
ieee 802.11ac#6337: it just crashed
ieee 802.11ac#6337: it didn't hang
ieee 802.11ac#6337: existing
Limón#7879: did you load an existing or user created file
DADp#7461: ~~thats fun to do~~
Limón#7879: it's from server.dll
ieee 802.11ac#6337: ~~because i placed down a modded component in a vanilla world~~
ieee 802.11ac#6337: i've had component type issues in the past
Moojuiceman#5661: I guess you guys might not know that component type is a thing used in the code since I was the only one desperate enough to chuck in every dll I could find
Moojuiceman#5661: "component of type numeric Id 0"
Moojuiceman#5661: And you probably don't want component type 0, since 0 or first enum is usually none
ieee 802.11ac#6337: i don;t know what component type 0 is
Moojuiceman#5661: But component type 0 might not have that
ieee 802.11ac#6337: i know for a fact i defined 2 outputs
ieee 802.11ac#6337: it still might be broken
Moojuiceman#5661: But it also crashed in loading the save, so I wonder if there's a borked circuit in there
DADp#7461: not crying over a file anymore
DADp#7461: it looks like inputs are messed up
Moojuiceman#5661: Does it break on starting a new world?
DADp#7461: LESS ERRORS <:dab:446109373849141258>
DADp#7461: POGPOG
DADp#7461: POG
ieee 802.11ac#6337: IT LOADED
ieee 802.11ac#6337: i'm bout to be!!!
Moojuiceman#5661: Not sure if required, guess you're testing that
Moojuiceman#5661: That's what I meant by full namespace in "official" definition
ieee 802.11ac#6337: was this the issue????
ieee 802.11ac#6337: motherfucker
ieee 802.11ac#6337: what file is that
ieee 802.11ac#6337: i.e. drag n drop
ieee 802.11ac#6337: <@!299685147220115457> i think you just throw the dll at it
ieee 802.11ac#6337: here's the log
Moojuiceman#5661: Logic script parser be like https://i.imgur.com/tptasOn_d.webp?maxwidth=640&shape=thumb&fidelity=medium
DADp#7461: have yall gotten csx working?
DADp#7461: O_O
ieee 802.11ac#6337: I GOT IN
cheese3660#8641: So ill look at the mod loader in a few mins
cheese3660#8641: Im almost home
ieee 802.11ac#6337: it kinda works
Limón#7879: 😳
Limón#7879: yeah logicScript calling a C# file
ieee 802.11ac#6337: 
Limón#7879: can you show succ file?
ieee 802.11ac#6337: here's the cursed ass code that led to this
cheese3660#8641: Aight, imma look at the mod loading when I get home
ieee 802.11ac#6337: i don't know
Limón#7879: what did you do
cheese3660#8641: Go slep
ieee 802.11ac#6337: now i have infinite loads
ieee 802.11ac#6337: before it just placed ghosts that i couldn't interact with or delete
ieee 802.11ac#6337: well now that's an issue
Moojuiceman#5661: I'd help more than vague conjecture, but I'm in bed on mobile and it's 11pm before a work day so...
Limón#7879: ilspy vscode extension
cheese3660#8641: What are yall using to look at the code btw?
Limón#7879: infinite loading?
cheese3660#8641: Cant join stream rn
cheese3660#8641: That might be the best idea
ieee 802.11ac#6337: check my stream in #pog
ieee 802.11ac#6337: ok well it doesn't crash but now i have a never before seen issue
Limón#7879: we can look at the mod loader if we wanted to see how
Moojuiceman#5661: My guess is that anything under client/server is loaded as c#, then succ is parsed and expects fields used by whatever internally defines a component
cheese3660#8641: Or the csx file
ieee 802.11ac#6337: it probably won't work but i don't care
cheese3660#8641: So how does it search for the mod
ieee 802.11ac#6337: let me try calling it via logicScript
Moojuiceman#5661: The exception is in succ parsing, so I doubt we're even at calling your method
cheese3660#8641: Prolly not tbh
cheese3660#8641: it might be logicCode, maybe try server see if that does anything?
ieee 802.11ac#6337: i hope it's not that
ieee 802.11ac#6337: you don't think it's the logicCode do you?
Limón#7879: ```css <[newline]> CoolGate: <[newline]>     column: "somethingmORe" <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 scale: (1, 1, 1) <[newline]>                 color: 1D2f8E <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>         outputs: <[newline]>             - <[newline]>                 position: (0.5, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0) <[newline]>     logicCode: test```
Limón#7879: since it says succ
Limón#7879: I think it might be related to succ
cheese3660#8641: Hmm, if we had the code for how mods were loaded
Limón#7879: ```cs <[newline]> public class CoolGate : LogicComponent <[newline]> { <[newline]>     protected override void DoLogicUpdate() <[newline]>     { <[newline]>         base.Outputs[0].On = true; <[newline]>     } <[newline]> } <[newline]> ``` this is also broken when this
ieee 802.11ac#6337: 
ieee 802.11ac#6337: it's still broken even without the namespace
ieee 802.11ac#6337: at least lsx had example code
Moojuiceman#5661: If it's a "can't find class" issue maybe namespace is to blame
Limón#7879: 😭
Limón#7879: if we had one c# example mod this would be easy
Moojuiceman#5661: Well the "official" definition does
cheese3660#8641: Or remove the namespace?
ieee 802.11ac#6337: why would i need to
Moojuiceman#5661: Did you change the succ to include namespace?
ieee 802.11ac#6337: bad news, that didn't fix it
cheese3660#8641: Though maybe the namespace mifht break it, so if it doesnt work try without namespace
ieee 802.11ac#6337: would be nice if the live debugger worked
Moojuiceman#5661: More colours is more good
ieee 802.11ac#6337: 
Limón#7879: oh
Limón#7879: what does it look like?
Limón#7879: modding
ieee 802.11ac#6337: the syntax highlighting not the script
ieee 802.11ac#6337: yeah it works now
cheese3660#8641: <:02Facepalm:789621432207671358>
cheese3660#8641: And the if and else
cheese3660#8641: Thats why doLogicUpdate was a wierd color
Moojuiceman#5661: We were distracted by the pretty colours of syntax highlighting
ieee 802.11ac#6337: i've been hacking this together through my barebones knowledge of c# and screenshots
cheese3660#8641: How did I not see that looking at the screenie
cheese3660#8641: Oh gosh
Moojuiceman#5661: Otherwise it's not a method
ieee 802.11ac#6337: > probably fucked this up
Moojuiceman#5661: Wait, shouldn't there be () on the method name?
ieee 802.11ac#6337: i'm trying it
Limón#7879: but maybe I should try it
Limón#7879: idk if we include the namespace
ieee 802.11ac#6337: gimme a sec to fix my code
ieee 802.11ac#6337: i knew i did something wrong
Limón#7879: ```cs <[newline]> namespace LogicWorld.LogicCode <[newline]> { <[newline]>     public class AndGate : LogicComponent <[newline]>     { <[newline]>         protected override void DoLogicUpdate() {} <[newline]>     } <[newline]> }```
ieee 802.11ac#6337: someone look at LogicCode again so we can see how to "properly" define a component's functionality
Moojuiceman#5661: Does LogicComponent include a ComponentInfo definition? Or should your class have one defined manually
Limón#7879: true
ieee 802.11ac#6337: that's really hacky though
Limón#7879: we could just inject C# code into the server and do it like that
cheese3660#8641: Hmm
ieee 802.11ac#6337: ok so it works fine if i never reference the file
ieee 802.11ac#6337: for a nonexistent class
ieee 802.11ac#6337: it might be looking in one of the dlls
cheese3660#8641: The errors in the succ parsing logic though?
Limón#7879: so that's good
Limón#7879: that means the file is being loaded
Limón#7879: `LogicAPI.ModLoadException: An error occurred while loading mod 'somethingmORe'`
ieee 802.11ac#6337: its current form
ieee 802.11ac#6337: ok i;m gonna try not referencing the csx at all and just acting like it doesn't exist minus the file
cheese3660#8641: What does the succ file look like for it?
Limón#7879: trial and error 😔
ieee 802.11ac#6337: at this point it's basic testing so that i know it's possible
Limón#7879: yes
ieee 802.11ac#6337: yeah it's not done
cheese3660#8641: Thats ... just an xor gate?
ieee 802.11ac#6337: i might be an idiot
ieee 802.11ac#6337: wait
ieee 802.11ac#6337: this is the entire file
ieee 802.11ac#6337: probably fucked this up but i'm too tired to care
Limón#7879: what your code look like
ieee 802.11ac#6337: 
Moojuiceman#5661: Just stick a throw in there. Then you'll know ;)
ieee 802.11ac#6337: lemme check console
Limón#7879: ¯\_(ツ)_/¯
Limón#7879: maybe it just ignores it if it errors
Limón#7879: that's why I don't even know if it's being loaded
ieee 802.11ac#6337: all i know is that the game didn't crash outright
ieee 802.11ac#6337: it didn't work but i'm not sure if that's just my ineptitude or not
ieee 802.11ac#6337: alright i just reimplemented part of the half adder into a c# script time to see if the game strokes out
Limón#7879: so I am going to see
Limón#7879: we are not even sure if anything gets ran in the server/client/shared folders
ieee 802.11ac#6337: got it
Limón#7879: and components go in server
Limón#7879: so I would assume that gui stuff goes in client/shared
Limón#7879: yeah
ieee 802.11ac#6337: because the official component code was found in the server files and therefore modded component code would also be on the server
ieee 802.11ac#6337: ok so component code would go in `server` right?
Limón#7879: and so is modding this game
Limón#7879: take all of this with a grain of salt because c# modding is very new
ieee 802.11ac#6337: bear in mind i'm an idiot and also i don't trust this documentation
Limón#7879: it would go in, `shared` or `client` or `server`
ieee 802.11ac#6337: so it'd go in `code`?
Limón#7879: logicScript is for lsx
Limón#7879: logicCode is for csx
Limón#7879: no
Limón#7879: to me at least
Limón#7879: yeah
ieee 802.11ac#6337: is that better
ieee 802.11ac#6337: "a .csx file used instead of a .lsx file"
Limón#7879: lieu?
ieee 802.11ac#6337: real quick because i'm hoping you guys know <[newline]> can i put csx files used in lieu of lsx files in `scripts`
Limón#7879: true
Moojuiceman#5661: Sure beats having to transpile IL
Limón#7879: it's very nice for modding
Limón#7879: everything is open mostly
Moojuiceman#5661: Kinda digging how "standard format" and extensible everything seemed
Moojuiceman#5661: Ionic zip is already in there
Limón#7879: or maybe no extra bytes
Limón#7879: zip archive with a few extra bytes of data
Limón#7879: that would be the easiest option at least
Limón#7879: I feel like that's just gonna be a zip archive
ieee 802.11ac#6337: so according to the docs there's gonna be a tool to convert to ".lwmod"
PLYSHKA#6201: it happens
Limón#7879: in one of the comments
Limón#7879: they spelled announcements wrong in config.succ
Limón#7879: Tne
ieee 802.11ac#6337: the LogicAPI docs are great
Limón#7879: sounds annoying
Limón#7879: lsx is the logicscript modding
cheese3660#8641: Ahh
PLYSHKA#6201: csx is c# scripts
Limón#7879: csx is the c# modding
ieee 802.11ac#6337: i think coffee was gonna try to make a c to lsx compiler
Limón#7879: kinda dox
PLYSHKA#6201: csx
Moojuiceman#5661: Only found the dev videos via a Google and guessing mod format from one
cheese3660#8641: Is it tho, LSX is limited from what I saw, like only 256 bits of memory
ieee 802.11ac#6337: https://docs.logicworld.net/articles/intro.html
PLYSHKA#6201: .
Moojuiceman#5661: I didn't know there were docs. No real info on Steam
PLYSHKA#6201: but to inject something it's not needed
PLYSHKA#6201: i mean, to look into sources sure
PLYSHKA#6201: why do you need to reverse engineer when docs already contain enough info about making mod
Moojuiceman#5661: "But I want it now!"
Stefan#5422: They are ... in a couple of months at most?
Limón#7879: so we have to reverse engineer
cheese3660#8641: So we make our own support
Limón#7879: they aren't gonna give us support
Moojuiceman#5661: Of course, we're nerds
Limón#7879: kinda
Limón#7879: yeah
cheese3660#8641: Ahh
Stefan#5422: Wait are you reverse engineering the game so you dont have to wait for official docs?
Moojuiceman#5661: Then refer to your logic like namespace.class
Moojuiceman#5661: I think you'd just define them in the succ
Limón#7879: automatic I presume
cheese3660#8641: Or is that automatic
cheese3660#8641: But what registers components and such?
Limón#7879: 
Limón#7879: DoLogicUpdate()
cheese3660#8641: ^
Moojuiceman#5661: Like main() or Awake() etc
Limón#7879: entry point?
cheese3660#8641: The thing is, what is the entry point for C# mods?
PLYSHKA#6201: no harmony required
Limón#7879: https://docs.logicworld.net/articles/mod-structure.html
PLYSHKA#6201: you can already place c#
PLYSHKA#6201: woah
cheese3660#8641: Ohh
Limón#7879: only
Limón#7879: LW
PLYSHKA#6201: is this for TUNG or it works for LW too
Moojuiceman#5661: It's using
Limón#7879: this
cheese3660#8641: That or import
cheese3660#8641: iirc
cheese3660#8641: using
ieee 802.11ac#6337: i don't remember how to write c# how do i include headers
cheese3660#8641: Hmm?
PLYSHKA#6201: by far most complex code was related to sockets and delayers
Limón#7879: natively
Limón#7879: they are already made
ieee 802.11ac#6337: yeah that's fair
DADp#7461: <:thonking:432741465844875264>
cheese3660#8641: More like libraries to make interfacing with the code easier
PLYSHKA#6201: Harmony was injected in tung
ieee 802.11ac#6337: just use a text editor with c# syntax highlighting
cheese3660#8641: C# modding tools wen
Moojuiceman#5661: Might say to hell with lsx and just bepinex it :)
PLYSHKA#6201: it's very simple strategy
PLYSHKA#6201: why having separate singleplayer and multiplayer and managing them when you can just make multiplayer only and limit players whenever you need
cheese3660#8641: Hell yeah
ieee 802.11ac#6337: fuck yeah, reverse engineering wins again
DADp#7461: pogging
Limón#7879: C# modding is possible
Limón#7879: well now
DADp#7461: i dont think
Moojuiceman#5661: Would flip on input 0, input 1 did nothing
DADp#7461: uhh the samer dll is in the managed folder
DADp#7461: i think
Moojuiceman#5661: Tried that, didn't work
PLYSHKA#6201: and localhost only
PLYSHKA#6201: just for 1 player
Limón#7879: ¯\_(ツ)_/¯
PLYSHKA#6201: singleplayer is multiplayer
ieee 802.11ac#6337: why would the client dlls have stuff that is done server side
Limón#7879: out = !and(in)
Limón#7879: not the server
Limón#7879: I assumed it would be in the actual game
Moojuiceman#5661: I wanted to make a nand but couldn't get the lsx and() to behave
Limón#7879: most likely
Limón#7879: this is true
PLYSHKA#6201: Keep in mind that it's pretty much a decompiler guess what he's tried to do, only based on IL opcodes
DADp#7461: being absoule idots and not looking in the server
Moojuiceman#5661: I can't be the first one here to find that can I?
DADp#7461: ```cs <[newline]> protected override void DoLogicUpdate() <[newline]> { <[newline]>     for (int i = 0; i < base.Inputs.Count; i++) <[newline]>     { <[newline]>         if (!base.Inputs[i].On) <[newline]>         { <[newline]>             base.Outputs[0].On = false; <[newline]>             return; <[newline]>         } <[newline]>     } <[newline]>     base.Outputs[0].On = true; <[newline]> } <[newline]> ```
PLYSHKA#6201: Dedicated server Server.dll library has everything
ieee 802.11ac#6337: we did it gamers
DADp#7461: !!!
Moojuiceman#5661: Possibly a cli version of the server like you see in some dev videos
Moojuiceman#5661: I haven't installed the dedicated server from steam tools section, not sure what's in there
Limón#7879: I thought they meant dedicated one
ieee 802.11ac#6337: literally <root LW folder>/Server
Moojuiceman#5661: Game runs on an internal server at all times
DADp#7461: yup
ieee 802.11ac#6337: well the game comes with it
Limón#7879: I don't even have the server installed
Limón#7879: thanks
Moojuiceman#5661: <@859806257774723102> <@124979684596252672> FYI check the server folder for more dll's, that's where the and gate code lives
asquared31415#0311: interestingly, it compiles source c# files
asquared31415#0311: There's definitely the framework to have custom user code here
Limón#7879: I saw that one
Duja#4503: There is one that has the Dragon easter egg in there
Limón#7879: or is there literally nothing
Limón#7879: is there anything in that
asquared31415#0311: a namespace
Limón#7879: is this in a dll?
asquared31415#0311: <:thonking:432741465844875264>
Miska#7569: ok thanks
Limón#7879: but it will work
Limón#7879: you will have to restart the game if you do it that way
Dragon Lord#6944: I'm pretty sure you can get to the mods folder by opening logic world and then pressing the mods button. There should be a folder button inside of that menu that will open the folder directly
Limón#7879: browse local files
Limón#7879: 
Miska#7569: wheres the gamedata folder located
Limón#7879: then unzip
Limón#7879: yeah
Limón#7879: 
Miska#7569: as zip
Limón#7879: download the whole thing
Miska#7569: these?
Limón#7879: Way to add mods currently <[newline]> 1. Download mod <[newline]> 1.5 Make sure it's extracted if it's a zip <[newline]> 2. Put it in gamedata folder <[newline]> 3. Enjoy
JoshuaSpeedy#3545: Someone should make a recourse pack, with music an textures
Limón#7879: so just download it
AKShredder8#2904: k
Limón#7879: add them to the gamedata folder
ieee 802.11ac#6337: i love how easy it is to add music
AKShredder8#2904: <@!859806257774723102>  how do i add the above to my game?
Limón#7879: https://github.com/LonnonDev/mOrecomponents
DADp#7461: it could be a different name for some rason
DADp#7461: atleast for the direct path
DADp#7461: in eother of those
DADp#7461: its not
asquared31415#0311: no it should all be managed
Doctor Stupid#9197: well that makes sense. i was hunting all over for those types last night 🙂
Duja#4503: I found this if you are interested looking deeper into it https://github.com/djkaty/Il2CppInspector
Duja#4503: Still learning OOP
Duja#4503: This is way above me anyway, I am still a beginner in programming
Limón#7879: it's basically impossible to get
Limón#7879: if it's in the executable
Duja#4503: I don't know
Limón#7879: so it's in the executable?
Duja#4503: 
Duja#4503: "The premise of IL2CPP is to take these assemblies, parse the IL, generate C++ equivalent source code from it, then compile this C++ into machine code for faster, unmanaged execution. This is described quite well on this page of the Unity manual with this diagram:"
Limón#7879: il2cpp?
Duja#4503: I think we cannot find the code is because he used the il2cpp method to deploy the game
Limón#7879: 
Limón#7879: some of these names are so dumb
Duja#4503: That should contain the classes, it is not there
Duja#4503: I think there needs to be a 'Assembly-CSharp.dll' in the Logic_World_Data\Managed folder
Limón#7879: not actually making the components
Limón#7879: the classes
Limón#7879: but like
Limón#7879: there is nothing in here
DADp#7461: bingo
Limón#7879: 
Duja#4503: Yeah, I agree
DADp#7461: it might be in shared data
Limón#7879: I don't think there is much we can do with modding (with c#) unless we find the components or slowly try and brute force a component out
Duja#4503: I was thinking same too
Limón#7879: but it is not
Limón#7879: I would think it would be in LogicWorld.dll
IsCoffeeTho#0001: also figured out that is the max of mem size
IsCoffeeTho#0001: this bad boy can store 256 bits
Duja#4503: as I understand
Duja#4503: It is not in the download files
Limón#7879: I don't think the game would run without it
Limón#7879: I just don't know where it is
Limón#7879: yeah I figured this out
Duja#4503: <@!859806257774723102> I believe the logic code is inside the following namespace ```LogicWorld.LogicCode``` but we do not have it available. Only the client side code is visible.
IsCoffeeTho#0001: if anyone wants to contribute to it, im happy to add them
IsCoffeeTho#0001: https://github.com/IsCoffeeTho/LWCommunityVersion
Limón#7879: or any of the other developers
Limón#7879: yeah I would love for jimmy to clarify
Limón#7879: so all rights reserved
Limón#7879: I don't think is a license
Limón#7879: that's why I should read the license
Limón#7879: yes I know
asquared31415#0311: distribution is always forbidden unless explicitly allowed
asquared31415#0311: doesn't matter
Limón#7879: if there is one
Limón#7879: maybe I should read the license
Limón#7879: I mean anyone with the game can access it
asquared31415#0311: and *especially* without explicit developer blessing to poke around for modding
asquared31415#0311: snippets maybe, but definitely not source files like that
asquared31415#0311: <@!859806257774723102> this probably isn't too bad, but sharing code is definitely in the legal gray realm especially since modding isn't fully supported
DADp#7461: fixes that issue https://discord.com/channels/401255675264761866/901634990171889746/901645911829131274
DADp#7461: found the variant info for the and gate
Limón#7879: I am going to take a break now
Limón#7879: logicworld.clientcode is where I found some
DADp#7461: those are c#
DADp#7461: well its the scripts
ieee 802.11ac#6337: i know they're defined in succ files (because i stole the full adder position data from the xor gate) but i have yet to find the code for them
DADp#7461: idk where they keep the logic gates at
DADp#7461: yea i was looking in some dlls last night
ieee 802.11ac#6337: cool
Limón#7879: ilspy vscode extension
Limón#7879: 
ieee 802.11ac#6337: what are you using to look inside dlls
ieee 802.11ac#6337: what are you using to look inside dlls
ieee 802.11ac#6337: what are you using to look inside dlls
musashi#0210: understandably named
Limón#7879: this is a great file
Limón#7879: you might be able to have mods as zip archives?
Limón#7879: right now I am trying to read the .dlls
Limón#7879: ill just change the file extension
ieee 802.11ac#6337: iirc you need to use .csx files
Limón#7879: I don't know if you even need .succ file
Limón#7879: are classes with bytes (might not be accurate)
Limón#7879: the component address and type
IsCoffeeTho#0001: 💰
IsCoffeeTho#0001: but if it is, or its close
IsCoffeeTho#0001: fair enough
Limón#7879: I still have no clue if this is how you would actually do it
IsCoffeeTho#0001: lets go
IsCoffeeTho#0001: and that would allow shit like dynamic to be useable
Limón#7879: this would be easier
Limón#7879: if I could get the code of one of the gates
Limón#7879: 
IsCoffeeTho#0001: 👀
Limón#7879: 
IsCoffeeTho#0001: if you do then it will make this modding thing a lot easier
Limón#7879: https://docs.logicworld.net/api/LogicAPI.html
Limón#7879: so I will try and go down that rabbit hole today
Limón#7879: and it shows that you can already do some things with C#
Limón#7879: I was looking in the guide
CrispyPin#1149: yes
Operu#6600: will you be able to code components with c# in the future
IsCoffeeTho#0001: all g
Duja#4503: <@!274012313785466881> Thanks I fixed the issue.
Duja#4503: ok
IsCoffeeTho#0001: just yet
IsCoffeeTho#0001: and also a fair warning, DO NOT USE mods in servers
IsCoffeeTho#0001: 
Duja#4503: okay, thanks
IsCoffeeTho#0001: ill send you my pack, ill just warn you that the communication chip is completely broken
Duja#4503: within my mod folder
Duja#4503: I made my own '''manifest.succ'''
IsCoffeeTho#0001: did you edit the `manifest.succ`
Duja#4503: hmm
IsCoffeeTho#0001: no i made my own folder
Duja#4503: I am guessing that you are editing the files within the MHG folder right?
Duja#4503: https://docs.logicworld.net/articles/intro.html
Duja#4503: Well a very very minimalistic one
IsCoffeeTho#0001: there is a guide?
Duja#4503: Because I followed the guide and when I start the game, I just get a black screen
Duja#4503: <@!274012313785466881> Did you create a separate mod folder for your mod, as per the guide?
IsCoffeeTho#0001: https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.succ-highlighter <[newline]> https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.logiscript
Pleezon#8867: What is that even
Jimmy#8080: That's fucking awesome and so smart
DADp#7461: <@!154964593397989376>
IsCoffeeTho#0001: pog
Jimmy#8080: will be fixed in 0.90.1
DADp#7461: as it will break the save
DADp#7461: now dont go putting random modded stuff on servers
Funky Egg#5652: Ty
Limón#7879: ``` <[newline]> any <[newline]>   out = and(in) <[newline]> end```
Funky Egg#5652: I’m on phone rn
Limón#7879: this
Funky Egg#5652: Does anyone have a example and gate script
Funky Egg#5652: I forgot to tab something
Funky Egg#5652: It’s a tabbing problem
Funky Egg#5652: I’m a idiot
Funky Egg#5652: Wait
DADp#7461: i got like
DADp#7461: also why do mod errors go to the negitives
Limón#7879: it's always a mod problem* <[newline]> (* most of the time)
DADp#7461: also probably a mod problem if modding
Limón#7879: logs
Funky Egg#5652: Can anyone help please
Funky Egg#5652: This error
DADp#7461: uh
IsCoffeeTho#0001: dont look in the `-server.txt` just look at the regular ones
DADp#7461: wot
Funky Egg#5652: Single player server error
Funky Egg#5652: No
DADp#7461: on the console
DADp#7461: what does the server say
Funky Egg#5652: Logs don’t help
Funky Egg#5652: Does anyone know how to fix error code 0 for server
DADp#7461: imma go eat food now
DADp#7461: clok
DADp#7461: yes
Limón#7879: clock
DADp#7461: 
IsCoffeeTho#0001: without needing a whole inverter
IsCoffeeTho#0001: meaning the register is useful for making shift registers and similar things
IsCoffeeTho#0001: the register updates the output on CLK low <[newline]> as the DLatch updates on CLK High
IsCoffeeTho#0001: i figured out one difference
DADp#7461: i wish it worked the other way tho
DADp#7461: so uh
Limón#7879: giving the register extra functionality would make it better
IsCoffeeTho#0001: heart shattered
Limón#7879: :)
Limón#7879: <@!274012313785466881> what's the difference between dlatch and register
DADp#7461: probably any programing lang
DADp#7461: so Python -> Logic world
DADp#7461: 
DADp#7461: i just wrote some python to change the script file
Limón#7879: that would be more insane
Limón#7879: does this update with the and gate?
DADp#7461: its pretty instant
DADp#7461: <@!859806257774723102> guess what i found!
IsCoffeeTho#0001: it only updates output on the fall of CLK
IsCoffeeTho#0001: ``` <[newline]> when in[1] <[newline]>   mem[0] = in[0] <[newline]> end <[newline]>  <[newline]> when !in[1] <[newline]>   mem[1] = mem[0] <[newline]> end <[newline]>  <[newline]> once <[newline]>   out = mem[1] <[newline]> end``` <[newline]> 1 bit register
IsCoffeeTho#0001: THIS IS A REVELOUTION
IsCoffeeTho#0001: bro
Limón#7879: ``` <[newline]> # rom <[newline]> when in[1] & !mem[0] <[newline]>     mem[0] = 1 <[newline]>     out = in[0] <[newline]> end```
Limón#7879: you have rom
Limón#7879: if you remove the once from your script I gave you
IsCoffeeTho#0001: WHAT?!?
Limón#7879: but once every simulation
Limón#7879: once runs not once at the start
IsCoffeeTho#0001: what happened
IsCoffeeTho#0001: oh god
Limón#7879: NO
Limón#7879: IT'S ALL A LIE
Limón#7879: IT'S ALL BAD
Limón#7879: something now
Limón#7879: this makes me quesiton
IsCoffeeTho#0001: a bit fucky but perfect
IsCoffeeTho#0001: this is perfect
IsCoffeeTho#0001: a clk signal and a bit to store
IsCoffeeTho#0001: this is exactly what i wanted
Limón#7879: I don't know what you want exactly
Limón#7879: if I am stupid
Limón#7879: I think it might actually be rom
Limón#7879: it's a modified version of my rom I am pretty sure
IsCoffeeTho#0001: now time to disect
DADp#7461: hmm imma do some testing
IsCoffeeTho#0001: that works like a treat
Limón#7879: I doubt
IsCoffeeTho#0001: yep
Funky Egg#5652: ? is that for my question
DADp#7461: <@!859806257774723102> i wonder if we can make a way to transfer data from outside of the game with script saving
IsCoffeeTho#0001: if it did then it wouldn't be outputting at all
Limón#7879: <@!274012313785466881>  <[newline]> ``` <[newline]> once <[newline]>   mem = 0 <[newline]> end <[newline]>  <[newline]> when in[1] & !mem[0] <[newline]>     mem[0] = 1 <[newline]>     out = in[0] <[newline]> end <[newline]> ```
Funky Egg#5652: does logic world only support tabs of 4 spaces
DADp#7461: well, i see a possibility
Jimmy#8080: making this my wallpaper
Limón#7879: the trinity
Limón#7879: 
Doctor Stupid#9197: its your disk 🙂
Funky Egg#5652: can i delete the old log
Limón#7879: in the title
Limón#7879: also it tells you the time
Limón#7879: sort by date modified
Funky Egg#5652: how do i tell the most recent log
Limón#7879: SteamLibrary/steamapps/common/Logic World/logs/
Doctor Stupid#9197: /logs
Funky Egg#5652: where can i find logs
Limón#7879: :)
Limón#7879: logs are your friends
Limón#7879: 
DADp#7461: well does that mean
Funky Egg#5652: please help the game just wont load
DADp#7461: oh neat
IsCoffeeTho#0001: but for components and prefabs restarting the game is required
DADp#7461: hmmmm
IsCoffeeTho#0001: for scripts i figured out that it auto reloads upon save
DADp#7461: <@!274012313785466881> are you restarting the game?
Funky Egg#5652: ``` <[newline]> AndGate: <[newline]>         column: Logic <[newline]>         prefab: <[newline]>                 blocks: <[newline]>                 - <[newline]>                         color: (0, 174, 209) <[newline]>                 inputs: <[newline]>                 - <[newline]>                         position: (-0.25, 0.5, -0.5) <[newline]>                         rotation: (-90, 0, 0) <[newline]>                         length: 0.6 <[newline]>                 - <[newline]>                         position: (0.25, 0.5, -0.5) <[newline]>                         rotation: (-90, 0, 0) <[newline]>                         length: 0.6 <[newline]>                 outputs: <[newline]>                 - <[newline]>                         position: (0, 0.5, 0.5) <[newline]>                         rotation: (90, 0, 0) <[newline]> ``` <[newline]> i dont see anything worng with this, is there
Limón#7879: and it would be in the future
Limón#7879: bc debugging rn is a nightmare
Jimmy#8080: that's a good idea, would be very useful for debugging. <@!128545421579517952> look at this (pipe is the creator of logicscript)
Limón#7879: do you have plans for printing in console with logicscript
Jimmy#8080: my plan for SUCC is to treat tab characters like 4 spaces
IsCoffeeTho#0001: so far <[newline]> ``` <[newline]> once <[newline]>   mem = 00 <[newline]> end <[newline]>  <[newline]> any <[newline]>   if in[1]          # CLK HIGH <[newline]>     mem[0] = in[0]  # save state <[newline]>   else              # CLK LOW <[newline]>     mem[1] = mem[0] # update state' <[newline]>   end <[newline]>   out = mem[1]      # output state' <[newline]>   update <[newline]> end```
Doctor Stupid#9197: hrm but then again, `[]` are also not array index accessors in the traditional sense <[newline]>  <[newline]> > Take a slice of bits from an expression. The start index is inclusive, while the end index is exclusive. The end index can be omitted, in which case the range will end at the end of the number. Both end and end are expressions.
IsCoffeeTho#0001: so the array def `mem = [0, 0]` throws errors (expectedly) <[newline]> `mem = 00` might work but the end result is still not correct
Doctor Stupid#9197: youd think it'd be defined by the input/output component definitions ie <[newline]>  <[newline]> >         inputs: <[newline]> >             - <[newline]> >                 position: (0, 0.862, -0.362) <[newline]> >                 rotation: (-45, 0, 0) <[newline]> >         outputs: <[newline]> >             - <[newline]> >                 position: (0, 0.784, 0.284) <[newline]> >                 rotation: (45, 0, 0)
DADp#7461: unless mem is some pre set size
Doctor Stupid#9197: could be
Limón#7879: mem is fucky
DADp#7461: maybe the lang changed?
Doctor Stupid#9197: the simple counter / d-latch examples have no `once` at all and still read/write to `mem` though?
Limón#7879: ``` <[newline]> once <[newline]>   mem = 00 <[newline]> end <[newline]>  <[newline]> any <[newline]>   if in[1] <[newline]>     mem[0] = in[0] <[newline]>   else  <[newline]>     mem[1] = mem[0] <[newline]>   end <[newline]>   out = mem[1] <[newline]>   update <[newline]> end```
Limón#7879: so when you activate in[1] it doesn't work?
IsCoffeeTho#0001: ill try the  array set
IsCoffeeTho#0001: ``` <[newline]> once <[newline]>   mem = 00 <[newline]> end <[newline]>  <[newline]> any <[newline]>   if in[1] == 1 <[newline]>     mem[0] = in[0] <[newline]>   else  <[newline]>     mem[1] = mem[0] <[newline]>   end <[newline]>   out = mem[1] <[newline]>   update <[newline]> end``` <[newline]> but it dont work still
Limón#7879: under the hood it's probably an array :P
DADp#7461: in once
DADp#7461: so its just defining the mem size
IsCoffeeTho#0001: i am scratchin my head
DADp#7461: imma guess that works?
DADp#7461: ``` <[newline]> once <[newline]>   mem = 00000000 <[newline]> end <[newline]> ```
Limón#7879: so mem = [0, 0]
DADp#7461: could you just do
DADp#7461: is it like an array
IsCoffeeTho#0001: ill try
Limón#7879: a list
Limón#7879: it would be
Limón#7879: I am guessing under the hood
Limón#7879: that's how I think it would work
DADp#7461: yes
DADp#7461: tf
IsCoffeeTho#0001: that __is__ fucky
Limón#7879: so it has 2 bits
Limón#7879: mem = 00
Limón#7879: you should declare mem as
IsCoffeeTho#0001: ``` <[newline]> once <[newline]>   mem[0] = 0 <[newline]>   mem[1] = 0 <[newline]> end <[newline]>  <[newline]> any <[newline]>   if in[1] == 1 <[newline]>     mem[0] = in[0] <[newline]>   else  <[newline]>     mem[1] = mem[0] <[newline]>   end <[newline]>   out = mem[1] <[newline]>   update <[newline]> end```
IsCoffeeTho#0001: it still isn't workin
IsCoffeeTho#0001: what if <[newline]> hear me out
DADp#7461: that sounds fucky
Limón#7879: but without the once will not
Limón#7879: will allow you to do mem[0]
Limón#7879: ``` <[newline]> once <[newline]>   mem = 0 <[newline]> end <[newline]> ```
IsCoffeeTho#0001: 👀
Limón#7879: it's a bit fucky
Limón#7879: me
IsCoffeeTho#0001: has anyone been able to get `mem` to work?
DADp#7461: .
Funky Egg#5652: like mod folders and mod id
Funky Egg#5652: also <@!154964593397989376> can you put numbers in mods
Limón#7879: python moment
Doctor Stupid#9197: ages ago i wrote a ton of coffeescript. it could do spaces or tabs but god help you if you try to mix them in the same file. its probably better in the long run to just pick one or the other and simplify the grammar
Limón#7879: it's probably because tab in vscode = 4 spaces
Limón#7879: oh
Limón#7879: I use tab
Limón#7879: 😭
Jimmy#8080: succ does not presently support tabs, see https://github.com/JimmyCushnie/SUCC/issues/31
Funky Egg#5652: my tab tabs further then that in a .succ file
Doctor Stupid#9197: the demo example / corresponding c# show it <@!692281400598200331> on the main page https://github.com/JimmyCushnie/SUCC
Jimmy#8080: It doesn't matter as long as it's consistent between sibling lines. I use 4 spaces
Limón#7879: it's a tab
Limón#7879: none
Funky Egg#5652: how many spaces is that
Limón#7879: lists
Jimmy#8080: you need a layer of indent on the `-` <[newline]> ``` <[newline]> blocks: <[newline]>     - <[newline]>         color: fffaaa <[newline]> ```
Funky Egg#5652: jimmy why are the dashes needed
DADp#7461: if you have syntax questions, you can always look at the main game mod
Funky Egg#5652: ty
Doctor Stupid#9197: yeah i have ilspy up, not seeing any types or namespaces by that identifier
Limón#7879: yes
Funky Egg#5652: do the dahes go inline for eg: <[newline]> ``` <[newline]> blocks: <[newline]> - <[newline]>   yourCode <[newline]> ```
Limón#7879: C# code
Doctor Stupid#9197: anyone happen to know what this is referring to? <[newline]> > AndGate: <[newline]> >     column: "Logic" <[newline]> >     prefab: dynamic <[newline]> >     logicCode: **__LogicWorld.LogicCode.AndGate__** <[newline]> >     placingRules: dynamic <[newline]>  <[newline]> i can't seem to find a reference to it in the /mhg or any of the logic* dlls
Limón#7879: time for updating
DADp#7461: NOOOO
Limón#7879: I forgot to add comments in the succ highlight 😭
Limón#7879: that would probably help
Limón#7879: I am creating an example mod for people
Doctor Stupid#9197: im sure they have a giant pile of more critical issues, plus there's that injury post up. i wouldnt worry about it
Limón#7879: ¯\_(ツ)_/¯
Limón#7879: idk my point there either
Limón#7879: I am tired
Limón#7879: I don't know why that has a :)
Limón#7879: and you aren't helping :)
Limón#7879: the whole modding community is being created
Jimmy#8080: yes they are required, they denote that it's a list of items
Jimmy#8080: see the pinned message, we aren't helping with this 😤
Funky Egg#5652: i need to ask jimmy/pipe
Limón#7879: so I would assume they are required
Limón#7879: they are from the base mod
Limón#7879: yes
Funky Egg#5652: do you put them in when coding
Limón#7879: pretty sure
Funky Egg#5652: do the '-' need to be there
Funky Egg#5652: ok ty
Limón#7879: ``` <[newline]> AndGate: <[newline]>     column: Logic <[newline]>     prefab: <[newline]>         blocks: <[newline]>             - <[newline]>                 color: (0, 174, 209) # The block's RGB color <[newline]>         inputs: <[newline]>             - <[newline]>                 position: (-0.25, 0.5, -0.5) # The position of the peg, relative to the center of the component <[newline]>                 rotation: (-90, 0, 0) # The rotation of this input peg <[newline]>                 length: 0.6 # The length of the peg, 0.6 is the standard length <[newline]>             - <[newline]>                 position: (0.25, 0.5, -0.5) <[newline]>                 rotation: (-90, 0, 0) <[newline]>                 length: 0.6 <[newline]>         outputs: <[newline]>             - <[newline]>                 position: (0, 0.5, 0.5) <[newline]>                 rotation: (90, 0, 0)```
DADp#7461: i thin
DADp#7461: well prefab needs to be un indented
DADp#7461: let me check
DADp#7461: that looks right
Funky Egg#5652: this is from the website
Funky Egg#5652: is this valid <[newline]> ``` <[newline]> AndGate: <[newline]>     column: Logic <[newline]>         prefab: <[newline]>             blocks: <[newline]>                     color: (0, 174, 209) # The block's RGB color <[newline]>             inputs: <[newline]>                     position: (-0.25, 0.5, -0.5) # The position of the peg, relative to the center of the component <[newline]>                     rotation: (-90, 0, 0) # The rotation of this input peg <[newline]>                     length: 0.6 # The length of the peg, 0.6 is the standard length <[newline]>  <[newline]>                     position: (0.25, 0.5, -0.5) <[newline]>                     rotation: (-90, 0, 0) <[newline]>                     length: 0.6 <[newline]>             outputs: <[newline]>                     position: (0, 0.5, 0.5) <[newline]>                     rotation: (90, 0, 0) <[newline]> ``` <[newline]> or does prefab need to be unindented
DADp#7461: i will personally come to any ones house, that does not put an apostrophe after a number, to do it for them
DADp#7461: <@!487413285403099136> accept my changes on github rnrnrnrnrn
Limon#9207: <@!274012313785466881> the author of the logiscript highlighter updated it so it includes else
Limón#7879: and only jimmy/pipe01 know
Limón#7879: I don't know exactly
Limón#7879: [a-z, A-Z, 0-9, _]
Limón#7879: the limits would be
Limón#7879: I think
Funky Egg#5652: Can the id for the mode have a plus on it and can the mod folder have a plus on it
Funky Egg#5652: I made the base of the mod but the game won’t launch
Limón#7879: what
JoshuaSpeedy#3545: How much is legally shitfaced?
Limon#9207: <@!274012313785466881> succ highlighter
Limón#7879: I think I should actually work on a mod
Limón#7879: I think I have contributed enough for qol
Limón#7879: https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.succ-highlighter
Limón#7879: https://github.com/LonnonDev/SuccHighlighting
Limón#7879: https://github.com/LonnonDev/LogiScriptHighlighting
ieee 802.11ac#6337: fuck me
Whisper#7076: 
Limón#7879: hightlighting
Limón#7879: 
Limón#7879: it's being verified still
ieee 802.11ac#6337: GIVE
ieee 802.11ac#6337: YES
Limón#7879: 
ieee 802.11ac#6337: look at this message
ieee 802.11ac#6337: don't care
ieee 802.11ac#6337: wrong channel
ieee 802.11ac#6337: <@!250764315253145600> .lsx files are the functional halves of modded components, the other part is defined in a .succ file
Jimmy#8080: 
Jimmy#8080: Earlier this year I majorly refactored building, all the new shit is in that assembly
Whisper#7076: Aight let's get in a vc and take a look at this lol
ieee 802.11ac#6337: anyways git repo is up for my mod https://github.com/ieee802dot11ac/garbagemod
Limón#7879: List of all the resources we have right now for modding <[newline]>  <[newline]> Mod Sharing Thread: <#910673109164638239> <[newline]>  <[newline]> C# modding guides can be found here https://github.com/LonnonDev/LW-Modding <[newline]> Modding Guide Contributers/Credits <[newline]> - <@244503493996445697>  <[newline]> - <@299685147220115457>  <[newline]> - <@274012313785466881>  <[newline]>  <[newline]> LogicScripts = Hot Reload <[newline]> SUCC & C# = Game Restart <[newline]>  <[newline]> Tool for components: https://bigmintymitch.itch.io/component-designer-for-logic-world <[newline]>  <[newline]> Save File Format: <[newline]> https://gist.github.com/JimmyCushnie/bebea37a21acbb6e669589967f9512a2 <[newline]>  <[newline]> Extensions/Documentation <[newline]> https://docs.logicworld.net/articles/intro.html <[newline]> https://github.com/pipe01/LogicScript/wiki/Syntax-reference <[newline]> https://github.com/pipe01/LogicScript/wiki/Example-code <[newline]> https://packagecontrol.io/packages/SUCC%20Syntax%20Highlighting <[newline]> https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.logiscript <[newline]> https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.succ-highlighter
ieee 802.11ac#6337: very nice, thank you
IsCoffeeTho#0001: found it
IsCoffeeTho#0001: https://marketplace.visualstudio.com/items?itemName=lonnonjamesd.logiscript
ieee 802.11ac#6337: yes
IsCoffeeTho#0001: is there a share link?
Limón#7879: the extension is called "Logiscript Extension"
Limón#7879: the extension is uploading
Limón#7879: 
Limón#7879: that look good?
Limón#7879: 
ieee 802.11ac#6337: good idea
oddron#8955: Have you considered putting this on github?
RyanT#1426: this is a tool I am making to make modding easier
ieee 802.11ac#6337: wait
ieee 802.11ac#6337: this is <#901659878869844048>
RyanT#1426: does anyone know how to fix this??!!
Doctor Stupid#9197: `LogicWorld.Building.NewShit` hilarious 😄
ieee 802.11ac#6337: f
Limón#7879: because idk
Limón#7879: doesn't work though
ieee 802.11ac#6337: dank
Limón#7879: it's a clock
Limón#7879: yes
ieee 802.11ac#6337: is this timer code
ieee 802.11ac#6337: nice
Limón#7879: 
Limón#7879: I am working on that :)
ieee 802.11ac#6337: might wanna gray out comments
Limón#7879: slowly getting it to work
Limón#7879: 
Limón#7879: and regex tester
Limón#7879: lots of looking up
ieee 802.11ac#6337: i don't know how to write a regex
Limón#7879: but it's so good
Limón#7879: sucks
Limón#7879: regex
Jimmy#8080: more like stopdot lmao gotem
RyanT#1426: umm... sorry godot, but that's not how I want my texture applied lol
IsCoffeeTho#0001: im gonna make a fuck ton of components for ease of access and if jimmy wants to just yoink my code and add it to the base game im happy with that
ieee 802.11ac#6337: the stuff that makes the components work
ieee 802.11ac#6337: well for one you have to work with the garbage language and for two the documentation is horrid
IsCoffeeTho#0001: its very fresh so its hard to tell
ieee 802.11ac#6337: the reason they're the same size is because of a joke i have, which is "using cursed techniques thought up by our engineers, we can now fit an entire full adder into the space of one XOR gate"
JPM-Baroque Spaceship#6542: how hard is to mod?
C4io#2688: What is that file?
ieee 802.11ac#6337: don't look at the .lsx files for your own sake
ieee 802.11ac#6337: i've updated it so now it has a full adder
Limón#7879: this is frustrating
ieee 802.11ac#6337: on today's episode of cursed programming: using arithmetic operators to make things work properly
Jimmy#8080: :)
IsCoffeeTho#0001: cheers
IsCoffeeTho#0001: oh shit
Jimmy#8080: https://github.com/jimmycushnie/succ
ieee 802.11ac#6337: anyways ?????
ieee 802.11ac#6337: i think that was pipe01
IsCoffeeTho#0001: so did you write the interpreter of the files?
JoshuaSpeedy#3545: Add a secret settings menu when the Konami code is entered
Jimmy#8080: saves a lot of time
Jimmy#8080: I always have it on when developing the game haha
ieee 802.11ac#6337: it worked! thank you jimmy
IsCoffeeTho#0001: i laughed when i first saw it
Limón#7879: succ is amazing
ieee 802.11ac#6337: 👀
Jimmy#8080: quotes are optional
ieee 802.11ac#6337: do i need to use quotes or can it just be a string like `mic check one two`
Limón#7879: this is a start
IsCoffeeTho#0001: jimmy sprinkling a bit of dev love
ieee 802.11ac#6337: got it
Dredonkey#8601: jimmy helping us just a little
Jimmy#8080: no, all secret settings are in `settings_master.succ`
ieee 802.11ac#6337: is that in settings_profile*.succ
IsCoffeeTho#0001: 👀 pog
Jimmy#8080: Oh, check the secret setting `MHG.LoadDirectlyIntoSaveWhenGameStarts`. It will skip the main menu and might help with mod development
IsCoffeeTho#0001: as long as i know the limitations it should be fine
Jimmy#8080: see the pinned message
ieee 802.11ac#6337: which sucks for mod development
Jimmy#8080: Currently you have to restart
ieee 802.11ac#6337: you have to restart the game
IsCoffeeTho#0001: is the only way to reload the mods just restarting the game or is there a secret button?
Limón#7879: so I have to upload it to test it
Limón#7879: I don't think there is a way to test it without uploading it -_-
Funky Egg#5652: Dm me when done with the link
Funky Egg#5652: Gl
Limón#7879: there is many hoops I have to go through since it's my first time making an extension
Funky Egg#5652: Pog
Limón#7879: vscode
Funky Egg#5652: Vscode or new ide
Funky Egg#5652: Should I start modding
ieee 802.11ac#6337: cool
Limón#7879: yes
ieee 802.11ac#6337: anyways is this a good color variation (left is full adder, right is half adder)
ieee 802.11ac#6337: i've only been at my dads the entire time the game has been out
ieee 802.11ac#6337: rip
DustyAngel47#7299: havent really been able to play it because at dads
ieee 802.11ac#6337: how are you enjoying the game so far
ieee 802.11ac#6337: oh hey drake isn't dead
DustyAngel47#7299: python rng be like
Jimmy#8080: that is rad
ieee 802.11ac#6337: thank you
Limón#7879: I am writing a syntax highlighter for logiscript
Limón#7879: anywayus
Limón#7879: funy
Limón#7879: mod
Jimmy#8080: <@!661212813326286858> you should see this
Jimmy#8080: made me laugh out loud <@!487413285403099136>
Jimmy#8080: hahahahahahahahaha
RyanT#1426: ok
ieee 802.11ac#6337: anyways, the rng had a bad day
ieee 802.11ac#6337: if you're up to the task then yea
RyanT#1426: should I do it?
RyanT#1426: hmm... I'm thinking of making a LW component prefab maker (it will be simple and prob not great, but easier than typing numbers)
ieee 802.11ac#6337: i'm hoping someone figures out how to put outputs on any side of a component sometime quickly because i need it
ardhati#9461: thats the mod im first getting although im pretty sure theres plans for something like that
ardhati#9461: its legit bound to happen
Jimmy#8080: it is not done and ready, you are on your own for now
Jimmy#8080: we aren't helping you with shit until we say it's done and ready
Jimmy#8080: see the pinned message
ieee 802.11ac#6337: also jimmy please for fuck's sake write functional logicscript examples
ieee 802.11ac#6337: hey look at my mod
JoshuaSpeedy#3545: First question I swear
ieee 802.11ac#6337: "Science isn't about "why", it's about "why not"!" -me, attempting to make a half adder component
RyanT#1426: if anyone knows how to make a C# component script, please tell me
musashi#0210: tiny brain cant comprehend pistons in this game
circuitgamer77#0377: How long do you think until someone makes a piston mod?
Jimmy#8080: 
Jimmy#8080: Modding is not officially supported yet. Everybody making mods is a cheeky little hacker. For now, we the developers are not providing support/help with modding, you are on your own. Also, everything about the current modding systems is WIP and will change a lot before it's done. <[newline]> Full, proper mod support - including examples, tutorials and documentation - is coming later in Early Access :)
ardhati#9461: beat me to it
ardhati#9461: darn
BarneyKB#0633: amogus
